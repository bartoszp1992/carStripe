
carStripe.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005e60  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e4  08005f1c  08005f1c  00015f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006000  08006000  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08006000  08006000  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006000  08006000  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006000  08006000  00016000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006004  08006004  00016004  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08006008  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000041c  2000005c  08006064  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000478  08006064  00020478  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000dc07  00000000  00000000  000200c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000028e8  00000000  00000000  0002dcce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000da8  00000000  00000000  000305b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000a62  00000000  00000000  00031360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019d7c  00000000  00000000  00031dc2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00011095  00000000  00000000  0004bb3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009e03f  00000000  00000000  0005cbd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000035b4  00000000  00000000  000fac14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000fe1c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	2000005c 	.word	0x2000005c
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08005f04 	.word	0x08005f04

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000060 	.word	0x20000060
 8000100:	08005f04 	.word	0x08005f04

08000104 <__udivsi3>:
 8000104:	2200      	movs	r2, #0
 8000106:	0843      	lsrs	r3, r0, #1
 8000108:	428b      	cmp	r3, r1
 800010a:	d374      	bcc.n	80001f6 <__udivsi3+0xf2>
 800010c:	0903      	lsrs	r3, r0, #4
 800010e:	428b      	cmp	r3, r1
 8000110:	d35f      	bcc.n	80001d2 <__udivsi3+0xce>
 8000112:	0a03      	lsrs	r3, r0, #8
 8000114:	428b      	cmp	r3, r1
 8000116:	d344      	bcc.n	80001a2 <__udivsi3+0x9e>
 8000118:	0b03      	lsrs	r3, r0, #12
 800011a:	428b      	cmp	r3, r1
 800011c:	d328      	bcc.n	8000170 <__udivsi3+0x6c>
 800011e:	0c03      	lsrs	r3, r0, #16
 8000120:	428b      	cmp	r3, r1
 8000122:	d30d      	bcc.n	8000140 <__udivsi3+0x3c>
 8000124:	22ff      	movs	r2, #255	; 0xff
 8000126:	0209      	lsls	r1, r1, #8
 8000128:	ba12      	rev	r2, r2
 800012a:	0c03      	lsrs	r3, r0, #16
 800012c:	428b      	cmp	r3, r1
 800012e:	d302      	bcc.n	8000136 <__udivsi3+0x32>
 8000130:	1212      	asrs	r2, r2, #8
 8000132:	0209      	lsls	r1, r1, #8
 8000134:	d065      	beq.n	8000202 <__udivsi3+0xfe>
 8000136:	0b03      	lsrs	r3, r0, #12
 8000138:	428b      	cmp	r3, r1
 800013a:	d319      	bcc.n	8000170 <__udivsi3+0x6c>
 800013c:	e000      	b.n	8000140 <__udivsi3+0x3c>
 800013e:	0a09      	lsrs	r1, r1, #8
 8000140:	0bc3      	lsrs	r3, r0, #15
 8000142:	428b      	cmp	r3, r1
 8000144:	d301      	bcc.n	800014a <__udivsi3+0x46>
 8000146:	03cb      	lsls	r3, r1, #15
 8000148:	1ac0      	subs	r0, r0, r3
 800014a:	4152      	adcs	r2, r2
 800014c:	0b83      	lsrs	r3, r0, #14
 800014e:	428b      	cmp	r3, r1
 8000150:	d301      	bcc.n	8000156 <__udivsi3+0x52>
 8000152:	038b      	lsls	r3, r1, #14
 8000154:	1ac0      	subs	r0, r0, r3
 8000156:	4152      	adcs	r2, r2
 8000158:	0b43      	lsrs	r3, r0, #13
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x5e>
 800015e:	034b      	lsls	r3, r1, #13
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b03      	lsrs	r3, r0, #12
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x6a>
 800016a:	030b      	lsls	r3, r1, #12
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0ac3      	lsrs	r3, r0, #11
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x76>
 8000176:	02cb      	lsls	r3, r1, #11
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0a83      	lsrs	r3, r0, #10
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x82>
 8000182:	028b      	lsls	r3, r1, #10
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0a43      	lsrs	r3, r0, #9
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x8e>
 800018e:	024b      	lsls	r3, r1, #9
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a03      	lsrs	r3, r0, #8
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x9a>
 800019a:	020b      	lsls	r3, r1, #8
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	d2cd      	bcs.n	800013e <__udivsi3+0x3a>
 80001a2:	09c3      	lsrs	r3, r0, #7
 80001a4:	428b      	cmp	r3, r1
 80001a6:	d301      	bcc.n	80001ac <__udivsi3+0xa8>
 80001a8:	01cb      	lsls	r3, r1, #7
 80001aa:	1ac0      	subs	r0, r0, r3
 80001ac:	4152      	adcs	r2, r2
 80001ae:	0983      	lsrs	r3, r0, #6
 80001b0:	428b      	cmp	r3, r1
 80001b2:	d301      	bcc.n	80001b8 <__udivsi3+0xb4>
 80001b4:	018b      	lsls	r3, r1, #6
 80001b6:	1ac0      	subs	r0, r0, r3
 80001b8:	4152      	adcs	r2, r2
 80001ba:	0943      	lsrs	r3, r0, #5
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xc0>
 80001c0:	014b      	lsls	r3, r1, #5
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0903      	lsrs	r3, r0, #4
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xcc>
 80001cc:	010b      	lsls	r3, r1, #4
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	08c3      	lsrs	r3, r0, #3
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xd8>
 80001d8:	00cb      	lsls	r3, r1, #3
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0883      	lsrs	r3, r0, #2
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xe4>
 80001e4:	008b      	lsls	r3, r1, #2
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0843      	lsrs	r3, r0, #1
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xf0>
 80001f0:	004b      	lsls	r3, r1, #1
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	1a41      	subs	r1, r0, r1
 80001f8:	d200      	bcs.n	80001fc <__udivsi3+0xf8>
 80001fa:	4601      	mov	r1, r0
 80001fc:	4152      	adcs	r2, r2
 80001fe:	4610      	mov	r0, r2
 8000200:	4770      	bx	lr
 8000202:	e7ff      	b.n	8000204 <__udivsi3+0x100>
 8000204:	b501      	push	{r0, lr}
 8000206:	2000      	movs	r0, #0
 8000208:	f000 f8f0 	bl	80003ec <__aeabi_idiv0>
 800020c:	bd02      	pop	{r1, pc}
 800020e:	46c0      	nop			; (mov r8, r8)

08000210 <__aeabi_uidivmod>:
 8000210:	2900      	cmp	r1, #0
 8000212:	d0f7      	beq.n	8000204 <__udivsi3+0x100>
 8000214:	e776      	b.n	8000104 <__udivsi3>
 8000216:	4770      	bx	lr

08000218 <__divsi3>:
 8000218:	4603      	mov	r3, r0
 800021a:	430b      	orrs	r3, r1
 800021c:	d47f      	bmi.n	800031e <__divsi3+0x106>
 800021e:	2200      	movs	r2, #0
 8000220:	0843      	lsrs	r3, r0, #1
 8000222:	428b      	cmp	r3, r1
 8000224:	d374      	bcc.n	8000310 <__divsi3+0xf8>
 8000226:	0903      	lsrs	r3, r0, #4
 8000228:	428b      	cmp	r3, r1
 800022a:	d35f      	bcc.n	80002ec <__divsi3+0xd4>
 800022c:	0a03      	lsrs	r3, r0, #8
 800022e:	428b      	cmp	r3, r1
 8000230:	d344      	bcc.n	80002bc <__divsi3+0xa4>
 8000232:	0b03      	lsrs	r3, r0, #12
 8000234:	428b      	cmp	r3, r1
 8000236:	d328      	bcc.n	800028a <__divsi3+0x72>
 8000238:	0c03      	lsrs	r3, r0, #16
 800023a:	428b      	cmp	r3, r1
 800023c:	d30d      	bcc.n	800025a <__divsi3+0x42>
 800023e:	22ff      	movs	r2, #255	; 0xff
 8000240:	0209      	lsls	r1, r1, #8
 8000242:	ba12      	rev	r2, r2
 8000244:	0c03      	lsrs	r3, r0, #16
 8000246:	428b      	cmp	r3, r1
 8000248:	d302      	bcc.n	8000250 <__divsi3+0x38>
 800024a:	1212      	asrs	r2, r2, #8
 800024c:	0209      	lsls	r1, r1, #8
 800024e:	d065      	beq.n	800031c <__divsi3+0x104>
 8000250:	0b03      	lsrs	r3, r0, #12
 8000252:	428b      	cmp	r3, r1
 8000254:	d319      	bcc.n	800028a <__divsi3+0x72>
 8000256:	e000      	b.n	800025a <__divsi3+0x42>
 8000258:	0a09      	lsrs	r1, r1, #8
 800025a:	0bc3      	lsrs	r3, r0, #15
 800025c:	428b      	cmp	r3, r1
 800025e:	d301      	bcc.n	8000264 <__divsi3+0x4c>
 8000260:	03cb      	lsls	r3, r1, #15
 8000262:	1ac0      	subs	r0, r0, r3
 8000264:	4152      	adcs	r2, r2
 8000266:	0b83      	lsrs	r3, r0, #14
 8000268:	428b      	cmp	r3, r1
 800026a:	d301      	bcc.n	8000270 <__divsi3+0x58>
 800026c:	038b      	lsls	r3, r1, #14
 800026e:	1ac0      	subs	r0, r0, r3
 8000270:	4152      	adcs	r2, r2
 8000272:	0b43      	lsrs	r3, r0, #13
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x64>
 8000278:	034b      	lsls	r3, r1, #13
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b03      	lsrs	r3, r0, #12
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x70>
 8000284:	030b      	lsls	r3, r1, #12
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0ac3      	lsrs	r3, r0, #11
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x7c>
 8000290:	02cb      	lsls	r3, r1, #11
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0a83      	lsrs	r3, r0, #10
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x88>
 800029c:	028b      	lsls	r3, r1, #10
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0a43      	lsrs	r3, r0, #9
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x94>
 80002a8:	024b      	lsls	r3, r1, #9
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a03      	lsrs	r3, r0, #8
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0xa0>
 80002b4:	020b      	lsls	r3, r1, #8
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	d2cd      	bcs.n	8000258 <__divsi3+0x40>
 80002bc:	09c3      	lsrs	r3, r0, #7
 80002be:	428b      	cmp	r3, r1
 80002c0:	d301      	bcc.n	80002c6 <__divsi3+0xae>
 80002c2:	01cb      	lsls	r3, r1, #7
 80002c4:	1ac0      	subs	r0, r0, r3
 80002c6:	4152      	adcs	r2, r2
 80002c8:	0983      	lsrs	r3, r0, #6
 80002ca:	428b      	cmp	r3, r1
 80002cc:	d301      	bcc.n	80002d2 <__divsi3+0xba>
 80002ce:	018b      	lsls	r3, r1, #6
 80002d0:	1ac0      	subs	r0, r0, r3
 80002d2:	4152      	adcs	r2, r2
 80002d4:	0943      	lsrs	r3, r0, #5
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xc6>
 80002da:	014b      	lsls	r3, r1, #5
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0903      	lsrs	r3, r0, #4
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xd2>
 80002e6:	010b      	lsls	r3, r1, #4
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	08c3      	lsrs	r3, r0, #3
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xde>
 80002f2:	00cb      	lsls	r3, r1, #3
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0883      	lsrs	r3, r0, #2
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xea>
 80002fe:	008b      	lsls	r3, r1, #2
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0843      	lsrs	r3, r0, #1
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xf6>
 800030a:	004b      	lsls	r3, r1, #1
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	1a41      	subs	r1, r0, r1
 8000312:	d200      	bcs.n	8000316 <__divsi3+0xfe>
 8000314:	4601      	mov	r1, r0
 8000316:	4152      	adcs	r2, r2
 8000318:	4610      	mov	r0, r2
 800031a:	4770      	bx	lr
 800031c:	e05d      	b.n	80003da <__divsi3+0x1c2>
 800031e:	0fca      	lsrs	r2, r1, #31
 8000320:	d000      	beq.n	8000324 <__divsi3+0x10c>
 8000322:	4249      	negs	r1, r1
 8000324:	1003      	asrs	r3, r0, #32
 8000326:	d300      	bcc.n	800032a <__divsi3+0x112>
 8000328:	4240      	negs	r0, r0
 800032a:	4053      	eors	r3, r2
 800032c:	2200      	movs	r2, #0
 800032e:	469c      	mov	ip, r3
 8000330:	0903      	lsrs	r3, r0, #4
 8000332:	428b      	cmp	r3, r1
 8000334:	d32d      	bcc.n	8000392 <__divsi3+0x17a>
 8000336:	0a03      	lsrs	r3, r0, #8
 8000338:	428b      	cmp	r3, r1
 800033a:	d312      	bcc.n	8000362 <__divsi3+0x14a>
 800033c:	22fc      	movs	r2, #252	; 0xfc
 800033e:	0189      	lsls	r1, r1, #6
 8000340:	ba12      	rev	r2, r2
 8000342:	0a03      	lsrs	r3, r0, #8
 8000344:	428b      	cmp	r3, r1
 8000346:	d30c      	bcc.n	8000362 <__divsi3+0x14a>
 8000348:	0189      	lsls	r1, r1, #6
 800034a:	1192      	asrs	r2, r2, #6
 800034c:	428b      	cmp	r3, r1
 800034e:	d308      	bcc.n	8000362 <__divsi3+0x14a>
 8000350:	0189      	lsls	r1, r1, #6
 8000352:	1192      	asrs	r2, r2, #6
 8000354:	428b      	cmp	r3, r1
 8000356:	d304      	bcc.n	8000362 <__divsi3+0x14a>
 8000358:	0189      	lsls	r1, r1, #6
 800035a:	d03a      	beq.n	80003d2 <__divsi3+0x1ba>
 800035c:	1192      	asrs	r2, r2, #6
 800035e:	e000      	b.n	8000362 <__divsi3+0x14a>
 8000360:	0989      	lsrs	r1, r1, #6
 8000362:	09c3      	lsrs	r3, r0, #7
 8000364:	428b      	cmp	r3, r1
 8000366:	d301      	bcc.n	800036c <__divsi3+0x154>
 8000368:	01cb      	lsls	r3, r1, #7
 800036a:	1ac0      	subs	r0, r0, r3
 800036c:	4152      	adcs	r2, r2
 800036e:	0983      	lsrs	r3, r0, #6
 8000370:	428b      	cmp	r3, r1
 8000372:	d301      	bcc.n	8000378 <__divsi3+0x160>
 8000374:	018b      	lsls	r3, r1, #6
 8000376:	1ac0      	subs	r0, r0, r3
 8000378:	4152      	adcs	r2, r2
 800037a:	0943      	lsrs	r3, r0, #5
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x16c>
 8000380:	014b      	lsls	r3, r1, #5
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0903      	lsrs	r3, r0, #4
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x178>
 800038c:	010b      	lsls	r3, r1, #4
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	08c3      	lsrs	r3, r0, #3
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x184>
 8000398:	00cb      	lsls	r3, r1, #3
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0883      	lsrs	r3, r0, #2
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x190>
 80003a4:	008b      	lsls	r3, r1, #2
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	d2d9      	bcs.n	8000360 <__divsi3+0x148>
 80003ac:	0843      	lsrs	r3, r0, #1
 80003ae:	428b      	cmp	r3, r1
 80003b0:	d301      	bcc.n	80003b6 <__divsi3+0x19e>
 80003b2:	004b      	lsls	r3, r1, #1
 80003b4:	1ac0      	subs	r0, r0, r3
 80003b6:	4152      	adcs	r2, r2
 80003b8:	1a41      	subs	r1, r0, r1
 80003ba:	d200      	bcs.n	80003be <__divsi3+0x1a6>
 80003bc:	4601      	mov	r1, r0
 80003be:	4663      	mov	r3, ip
 80003c0:	4152      	adcs	r2, r2
 80003c2:	105b      	asrs	r3, r3, #1
 80003c4:	4610      	mov	r0, r2
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x1b4>
 80003c8:	4240      	negs	r0, r0
 80003ca:	2b00      	cmp	r3, #0
 80003cc:	d500      	bpl.n	80003d0 <__divsi3+0x1b8>
 80003ce:	4249      	negs	r1, r1
 80003d0:	4770      	bx	lr
 80003d2:	4663      	mov	r3, ip
 80003d4:	105b      	asrs	r3, r3, #1
 80003d6:	d300      	bcc.n	80003da <__divsi3+0x1c2>
 80003d8:	4240      	negs	r0, r0
 80003da:	b501      	push	{r0, lr}
 80003dc:	2000      	movs	r0, #0
 80003de:	f000 f805 	bl	80003ec <__aeabi_idiv0>
 80003e2:	bd02      	pop	{r1, pc}

080003e4 <__aeabi_idivmod>:
 80003e4:	2900      	cmp	r1, #0
 80003e6:	d0f8      	beq.n	80003da <__divsi3+0x1c2>
 80003e8:	e716      	b.n	8000218 <__divsi3>
 80003ea:	4770      	bx	lr

080003ec <__aeabi_idiv0>:
 80003ec:	4770      	bx	lr
 80003ee:	46c0      	nop			; (mov r8, r8)

080003f0 <__aeabi_cfrcmple>:
 80003f0:	4684      	mov	ip, r0
 80003f2:	0008      	movs	r0, r1
 80003f4:	4661      	mov	r1, ip
 80003f6:	e7ff      	b.n	80003f8 <__aeabi_cfcmpeq>

080003f8 <__aeabi_cfcmpeq>:
 80003f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80003fa:	f000 fb71 	bl	8000ae0 <__lesf2>
 80003fe:	2800      	cmp	r0, #0
 8000400:	d401      	bmi.n	8000406 <__aeabi_cfcmpeq+0xe>
 8000402:	2100      	movs	r1, #0
 8000404:	42c8      	cmn	r0, r1
 8000406:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000408 <__aeabi_fcmpeq>:
 8000408:	b510      	push	{r4, lr}
 800040a:	f000 fafd 	bl	8000a08 <__eqsf2>
 800040e:	4240      	negs	r0, r0
 8000410:	3001      	adds	r0, #1
 8000412:	bd10      	pop	{r4, pc}

08000414 <__aeabi_fcmplt>:
 8000414:	b510      	push	{r4, lr}
 8000416:	f000 fb63 	bl	8000ae0 <__lesf2>
 800041a:	2800      	cmp	r0, #0
 800041c:	db01      	blt.n	8000422 <__aeabi_fcmplt+0xe>
 800041e:	2000      	movs	r0, #0
 8000420:	bd10      	pop	{r4, pc}
 8000422:	2001      	movs	r0, #1
 8000424:	bd10      	pop	{r4, pc}
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_fcmple>:
 8000428:	b510      	push	{r4, lr}
 800042a:	f000 fb59 	bl	8000ae0 <__lesf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	dd01      	ble.n	8000436 <__aeabi_fcmple+0xe>
 8000432:	2000      	movs	r0, #0
 8000434:	bd10      	pop	{r4, pc}
 8000436:	2001      	movs	r0, #1
 8000438:	bd10      	pop	{r4, pc}
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_fcmpgt>:
 800043c:	b510      	push	{r4, lr}
 800043e:	f000 fb09 	bl	8000a54 <__gesf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	dc01      	bgt.n	800044a <__aeabi_fcmpgt+0xe>
 8000446:	2000      	movs	r0, #0
 8000448:	bd10      	pop	{r4, pc}
 800044a:	2001      	movs	r0, #1
 800044c:	bd10      	pop	{r4, pc}
 800044e:	46c0      	nop			; (mov r8, r8)

08000450 <__aeabi_fcmpge>:
 8000450:	b510      	push	{r4, lr}
 8000452:	f000 faff 	bl	8000a54 <__gesf2>
 8000456:	2800      	cmp	r0, #0
 8000458:	da01      	bge.n	800045e <__aeabi_fcmpge+0xe>
 800045a:	2000      	movs	r0, #0
 800045c:	bd10      	pop	{r4, pc}
 800045e:	2001      	movs	r0, #1
 8000460:	bd10      	pop	{r4, pc}
 8000462:	46c0      	nop			; (mov r8, r8)

08000464 <__aeabi_f2uiz>:
 8000464:	219e      	movs	r1, #158	; 0x9e
 8000466:	b510      	push	{r4, lr}
 8000468:	05c9      	lsls	r1, r1, #23
 800046a:	1c04      	adds	r4, r0, #0
 800046c:	f7ff fff0 	bl	8000450 <__aeabi_fcmpge>
 8000470:	2800      	cmp	r0, #0
 8000472:	d103      	bne.n	800047c <__aeabi_f2uiz+0x18>
 8000474:	1c20      	adds	r0, r4, #0
 8000476:	f000 fe7b 	bl	8001170 <__aeabi_f2iz>
 800047a:	bd10      	pop	{r4, pc}
 800047c:	219e      	movs	r1, #158	; 0x9e
 800047e:	1c20      	adds	r0, r4, #0
 8000480:	05c9      	lsls	r1, r1, #23
 8000482:	f000 fcbf 	bl	8000e04 <__aeabi_fsub>
 8000486:	f000 fe73 	bl	8001170 <__aeabi_f2iz>
 800048a:	2380      	movs	r3, #128	; 0x80
 800048c:	061b      	lsls	r3, r3, #24
 800048e:	469c      	mov	ip, r3
 8000490:	4460      	add	r0, ip
 8000492:	e7f2      	b.n	800047a <__aeabi_f2uiz+0x16>

08000494 <__aeabi_fadd>:
 8000494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000496:	4647      	mov	r7, r8
 8000498:	46ce      	mov	lr, r9
 800049a:	024a      	lsls	r2, r1, #9
 800049c:	0243      	lsls	r3, r0, #9
 800049e:	0045      	lsls	r5, r0, #1
 80004a0:	0fc4      	lsrs	r4, r0, #31
 80004a2:	0a50      	lsrs	r0, r2, #9
 80004a4:	4680      	mov	r8, r0
 80004a6:	0048      	lsls	r0, r1, #1
 80004a8:	0a5b      	lsrs	r3, r3, #9
 80004aa:	0e00      	lsrs	r0, r0, #24
 80004ac:	0992      	lsrs	r2, r2, #6
 80004ae:	4694      	mov	ip, r2
 80004b0:	b580      	push	{r7, lr}
 80004b2:	001e      	movs	r6, r3
 80004b4:	4681      	mov	r9, r0
 80004b6:	0002      	movs	r2, r0
 80004b8:	0e2d      	lsrs	r5, r5, #24
 80004ba:	00df      	lsls	r7, r3, #3
 80004bc:	0fc9      	lsrs	r1, r1, #31
 80004be:	428c      	cmp	r4, r1
 80004c0:	d024      	beq.n	800050c <__aeabi_fadd+0x78>
 80004c2:	1a28      	subs	r0, r5, r0
 80004c4:	2800      	cmp	r0, #0
 80004c6:	dd0e      	ble.n	80004e6 <__aeabi_fadd+0x52>
 80004c8:	2a00      	cmp	r2, #0
 80004ca:	d13e      	bne.n	800054a <__aeabi_fadd+0xb6>
 80004cc:	4662      	mov	r2, ip
 80004ce:	2a00      	cmp	r2, #0
 80004d0:	d100      	bne.n	80004d4 <__aeabi_fadd+0x40>
 80004d2:	e0fd      	b.n	80006d0 <__aeabi_fadd+0x23c>
 80004d4:	1e42      	subs	r2, r0, #1
 80004d6:	2801      	cmp	r0, #1
 80004d8:	d100      	bne.n	80004dc <__aeabi_fadd+0x48>
 80004da:	e137      	b.n	800074c <__aeabi_fadd+0x2b8>
 80004dc:	28ff      	cmp	r0, #255	; 0xff
 80004de:	d100      	bne.n	80004e2 <__aeabi_fadd+0x4e>
 80004e0:	e0a9      	b.n	8000636 <__aeabi_fadd+0x1a2>
 80004e2:	0010      	movs	r0, r2
 80004e4:	e039      	b.n	800055a <__aeabi_fadd+0xc6>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	d063      	beq.n	80005b2 <__aeabi_fadd+0x11e>
 80004ea:	464b      	mov	r3, r9
 80004ec:	1b52      	subs	r2, r2, r5
 80004ee:	2d00      	cmp	r5, #0
 80004f0:	d000      	beq.n	80004f4 <__aeabi_fadd+0x60>
 80004f2:	e0e0      	b.n	80006b6 <__aeabi_fadd+0x222>
 80004f4:	2f00      	cmp	r7, #0
 80004f6:	d100      	bne.n	80004fa <__aeabi_fadd+0x66>
 80004f8:	e0ce      	b.n	8000698 <__aeabi_fadd+0x204>
 80004fa:	1e53      	subs	r3, r2, #1
 80004fc:	2a01      	cmp	r2, #1
 80004fe:	d100      	bne.n	8000502 <__aeabi_fadd+0x6e>
 8000500:	e155      	b.n	80007ae <__aeabi_fadd+0x31a>
 8000502:	2aff      	cmp	r2, #255	; 0xff
 8000504:	d100      	bne.n	8000508 <__aeabi_fadd+0x74>
 8000506:	e094      	b.n	8000632 <__aeabi_fadd+0x19e>
 8000508:	001a      	movs	r2, r3
 800050a:	e0d9      	b.n	80006c0 <__aeabi_fadd+0x22c>
 800050c:	1a2a      	subs	r2, r5, r0
 800050e:	2a00      	cmp	r2, #0
 8000510:	dc00      	bgt.n	8000514 <__aeabi_fadd+0x80>
 8000512:	e099      	b.n	8000648 <__aeabi_fadd+0x1b4>
 8000514:	2800      	cmp	r0, #0
 8000516:	d062      	beq.n	80005de <__aeabi_fadd+0x14a>
 8000518:	2dff      	cmp	r5, #255	; 0xff
 800051a:	d100      	bne.n	800051e <__aeabi_fadd+0x8a>
 800051c:	e08b      	b.n	8000636 <__aeabi_fadd+0x1a2>
 800051e:	2380      	movs	r3, #128	; 0x80
 8000520:	4661      	mov	r1, ip
 8000522:	04db      	lsls	r3, r3, #19
 8000524:	4319      	orrs	r1, r3
 8000526:	468c      	mov	ip, r1
 8000528:	2a1b      	cmp	r2, #27
 800052a:	dc00      	bgt.n	800052e <__aeabi_fadd+0x9a>
 800052c:	e0d2      	b.n	80006d4 <__aeabi_fadd+0x240>
 800052e:	2301      	movs	r3, #1
 8000530:	19db      	adds	r3, r3, r7
 8000532:	015a      	lsls	r2, r3, #5
 8000534:	d56a      	bpl.n	800060c <__aeabi_fadd+0x178>
 8000536:	3501      	adds	r5, #1
 8000538:	2dff      	cmp	r5, #255	; 0xff
 800053a:	d05b      	beq.n	80005f4 <__aeabi_fadd+0x160>
 800053c:	2201      	movs	r2, #1
 800053e:	49a3      	ldr	r1, [pc, #652]	; (80007cc <__aeabi_fadd+0x338>)
 8000540:	401a      	ands	r2, r3
 8000542:	085b      	lsrs	r3, r3, #1
 8000544:	400b      	ands	r3, r1
 8000546:	4313      	orrs	r3, r2
 8000548:	e01c      	b.n	8000584 <__aeabi_fadd+0xf0>
 800054a:	2dff      	cmp	r5, #255	; 0xff
 800054c:	d100      	bne.n	8000550 <__aeabi_fadd+0xbc>
 800054e:	e072      	b.n	8000636 <__aeabi_fadd+0x1a2>
 8000550:	2380      	movs	r3, #128	; 0x80
 8000552:	4662      	mov	r2, ip
 8000554:	04db      	lsls	r3, r3, #19
 8000556:	431a      	orrs	r2, r3
 8000558:	4694      	mov	ip, r2
 800055a:	281b      	cmp	r0, #27
 800055c:	dc00      	bgt.n	8000560 <__aeabi_fadd+0xcc>
 800055e:	e090      	b.n	8000682 <__aeabi_fadd+0x1ee>
 8000560:	2301      	movs	r3, #1
 8000562:	1afb      	subs	r3, r7, r3
 8000564:	015a      	lsls	r2, r3, #5
 8000566:	d551      	bpl.n	800060c <__aeabi_fadd+0x178>
 8000568:	019b      	lsls	r3, r3, #6
 800056a:	099e      	lsrs	r6, r3, #6
 800056c:	0030      	movs	r0, r6
 800056e:	f001 fd79 	bl	8002064 <__clzsi2>
 8000572:	0033      	movs	r3, r6
 8000574:	3805      	subs	r0, #5
 8000576:	4083      	lsls	r3, r0
 8000578:	4285      	cmp	r5, r0
 800057a:	dc00      	bgt.n	800057e <__aeabi_fadd+0xea>
 800057c:	e075      	b.n	800066a <__aeabi_fadd+0x1d6>
 800057e:	4a94      	ldr	r2, [pc, #592]	; (80007d0 <__aeabi_fadd+0x33c>)
 8000580:	1a2d      	subs	r5, r5, r0
 8000582:	4013      	ands	r3, r2
 8000584:	075a      	lsls	r2, r3, #29
 8000586:	d004      	beq.n	8000592 <__aeabi_fadd+0xfe>
 8000588:	220f      	movs	r2, #15
 800058a:	401a      	ands	r2, r3
 800058c:	2a04      	cmp	r2, #4
 800058e:	d000      	beq.n	8000592 <__aeabi_fadd+0xfe>
 8000590:	3304      	adds	r3, #4
 8000592:	015a      	lsls	r2, r3, #5
 8000594:	d53c      	bpl.n	8000610 <__aeabi_fadd+0x17c>
 8000596:	1c68      	adds	r0, r5, #1
 8000598:	2dfe      	cmp	r5, #254	; 0xfe
 800059a:	d02b      	beq.n	80005f4 <__aeabi_fadd+0x160>
 800059c:	019b      	lsls	r3, r3, #6
 800059e:	0a5e      	lsrs	r6, r3, #9
 80005a0:	b2c0      	uxtb	r0, r0
 80005a2:	05c0      	lsls	r0, r0, #23
 80005a4:	4330      	orrs	r0, r6
 80005a6:	07e4      	lsls	r4, r4, #31
 80005a8:	4320      	orrs	r0, r4
 80005aa:	bcc0      	pop	{r6, r7}
 80005ac:	46b9      	mov	r9, r7
 80005ae:	46b0      	mov	r8, r6
 80005b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005b2:	20fe      	movs	r0, #254	; 0xfe
 80005b4:	1c6a      	adds	r2, r5, #1
 80005b6:	4210      	tst	r0, r2
 80005b8:	d172      	bne.n	80006a0 <__aeabi_fadd+0x20c>
 80005ba:	2d00      	cmp	r5, #0
 80005bc:	d000      	beq.n	80005c0 <__aeabi_fadd+0x12c>
 80005be:	e0ae      	b.n	800071e <__aeabi_fadd+0x28a>
 80005c0:	2f00      	cmp	r7, #0
 80005c2:	d100      	bne.n	80005c6 <__aeabi_fadd+0x132>
 80005c4:	e0ec      	b.n	80007a0 <__aeabi_fadd+0x30c>
 80005c6:	4663      	mov	r3, ip
 80005c8:	2000      	movs	r0, #0
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d0e9      	beq.n	80005a2 <__aeabi_fadd+0x10e>
 80005ce:	1afb      	subs	r3, r7, r3
 80005d0:	015a      	lsls	r2, r3, #5
 80005d2:	d400      	bmi.n	80005d6 <__aeabi_fadd+0x142>
 80005d4:	e0f3      	b.n	80007be <__aeabi_fadd+0x32a>
 80005d6:	4663      	mov	r3, ip
 80005d8:	000c      	movs	r4, r1
 80005da:	1bdb      	subs	r3, r3, r7
 80005dc:	e7d2      	b.n	8000584 <__aeabi_fadd+0xf0>
 80005de:	4661      	mov	r1, ip
 80005e0:	2900      	cmp	r1, #0
 80005e2:	d05b      	beq.n	800069c <__aeabi_fadd+0x208>
 80005e4:	1e51      	subs	r1, r2, #1
 80005e6:	2a01      	cmp	r2, #1
 80005e8:	d100      	bne.n	80005ec <__aeabi_fadd+0x158>
 80005ea:	e0a7      	b.n	800073c <__aeabi_fadd+0x2a8>
 80005ec:	2aff      	cmp	r2, #255	; 0xff
 80005ee:	d022      	beq.n	8000636 <__aeabi_fadd+0x1a2>
 80005f0:	000a      	movs	r2, r1
 80005f2:	e799      	b.n	8000528 <__aeabi_fadd+0x94>
 80005f4:	20ff      	movs	r0, #255	; 0xff
 80005f6:	2600      	movs	r6, #0
 80005f8:	e7d3      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80005fa:	21fe      	movs	r1, #254	; 0xfe
 80005fc:	1c6a      	adds	r2, r5, #1
 80005fe:	4211      	tst	r1, r2
 8000600:	d073      	beq.n	80006ea <__aeabi_fadd+0x256>
 8000602:	2aff      	cmp	r2, #255	; 0xff
 8000604:	d0f6      	beq.n	80005f4 <__aeabi_fadd+0x160>
 8000606:	0015      	movs	r5, r2
 8000608:	4467      	add	r7, ip
 800060a:	087b      	lsrs	r3, r7, #1
 800060c:	075a      	lsls	r2, r3, #29
 800060e:	d1bb      	bne.n	8000588 <__aeabi_fadd+0xf4>
 8000610:	08db      	lsrs	r3, r3, #3
 8000612:	2dff      	cmp	r5, #255	; 0xff
 8000614:	d00f      	beq.n	8000636 <__aeabi_fadd+0x1a2>
 8000616:	025b      	lsls	r3, r3, #9
 8000618:	0a5e      	lsrs	r6, r3, #9
 800061a:	b2e8      	uxtb	r0, r5
 800061c:	e7c1      	b.n	80005a2 <__aeabi_fadd+0x10e>
 800061e:	4662      	mov	r2, ip
 8000620:	2a00      	cmp	r2, #0
 8000622:	d008      	beq.n	8000636 <__aeabi_fadd+0x1a2>
 8000624:	2280      	movs	r2, #128	; 0x80
 8000626:	03d2      	lsls	r2, r2, #15
 8000628:	4213      	tst	r3, r2
 800062a:	d004      	beq.n	8000636 <__aeabi_fadd+0x1a2>
 800062c:	4640      	mov	r0, r8
 800062e:	4210      	tst	r0, r2
 8000630:	d101      	bne.n	8000636 <__aeabi_fadd+0x1a2>
 8000632:	000c      	movs	r4, r1
 8000634:	4643      	mov	r3, r8
 8000636:	2b00      	cmp	r3, #0
 8000638:	d0dc      	beq.n	80005f4 <__aeabi_fadd+0x160>
 800063a:	2680      	movs	r6, #128	; 0x80
 800063c:	03f6      	lsls	r6, r6, #15
 800063e:	431e      	orrs	r6, r3
 8000640:	0276      	lsls	r6, r6, #9
 8000642:	20ff      	movs	r0, #255	; 0xff
 8000644:	0a76      	lsrs	r6, r6, #9
 8000646:	e7ac      	b.n	80005a2 <__aeabi_fadd+0x10e>
 8000648:	2a00      	cmp	r2, #0
 800064a:	d0d6      	beq.n	80005fa <__aeabi_fadd+0x166>
 800064c:	1b42      	subs	r2, r0, r5
 800064e:	2d00      	cmp	r5, #0
 8000650:	d05c      	beq.n	800070c <__aeabi_fadd+0x278>
 8000652:	28ff      	cmp	r0, #255	; 0xff
 8000654:	d0ee      	beq.n	8000634 <__aeabi_fadd+0x1a0>
 8000656:	2380      	movs	r3, #128	; 0x80
 8000658:	04db      	lsls	r3, r3, #19
 800065a:	431f      	orrs	r7, r3
 800065c:	2a1b      	cmp	r2, #27
 800065e:	dc00      	bgt.n	8000662 <__aeabi_fadd+0x1ce>
 8000660:	e082      	b.n	8000768 <__aeabi_fadd+0x2d4>
 8000662:	2301      	movs	r3, #1
 8000664:	464d      	mov	r5, r9
 8000666:	4463      	add	r3, ip
 8000668:	e763      	b.n	8000532 <__aeabi_fadd+0x9e>
 800066a:	2220      	movs	r2, #32
 800066c:	1b40      	subs	r0, r0, r5
 800066e:	3001      	adds	r0, #1
 8000670:	1a12      	subs	r2, r2, r0
 8000672:	0019      	movs	r1, r3
 8000674:	4093      	lsls	r3, r2
 8000676:	40c1      	lsrs	r1, r0
 8000678:	1e5a      	subs	r2, r3, #1
 800067a:	4193      	sbcs	r3, r2
 800067c:	2500      	movs	r5, #0
 800067e:	430b      	orrs	r3, r1
 8000680:	e780      	b.n	8000584 <__aeabi_fadd+0xf0>
 8000682:	2320      	movs	r3, #32
 8000684:	4661      	mov	r1, ip
 8000686:	1a1b      	subs	r3, r3, r0
 8000688:	4099      	lsls	r1, r3
 800068a:	4662      	mov	r2, ip
 800068c:	000b      	movs	r3, r1
 800068e:	40c2      	lsrs	r2, r0
 8000690:	1e59      	subs	r1, r3, #1
 8000692:	418b      	sbcs	r3, r1
 8000694:	4313      	orrs	r3, r2
 8000696:	e764      	b.n	8000562 <__aeabi_fadd+0xce>
 8000698:	000c      	movs	r4, r1
 800069a:	4643      	mov	r3, r8
 800069c:	0015      	movs	r5, r2
 800069e:	e7b8      	b.n	8000612 <__aeabi_fadd+0x17e>
 80006a0:	4663      	mov	r3, ip
 80006a2:	1afe      	subs	r6, r7, r3
 80006a4:	0173      	lsls	r3, r6, #5
 80006a6:	d445      	bmi.n	8000734 <__aeabi_fadd+0x2a0>
 80006a8:	2e00      	cmp	r6, #0
 80006aa:	d000      	beq.n	80006ae <__aeabi_fadd+0x21a>
 80006ac:	e75e      	b.n	800056c <__aeabi_fadd+0xd8>
 80006ae:	2400      	movs	r4, #0
 80006b0:	2000      	movs	r0, #0
 80006b2:	2600      	movs	r6, #0
 80006b4:	e775      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80006b6:	2bff      	cmp	r3, #255	; 0xff
 80006b8:	d0bb      	beq.n	8000632 <__aeabi_fadd+0x19e>
 80006ba:	2380      	movs	r3, #128	; 0x80
 80006bc:	04db      	lsls	r3, r3, #19
 80006be:	431f      	orrs	r7, r3
 80006c0:	2a1b      	cmp	r2, #27
 80006c2:	dd47      	ble.n	8000754 <__aeabi_fadd+0x2c0>
 80006c4:	2301      	movs	r3, #1
 80006c6:	4662      	mov	r2, ip
 80006c8:	000c      	movs	r4, r1
 80006ca:	464d      	mov	r5, r9
 80006cc:	1ad3      	subs	r3, r2, r3
 80006ce:	e749      	b.n	8000564 <__aeabi_fadd+0xd0>
 80006d0:	0005      	movs	r5, r0
 80006d2:	e79e      	b.n	8000612 <__aeabi_fadd+0x17e>
 80006d4:	4661      	mov	r1, ip
 80006d6:	2320      	movs	r3, #32
 80006d8:	40d1      	lsrs	r1, r2
 80006da:	1a9b      	subs	r3, r3, r2
 80006dc:	4662      	mov	r2, ip
 80006de:	409a      	lsls	r2, r3
 80006e0:	0013      	movs	r3, r2
 80006e2:	1e5a      	subs	r2, r3, #1
 80006e4:	4193      	sbcs	r3, r2
 80006e6:	430b      	orrs	r3, r1
 80006e8:	e722      	b.n	8000530 <__aeabi_fadd+0x9c>
 80006ea:	2d00      	cmp	r5, #0
 80006ec:	d146      	bne.n	800077c <__aeabi_fadd+0x2e8>
 80006ee:	2f00      	cmp	r7, #0
 80006f0:	d062      	beq.n	80007b8 <__aeabi_fadd+0x324>
 80006f2:	4663      	mov	r3, ip
 80006f4:	2000      	movs	r0, #0
 80006f6:	2b00      	cmp	r3, #0
 80006f8:	d100      	bne.n	80006fc <__aeabi_fadd+0x268>
 80006fa:	e752      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80006fc:	003b      	movs	r3, r7
 80006fe:	4463      	add	r3, ip
 8000700:	015a      	lsls	r2, r3, #5
 8000702:	d583      	bpl.n	800060c <__aeabi_fadd+0x178>
 8000704:	4a32      	ldr	r2, [pc, #200]	; (80007d0 <__aeabi_fadd+0x33c>)
 8000706:	3501      	adds	r5, #1
 8000708:	4013      	ands	r3, r2
 800070a:	e77f      	b.n	800060c <__aeabi_fadd+0x178>
 800070c:	2f00      	cmp	r7, #0
 800070e:	d0c4      	beq.n	800069a <__aeabi_fadd+0x206>
 8000710:	1e53      	subs	r3, r2, #1
 8000712:	2a01      	cmp	r2, #1
 8000714:	d012      	beq.n	800073c <__aeabi_fadd+0x2a8>
 8000716:	2aff      	cmp	r2, #255	; 0xff
 8000718:	d08c      	beq.n	8000634 <__aeabi_fadd+0x1a0>
 800071a:	001a      	movs	r2, r3
 800071c:	e79e      	b.n	800065c <__aeabi_fadd+0x1c8>
 800071e:	2f00      	cmp	r7, #0
 8000720:	d000      	beq.n	8000724 <__aeabi_fadd+0x290>
 8000722:	e77c      	b.n	800061e <__aeabi_fadd+0x18a>
 8000724:	4663      	mov	r3, ip
 8000726:	2b00      	cmp	r3, #0
 8000728:	d183      	bne.n	8000632 <__aeabi_fadd+0x19e>
 800072a:	2680      	movs	r6, #128	; 0x80
 800072c:	2400      	movs	r4, #0
 800072e:	20ff      	movs	r0, #255	; 0xff
 8000730:	03f6      	lsls	r6, r6, #15
 8000732:	e736      	b.n	80005a2 <__aeabi_fadd+0x10e>
 8000734:	4663      	mov	r3, ip
 8000736:	000c      	movs	r4, r1
 8000738:	1bde      	subs	r6, r3, r7
 800073a:	e717      	b.n	800056c <__aeabi_fadd+0xd8>
 800073c:	003b      	movs	r3, r7
 800073e:	4463      	add	r3, ip
 8000740:	2501      	movs	r5, #1
 8000742:	015a      	lsls	r2, r3, #5
 8000744:	d400      	bmi.n	8000748 <__aeabi_fadd+0x2b4>
 8000746:	e761      	b.n	800060c <__aeabi_fadd+0x178>
 8000748:	2502      	movs	r5, #2
 800074a:	e6f7      	b.n	800053c <__aeabi_fadd+0xa8>
 800074c:	4663      	mov	r3, ip
 800074e:	2501      	movs	r5, #1
 8000750:	1afb      	subs	r3, r7, r3
 8000752:	e707      	b.n	8000564 <__aeabi_fadd+0xd0>
 8000754:	2320      	movs	r3, #32
 8000756:	1a9b      	subs	r3, r3, r2
 8000758:	0038      	movs	r0, r7
 800075a:	409f      	lsls	r7, r3
 800075c:	003b      	movs	r3, r7
 800075e:	40d0      	lsrs	r0, r2
 8000760:	1e5a      	subs	r2, r3, #1
 8000762:	4193      	sbcs	r3, r2
 8000764:	4303      	orrs	r3, r0
 8000766:	e7ae      	b.n	80006c6 <__aeabi_fadd+0x232>
 8000768:	2320      	movs	r3, #32
 800076a:	1a9b      	subs	r3, r3, r2
 800076c:	0039      	movs	r1, r7
 800076e:	409f      	lsls	r7, r3
 8000770:	003b      	movs	r3, r7
 8000772:	40d1      	lsrs	r1, r2
 8000774:	1e5a      	subs	r2, r3, #1
 8000776:	4193      	sbcs	r3, r2
 8000778:	430b      	orrs	r3, r1
 800077a:	e773      	b.n	8000664 <__aeabi_fadd+0x1d0>
 800077c:	2f00      	cmp	r7, #0
 800077e:	d100      	bne.n	8000782 <__aeabi_fadd+0x2ee>
 8000780:	e758      	b.n	8000634 <__aeabi_fadd+0x1a0>
 8000782:	4662      	mov	r2, ip
 8000784:	2a00      	cmp	r2, #0
 8000786:	d100      	bne.n	800078a <__aeabi_fadd+0x2f6>
 8000788:	e755      	b.n	8000636 <__aeabi_fadd+0x1a2>
 800078a:	2280      	movs	r2, #128	; 0x80
 800078c:	03d2      	lsls	r2, r2, #15
 800078e:	4213      	tst	r3, r2
 8000790:	d100      	bne.n	8000794 <__aeabi_fadd+0x300>
 8000792:	e750      	b.n	8000636 <__aeabi_fadd+0x1a2>
 8000794:	4641      	mov	r1, r8
 8000796:	4211      	tst	r1, r2
 8000798:	d000      	beq.n	800079c <__aeabi_fadd+0x308>
 800079a:	e74c      	b.n	8000636 <__aeabi_fadd+0x1a2>
 800079c:	4643      	mov	r3, r8
 800079e:	e74a      	b.n	8000636 <__aeabi_fadd+0x1a2>
 80007a0:	4663      	mov	r3, ip
 80007a2:	2b00      	cmp	r3, #0
 80007a4:	d083      	beq.n	80006ae <__aeabi_fadd+0x21a>
 80007a6:	000c      	movs	r4, r1
 80007a8:	4646      	mov	r6, r8
 80007aa:	2000      	movs	r0, #0
 80007ac:	e6f9      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80007ae:	4663      	mov	r3, ip
 80007b0:	000c      	movs	r4, r1
 80007b2:	1bdb      	subs	r3, r3, r7
 80007b4:	3501      	adds	r5, #1
 80007b6:	e6d5      	b.n	8000564 <__aeabi_fadd+0xd0>
 80007b8:	4646      	mov	r6, r8
 80007ba:	2000      	movs	r0, #0
 80007bc:	e6f1      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80007be:	2b00      	cmp	r3, #0
 80007c0:	d000      	beq.n	80007c4 <__aeabi_fadd+0x330>
 80007c2:	e723      	b.n	800060c <__aeabi_fadd+0x178>
 80007c4:	2400      	movs	r4, #0
 80007c6:	2600      	movs	r6, #0
 80007c8:	e6eb      	b.n	80005a2 <__aeabi_fadd+0x10e>
 80007ca:	46c0      	nop			; (mov r8, r8)
 80007cc:	7dffffff 	.word	0x7dffffff
 80007d0:	fbffffff 	.word	0xfbffffff

080007d4 <__aeabi_fdiv>:
 80007d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007d6:	464f      	mov	r7, r9
 80007d8:	4646      	mov	r6, r8
 80007da:	46d6      	mov	lr, sl
 80007dc:	0245      	lsls	r5, r0, #9
 80007de:	b5c0      	push	{r6, r7, lr}
 80007e0:	0047      	lsls	r7, r0, #1
 80007e2:	1c0c      	adds	r4, r1, #0
 80007e4:	0a6d      	lsrs	r5, r5, #9
 80007e6:	0e3f      	lsrs	r7, r7, #24
 80007e8:	0fc6      	lsrs	r6, r0, #31
 80007ea:	2f00      	cmp	r7, #0
 80007ec:	d100      	bne.n	80007f0 <__aeabi_fdiv+0x1c>
 80007ee:	e06f      	b.n	80008d0 <__aeabi_fdiv+0xfc>
 80007f0:	2fff      	cmp	r7, #255	; 0xff
 80007f2:	d100      	bne.n	80007f6 <__aeabi_fdiv+0x22>
 80007f4:	e074      	b.n	80008e0 <__aeabi_fdiv+0x10c>
 80007f6:	2300      	movs	r3, #0
 80007f8:	2280      	movs	r2, #128	; 0x80
 80007fa:	4699      	mov	r9, r3
 80007fc:	469a      	mov	sl, r3
 80007fe:	00ed      	lsls	r5, r5, #3
 8000800:	04d2      	lsls	r2, r2, #19
 8000802:	4315      	orrs	r5, r2
 8000804:	3f7f      	subs	r7, #127	; 0x7f
 8000806:	0263      	lsls	r3, r4, #9
 8000808:	0a5b      	lsrs	r3, r3, #9
 800080a:	4698      	mov	r8, r3
 800080c:	0063      	lsls	r3, r4, #1
 800080e:	0e1b      	lsrs	r3, r3, #24
 8000810:	0fe4      	lsrs	r4, r4, #31
 8000812:	2b00      	cmp	r3, #0
 8000814:	d04d      	beq.n	80008b2 <__aeabi_fdiv+0xde>
 8000816:	2bff      	cmp	r3, #255	; 0xff
 8000818:	d045      	beq.n	80008a6 <__aeabi_fdiv+0xd2>
 800081a:	4642      	mov	r2, r8
 800081c:	2180      	movs	r1, #128	; 0x80
 800081e:	00d2      	lsls	r2, r2, #3
 8000820:	04c9      	lsls	r1, r1, #19
 8000822:	4311      	orrs	r1, r2
 8000824:	4688      	mov	r8, r1
 8000826:	2200      	movs	r2, #0
 8000828:	3b7f      	subs	r3, #127	; 0x7f
 800082a:	0031      	movs	r1, r6
 800082c:	1aff      	subs	r7, r7, r3
 800082e:	464b      	mov	r3, r9
 8000830:	4061      	eors	r1, r4
 8000832:	b2c9      	uxtb	r1, r1
 8000834:	2b0f      	cmp	r3, #15
 8000836:	d900      	bls.n	800083a <__aeabi_fdiv+0x66>
 8000838:	e0b8      	b.n	80009ac <__aeabi_fdiv+0x1d8>
 800083a:	4870      	ldr	r0, [pc, #448]	; (80009fc <__aeabi_fdiv+0x228>)
 800083c:	009b      	lsls	r3, r3, #2
 800083e:	58c3      	ldr	r3, [r0, r3]
 8000840:	469f      	mov	pc, r3
 8000842:	2300      	movs	r3, #0
 8000844:	4698      	mov	r8, r3
 8000846:	0026      	movs	r6, r4
 8000848:	4645      	mov	r5, r8
 800084a:	4692      	mov	sl, r2
 800084c:	4653      	mov	r3, sl
 800084e:	2b02      	cmp	r3, #2
 8000850:	d100      	bne.n	8000854 <__aeabi_fdiv+0x80>
 8000852:	e08d      	b.n	8000970 <__aeabi_fdiv+0x19c>
 8000854:	2b03      	cmp	r3, #3
 8000856:	d100      	bne.n	800085a <__aeabi_fdiv+0x86>
 8000858:	e0a1      	b.n	800099e <__aeabi_fdiv+0x1ca>
 800085a:	2b01      	cmp	r3, #1
 800085c:	d018      	beq.n	8000890 <__aeabi_fdiv+0xbc>
 800085e:	003b      	movs	r3, r7
 8000860:	337f      	adds	r3, #127	; 0x7f
 8000862:	2b00      	cmp	r3, #0
 8000864:	dd6d      	ble.n	8000942 <__aeabi_fdiv+0x16e>
 8000866:	076a      	lsls	r2, r5, #29
 8000868:	d004      	beq.n	8000874 <__aeabi_fdiv+0xa0>
 800086a:	220f      	movs	r2, #15
 800086c:	402a      	ands	r2, r5
 800086e:	2a04      	cmp	r2, #4
 8000870:	d000      	beq.n	8000874 <__aeabi_fdiv+0xa0>
 8000872:	3504      	adds	r5, #4
 8000874:	012a      	lsls	r2, r5, #4
 8000876:	d503      	bpl.n	8000880 <__aeabi_fdiv+0xac>
 8000878:	4b61      	ldr	r3, [pc, #388]	; (8000a00 <__aeabi_fdiv+0x22c>)
 800087a:	401d      	ands	r5, r3
 800087c:	003b      	movs	r3, r7
 800087e:	3380      	adds	r3, #128	; 0x80
 8000880:	2bfe      	cmp	r3, #254	; 0xfe
 8000882:	dd00      	ble.n	8000886 <__aeabi_fdiv+0xb2>
 8000884:	e074      	b.n	8000970 <__aeabi_fdiv+0x19c>
 8000886:	01aa      	lsls	r2, r5, #6
 8000888:	0a52      	lsrs	r2, r2, #9
 800088a:	b2d8      	uxtb	r0, r3
 800088c:	e002      	b.n	8000894 <__aeabi_fdiv+0xc0>
 800088e:	000e      	movs	r6, r1
 8000890:	2000      	movs	r0, #0
 8000892:	2200      	movs	r2, #0
 8000894:	05c0      	lsls	r0, r0, #23
 8000896:	07f6      	lsls	r6, r6, #31
 8000898:	4310      	orrs	r0, r2
 800089a:	4330      	orrs	r0, r6
 800089c:	bce0      	pop	{r5, r6, r7}
 800089e:	46ba      	mov	sl, r7
 80008a0:	46b1      	mov	r9, r6
 80008a2:	46a8      	mov	r8, r5
 80008a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008a6:	4643      	mov	r3, r8
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	d13f      	bne.n	800092c <__aeabi_fdiv+0x158>
 80008ac:	2202      	movs	r2, #2
 80008ae:	3fff      	subs	r7, #255	; 0xff
 80008b0:	e003      	b.n	80008ba <__aeabi_fdiv+0xe6>
 80008b2:	4643      	mov	r3, r8
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	d12d      	bne.n	8000914 <__aeabi_fdiv+0x140>
 80008b8:	2201      	movs	r2, #1
 80008ba:	0031      	movs	r1, r6
 80008bc:	464b      	mov	r3, r9
 80008be:	4061      	eors	r1, r4
 80008c0:	b2c9      	uxtb	r1, r1
 80008c2:	4313      	orrs	r3, r2
 80008c4:	2b0f      	cmp	r3, #15
 80008c6:	d838      	bhi.n	800093a <__aeabi_fdiv+0x166>
 80008c8:	484e      	ldr	r0, [pc, #312]	; (8000a04 <__aeabi_fdiv+0x230>)
 80008ca:	009b      	lsls	r3, r3, #2
 80008cc:	58c3      	ldr	r3, [r0, r3]
 80008ce:	469f      	mov	pc, r3
 80008d0:	2d00      	cmp	r5, #0
 80008d2:	d113      	bne.n	80008fc <__aeabi_fdiv+0x128>
 80008d4:	2304      	movs	r3, #4
 80008d6:	4699      	mov	r9, r3
 80008d8:	3b03      	subs	r3, #3
 80008da:	2700      	movs	r7, #0
 80008dc:	469a      	mov	sl, r3
 80008de:	e792      	b.n	8000806 <__aeabi_fdiv+0x32>
 80008e0:	2d00      	cmp	r5, #0
 80008e2:	d105      	bne.n	80008f0 <__aeabi_fdiv+0x11c>
 80008e4:	2308      	movs	r3, #8
 80008e6:	4699      	mov	r9, r3
 80008e8:	3b06      	subs	r3, #6
 80008ea:	27ff      	movs	r7, #255	; 0xff
 80008ec:	469a      	mov	sl, r3
 80008ee:	e78a      	b.n	8000806 <__aeabi_fdiv+0x32>
 80008f0:	230c      	movs	r3, #12
 80008f2:	4699      	mov	r9, r3
 80008f4:	3b09      	subs	r3, #9
 80008f6:	27ff      	movs	r7, #255	; 0xff
 80008f8:	469a      	mov	sl, r3
 80008fa:	e784      	b.n	8000806 <__aeabi_fdiv+0x32>
 80008fc:	0028      	movs	r0, r5
 80008fe:	f001 fbb1 	bl	8002064 <__clzsi2>
 8000902:	2776      	movs	r7, #118	; 0x76
 8000904:	1f43      	subs	r3, r0, #5
 8000906:	409d      	lsls	r5, r3
 8000908:	2300      	movs	r3, #0
 800090a:	427f      	negs	r7, r7
 800090c:	4699      	mov	r9, r3
 800090e:	469a      	mov	sl, r3
 8000910:	1a3f      	subs	r7, r7, r0
 8000912:	e778      	b.n	8000806 <__aeabi_fdiv+0x32>
 8000914:	4640      	mov	r0, r8
 8000916:	f001 fba5 	bl	8002064 <__clzsi2>
 800091a:	4642      	mov	r2, r8
 800091c:	1f43      	subs	r3, r0, #5
 800091e:	409a      	lsls	r2, r3
 8000920:	2376      	movs	r3, #118	; 0x76
 8000922:	425b      	negs	r3, r3
 8000924:	4690      	mov	r8, r2
 8000926:	1a1b      	subs	r3, r3, r0
 8000928:	2200      	movs	r2, #0
 800092a:	e77e      	b.n	800082a <__aeabi_fdiv+0x56>
 800092c:	2303      	movs	r3, #3
 800092e:	464a      	mov	r2, r9
 8000930:	431a      	orrs	r2, r3
 8000932:	4691      	mov	r9, r2
 8000934:	33fc      	adds	r3, #252	; 0xfc
 8000936:	2203      	movs	r2, #3
 8000938:	e777      	b.n	800082a <__aeabi_fdiv+0x56>
 800093a:	000e      	movs	r6, r1
 800093c:	20ff      	movs	r0, #255	; 0xff
 800093e:	2200      	movs	r2, #0
 8000940:	e7a8      	b.n	8000894 <__aeabi_fdiv+0xc0>
 8000942:	2201      	movs	r2, #1
 8000944:	1ad3      	subs	r3, r2, r3
 8000946:	2b1b      	cmp	r3, #27
 8000948:	dca2      	bgt.n	8000890 <__aeabi_fdiv+0xbc>
 800094a:	379e      	adds	r7, #158	; 0x9e
 800094c:	002a      	movs	r2, r5
 800094e:	40bd      	lsls	r5, r7
 8000950:	40da      	lsrs	r2, r3
 8000952:	1e6b      	subs	r3, r5, #1
 8000954:	419d      	sbcs	r5, r3
 8000956:	4315      	orrs	r5, r2
 8000958:	076a      	lsls	r2, r5, #29
 800095a:	d004      	beq.n	8000966 <__aeabi_fdiv+0x192>
 800095c:	220f      	movs	r2, #15
 800095e:	402a      	ands	r2, r5
 8000960:	2a04      	cmp	r2, #4
 8000962:	d000      	beq.n	8000966 <__aeabi_fdiv+0x192>
 8000964:	3504      	adds	r5, #4
 8000966:	016a      	lsls	r2, r5, #5
 8000968:	d544      	bpl.n	80009f4 <__aeabi_fdiv+0x220>
 800096a:	2001      	movs	r0, #1
 800096c:	2200      	movs	r2, #0
 800096e:	e791      	b.n	8000894 <__aeabi_fdiv+0xc0>
 8000970:	20ff      	movs	r0, #255	; 0xff
 8000972:	2200      	movs	r2, #0
 8000974:	e78e      	b.n	8000894 <__aeabi_fdiv+0xc0>
 8000976:	2280      	movs	r2, #128	; 0x80
 8000978:	2600      	movs	r6, #0
 800097a:	20ff      	movs	r0, #255	; 0xff
 800097c:	03d2      	lsls	r2, r2, #15
 800097e:	e789      	b.n	8000894 <__aeabi_fdiv+0xc0>
 8000980:	2300      	movs	r3, #0
 8000982:	4698      	mov	r8, r3
 8000984:	2280      	movs	r2, #128	; 0x80
 8000986:	03d2      	lsls	r2, r2, #15
 8000988:	4215      	tst	r5, r2
 800098a:	d008      	beq.n	800099e <__aeabi_fdiv+0x1ca>
 800098c:	4643      	mov	r3, r8
 800098e:	4213      	tst	r3, r2
 8000990:	d105      	bne.n	800099e <__aeabi_fdiv+0x1ca>
 8000992:	431a      	orrs	r2, r3
 8000994:	0252      	lsls	r2, r2, #9
 8000996:	0026      	movs	r6, r4
 8000998:	20ff      	movs	r0, #255	; 0xff
 800099a:	0a52      	lsrs	r2, r2, #9
 800099c:	e77a      	b.n	8000894 <__aeabi_fdiv+0xc0>
 800099e:	2280      	movs	r2, #128	; 0x80
 80009a0:	03d2      	lsls	r2, r2, #15
 80009a2:	432a      	orrs	r2, r5
 80009a4:	0252      	lsls	r2, r2, #9
 80009a6:	20ff      	movs	r0, #255	; 0xff
 80009a8:	0a52      	lsrs	r2, r2, #9
 80009aa:	e773      	b.n	8000894 <__aeabi_fdiv+0xc0>
 80009ac:	4642      	mov	r2, r8
 80009ae:	016b      	lsls	r3, r5, #5
 80009b0:	0155      	lsls	r5, r2, #5
 80009b2:	42ab      	cmp	r3, r5
 80009b4:	d21a      	bcs.n	80009ec <__aeabi_fdiv+0x218>
 80009b6:	201b      	movs	r0, #27
 80009b8:	2200      	movs	r2, #0
 80009ba:	3f01      	subs	r7, #1
 80009bc:	2601      	movs	r6, #1
 80009be:	001c      	movs	r4, r3
 80009c0:	0052      	lsls	r2, r2, #1
 80009c2:	005b      	lsls	r3, r3, #1
 80009c4:	2c00      	cmp	r4, #0
 80009c6:	db01      	blt.n	80009cc <__aeabi_fdiv+0x1f8>
 80009c8:	429d      	cmp	r5, r3
 80009ca:	d801      	bhi.n	80009d0 <__aeabi_fdiv+0x1fc>
 80009cc:	1b5b      	subs	r3, r3, r5
 80009ce:	4332      	orrs	r2, r6
 80009d0:	3801      	subs	r0, #1
 80009d2:	2800      	cmp	r0, #0
 80009d4:	d1f3      	bne.n	80009be <__aeabi_fdiv+0x1ea>
 80009d6:	1e58      	subs	r0, r3, #1
 80009d8:	4183      	sbcs	r3, r0
 80009da:	4313      	orrs	r3, r2
 80009dc:	001d      	movs	r5, r3
 80009de:	003b      	movs	r3, r7
 80009e0:	337f      	adds	r3, #127	; 0x7f
 80009e2:	000e      	movs	r6, r1
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	dd00      	ble.n	80009ea <__aeabi_fdiv+0x216>
 80009e8:	e73d      	b.n	8000866 <__aeabi_fdiv+0x92>
 80009ea:	e7aa      	b.n	8000942 <__aeabi_fdiv+0x16e>
 80009ec:	201a      	movs	r0, #26
 80009ee:	2201      	movs	r2, #1
 80009f0:	1b5b      	subs	r3, r3, r5
 80009f2:	e7e3      	b.n	80009bc <__aeabi_fdiv+0x1e8>
 80009f4:	01aa      	lsls	r2, r5, #6
 80009f6:	2000      	movs	r0, #0
 80009f8:	0a52      	lsrs	r2, r2, #9
 80009fa:	e74b      	b.n	8000894 <__aeabi_fdiv+0xc0>
 80009fc:	08005f1c 	.word	0x08005f1c
 8000a00:	f7ffffff 	.word	0xf7ffffff
 8000a04:	08005f5c 	.word	0x08005f5c

08000a08 <__eqsf2>:
 8000a08:	b570      	push	{r4, r5, r6, lr}
 8000a0a:	0042      	lsls	r2, r0, #1
 8000a0c:	0245      	lsls	r5, r0, #9
 8000a0e:	024e      	lsls	r6, r1, #9
 8000a10:	004c      	lsls	r4, r1, #1
 8000a12:	0fc3      	lsrs	r3, r0, #31
 8000a14:	0a6d      	lsrs	r5, r5, #9
 8000a16:	2001      	movs	r0, #1
 8000a18:	0e12      	lsrs	r2, r2, #24
 8000a1a:	0a76      	lsrs	r6, r6, #9
 8000a1c:	0e24      	lsrs	r4, r4, #24
 8000a1e:	0fc9      	lsrs	r1, r1, #31
 8000a20:	2aff      	cmp	r2, #255	; 0xff
 8000a22:	d006      	beq.n	8000a32 <__eqsf2+0x2a>
 8000a24:	2cff      	cmp	r4, #255	; 0xff
 8000a26:	d003      	beq.n	8000a30 <__eqsf2+0x28>
 8000a28:	42a2      	cmp	r2, r4
 8000a2a:	d101      	bne.n	8000a30 <__eqsf2+0x28>
 8000a2c:	42b5      	cmp	r5, r6
 8000a2e:	d006      	beq.n	8000a3e <__eqsf2+0x36>
 8000a30:	bd70      	pop	{r4, r5, r6, pc}
 8000a32:	2d00      	cmp	r5, #0
 8000a34:	d1fc      	bne.n	8000a30 <__eqsf2+0x28>
 8000a36:	2cff      	cmp	r4, #255	; 0xff
 8000a38:	d1fa      	bne.n	8000a30 <__eqsf2+0x28>
 8000a3a:	2e00      	cmp	r6, #0
 8000a3c:	d1f8      	bne.n	8000a30 <__eqsf2+0x28>
 8000a3e:	428b      	cmp	r3, r1
 8000a40:	d006      	beq.n	8000a50 <__eqsf2+0x48>
 8000a42:	2001      	movs	r0, #1
 8000a44:	2a00      	cmp	r2, #0
 8000a46:	d1f3      	bne.n	8000a30 <__eqsf2+0x28>
 8000a48:	0028      	movs	r0, r5
 8000a4a:	1e43      	subs	r3, r0, #1
 8000a4c:	4198      	sbcs	r0, r3
 8000a4e:	e7ef      	b.n	8000a30 <__eqsf2+0x28>
 8000a50:	2000      	movs	r0, #0
 8000a52:	e7ed      	b.n	8000a30 <__eqsf2+0x28>

08000a54 <__gesf2>:
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	0042      	lsls	r2, r0, #1
 8000a58:	0245      	lsls	r5, r0, #9
 8000a5a:	024e      	lsls	r6, r1, #9
 8000a5c:	004c      	lsls	r4, r1, #1
 8000a5e:	0fc3      	lsrs	r3, r0, #31
 8000a60:	0a6d      	lsrs	r5, r5, #9
 8000a62:	0e12      	lsrs	r2, r2, #24
 8000a64:	0a76      	lsrs	r6, r6, #9
 8000a66:	0e24      	lsrs	r4, r4, #24
 8000a68:	0fc8      	lsrs	r0, r1, #31
 8000a6a:	2aff      	cmp	r2, #255	; 0xff
 8000a6c:	d01b      	beq.n	8000aa6 <__gesf2+0x52>
 8000a6e:	2cff      	cmp	r4, #255	; 0xff
 8000a70:	d00e      	beq.n	8000a90 <__gesf2+0x3c>
 8000a72:	2a00      	cmp	r2, #0
 8000a74:	d11b      	bne.n	8000aae <__gesf2+0x5a>
 8000a76:	2c00      	cmp	r4, #0
 8000a78:	d101      	bne.n	8000a7e <__gesf2+0x2a>
 8000a7a:	2e00      	cmp	r6, #0
 8000a7c:	d01c      	beq.n	8000ab8 <__gesf2+0x64>
 8000a7e:	2d00      	cmp	r5, #0
 8000a80:	d00c      	beq.n	8000a9c <__gesf2+0x48>
 8000a82:	4283      	cmp	r3, r0
 8000a84:	d01c      	beq.n	8000ac0 <__gesf2+0x6c>
 8000a86:	2102      	movs	r1, #2
 8000a88:	1e58      	subs	r0, r3, #1
 8000a8a:	4008      	ands	r0, r1
 8000a8c:	3801      	subs	r0, #1
 8000a8e:	bd70      	pop	{r4, r5, r6, pc}
 8000a90:	2e00      	cmp	r6, #0
 8000a92:	d122      	bne.n	8000ada <__gesf2+0x86>
 8000a94:	2a00      	cmp	r2, #0
 8000a96:	d1f4      	bne.n	8000a82 <__gesf2+0x2e>
 8000a98:	2d00      	cmp	r5, #0
 8000a9a:	d1f2      	bne.n	8000a82 <__gesf2+0x2e>
 8000a9c:	2800      	cmp	r0, #0
 8000a9e:	d1f6      	bne.n	8000a8e <__gesf2+0x3a>
 8000aa0:	2001      	movs	r0, #1
 8000aa2:	4240      	negs	r0, r0
 8000aa4:	e7f3      	b.n	8000a8e <__gesf2+0x3a>
 8000aa6:	2d00      	cmp	r5, #0
 8000aa8:	d117      	bne.n	8000ada <__gesf2+0x86>
 8000aaa:	2cff      	cmp	r4, #255	; 0xff
 8000aac:	d0f0      	beq.n	8000a90 <__gesf2+0x3c>
 8000aae:	2c00      	cmp	r4, #0
 8000ab0:	d1e7      	bne.n	8000a82 <__gesf2+0x2e>
 8000ab2:	2e00      	cmp	r6, #0
 8000ab4:	d1e5      	bne.n	8000a82 <__gesf2+0x2e>
 8000ab6:	e7e6      	b.n	8000a86 <__gesf2+0x32>
 8000ab8:	2000      	movs	r0, #0
 8000aba:	2d00      	cmp	r5, #0
 8000abc:	d0e7      	beq.n	8000a8e <__gesf2+0x3a>
 8000abe:	e7e2      	b.n	8000a86 <__gesf2+0x32>
 8000ac0:	42a2      	cmp	r2, r4
 8000ac2:	dc05      	bgt.n	8000ad0 <__gesf2+0x7c>
 8000ac4:	dbea      	blt.n	8000a9c <__gesf2+0x48>
 8000ac6:	42b5      	cmp	r5, r6
 8000ac8:	d802      	bhi.n	8000ad0 <__gesf2+0x7c>
 8000aca:	d3e7      	bcc.n	8000a9c <__gesf2+0x48>
 8000acc:	2000      	movs	r0, #0
 8000ace:	e7de      	b.n	8000a8e <__gesf2+0x3a>
 8000ad0:	4243      	negs	r3, r0
 8000ad2:	4158      	adcs	r0, r3
 8000ad4:	0040      	lsls	r0, r0, #1
 8000ad6:	3801      	subs	r0, #1
 8000ad8:	e7d9      	b.n	8000a8e <__gesf2+0x3a>
 8000ada:	2002      	movs	r0, #2
 8000adc:	4240      	negs	r0, r0
 8000ade:	e7d6      	b.n	8000a8e <__gesf2+0x3a>

08000ae0 <__lesf2>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	0042      	lsls	r2, r0, #1
 8000ae4:	0245      	lsls	r5, r0, #9
 8000ae6:	024e      	lsls	r6, r1, #9
 8000ae8:	004c      	lsls	r4, r1, #1
 8000aea:	0fc3      	lsrs	r3, r0, #31
 8000aec:	0a6d      	lsrs	r5, r5, #9
 8000aee:	0e12      	lsrs	r2, r2, #24
 8000af0:	0a76      	lsrs	r6, r6, #9
 8000af2:	0e24      	lsrs	r4, r4, #24
 8000af4:	0fc8      	lsrs	r0, r1, #31
 8000af6:	2aff      	cmp	r2, #255	; 0xff
 8000af8:	d00b      	beq.n	8000b12 <__lesf2+0x32>
 8000afa:	2cff      	cmp	r4, #255	; 0xff
 8000afc:	d00d      	beq.n	8000b1a <__lesf2+0x3a>
 8000afe:	2a00      	cmp	r2, #0
 8000b00:	d11f      	bne.n	8000b42 <__lesf2+0x62>
 8000b02:	2c00      	cmp	r4, #0
 8000b04:	d116      	bne.n	8000b34 <__lesf2+0x54>
 8000b06:	2e00      	cmp	r6, #0
 8000b08:	d114      	bne.n	8000b34 <__lesf2+0x54>
 8000b0a:	2000      	movs	r0, #0
 8000b0c:	2d00      	cmp	r5, #0
 8000b0e:	d010      	beq.n	8000b32 <__lesf2+0x52>
 8000b10:	e009      	b.n	8000b26 <__lesf2+0x46>
 8000b12:	2d00      	cmp	r5, #0
 8000b14:	d10c      	bne.n	8000b30 <__lesf2+0x50>
 8000b16:	2cff      	cmp	r4, #255	; 0xff
 8000b18:	d113      	bne.n	8000b42 <__lesf2+0x62>
 8000b1a:	2e00      	cmp	r6, #0
 8000b1c:	d108      	bne.n	8000b30 <__lesf2+0x50>
 8000b1e:	2a00      	cmp	r2, #0
 8000b20:	d008      	beq.n	8000b34 <__lesf2+0x54>
 8000b22:	4283      	cmp	r3, r0
 8000b24:	d012      	beq.n	8000b4c <__lesf2+0x6c>
 8000b26:	2102      	movs	r1, #2
 8000b28:	1e58      	subs	r0, r3, #1
 8000b2a:	4008      	ands	r0, r1
 8000b2c:	3801      	subs	r0, #1
 8000b2e:	e000      	b.n	8000b32 <__lesf2+0x52>
 8000b30:	2002      	movs	r0, #2
 8000b32:	bd70      	pop	{r4, r5, r6, pc}
 8000b34:	2d00      	cmp	r5, #0
 8000b36:	d1f4      	bne.n	8000b22 <__lesf2+0x42>
 8000b38:	2800      	cmp	r0, #0
 8000b3a:	d1fa      	bne.n	8000b32 <__lesf2+0x52>
 8000b3c:	2001      	movs	r0, #1
 8000b3e:	4240      	negs	r0, r0
 8000b40:	e7f7      	b.n	8000b32 <__lesf2+0x52>
 8000b42:	2c00      	cmp	r4, #0
 8000b44:	d1ed      	bne.n	8000b22 <__lesf2+0x42>
 8000b46:	2e00      	cmp	r6, #0
 8000b48:	d1eb      	bne.n	8000b22 <__lesf2+0x42>
 8000b4a:	e7ec      	b.n	8000b26 <__lesf2+0x46>
 8000b4c:	42a2      	cmp	r2, r4
 8000b4e:	dc05      	bgt.n	8000b5c <__lesf2+0x7c>
 8000b50:	dbf2      	blt.n	8000b38 <__lesf2+0x58>
 8000b52:	42b5      	cmp	r5, r6
 8000b54:	d802      	bhi.n	8000b5c <__lesf2+0x7c>
 8000b56:	d3ef      	bcc.n	8000b38 <__lesf2+0x58>
 8000b58:	2000      	movs	r0, #0
 8000b5a:	e7ea      	b.n	8000b32 <__lesf2+0x52>
 8000b5c:	4243      	negs	r3, r0
 8000b5e:	4158      	adcs	r0, r3
 8000b60:	0040      	lsls	r0, r0, #1
 8000b62:	3801      	subs	r0, #1
 8000b64:	e7e5      	b.n	8000b32 <__lesf2+0x52>
 8000b66:	46c0      	nop			; (mov r8, r8)

08000b68 <__aeabi_fmul>:
 8000b68:	0243      	lsls	r3, r0, #9
 8000b6a:	0a5b      	lsrs	r3, r3, #9
 8000b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b6e:	464f      	mov	r7, r9
 8000b70:	4646      	mov	r6, r8
 8000b72:	4699      	mov	r9, r3
 8000b74:	46d6      	mov	lr, sl
 8000b76:	0fc3      	lsrs	r3, r0, #31
 8000b78:	0045      	lsls	r5, r0, #1
 8000b7a:	4698      	mov	r8, r3
 8000b7c:	b5c0      	push	{r6, r7, lr}
 8000b7e:	464b      	mov	r3, r9
 8000b80:	1c0f      	adds	r7, r1, #0
 8000b82:	0e2d      	lsrs	r5, r5, #24
 8000b84:	d100      	bne.n	8000b88 <__aeabi_fmul+0x20>
 8000b86:	e0cb      	b.n	8000d20 <__aeabi_fmul+0x1b8>
 8000b88:	2dff      	cmp	r5, #255	; 0xff
 8000b8a:	d100      	bne.n	8000b8e <__aeabi_fmul+0x26>
 8000b8c:	e0cf      	b.n	8000d2e <__aeabi_fmul+0x1c6>
 8000b8e:	2280      	movs	r2, #128	; 0x80
 8000b90:	00db      	lsls	r3, r3, #3
 8000b92:	04d2      	lsls	r2, r2, #19
 8000b94:	431a      	orrs	r2, r3
 8000b96:	2300      	movs	r3, #0
 8000b98:	4691      	mov	r9, r2
 8000b9a:	2600      	movs	r6, #0
 8000b9c:	469a      	mov	sl, r3
 8000b9e:	3d7f      	subs	r5, #127	; 0x7f
 8000ba0:	027c      	lsls	r4, r7, #9
 8000ba2:	007b      	lsls	r3, r7, #1
 8000ba4:	0a64      	lsrs	r4, r4, #9
 8000ba6:	0e1b      	lsrs	r3, r3, #24
 8000ba8:	0fff      	lsrs	r7, r7, #31
 8000baa:	2b00      	cmp	r3, #0
 8000bac:	d100      	bne.n	8000bb0 <__aeabi_fmul+0x48>
 8000bae:	e0a9      	b.n	8000d04 <__aeabi_fmul+0x19c>
 8000bb0:	2bff      	cmp	r3, #255	; 0xff
 8000bb2:	d011      	beq.n	8000bd8 <__aeabi_fmul+0x70>
 8000bb4:	2280      	movs	r2, #128	; 0x80
 8000bb6:	00e4      	lsls	r4, r4, #3
 8000bb8:	04d2      	lsls	r2, r2, #19
 8000bba:	4314      	orrs	r4, r2
 8000bbc:	4642      	mov	r2, r8
 8000bbe:	3b7f      	subs	r3, #127	; 0x7f
 8000bc0:	195b      	adds	r3, r3, r5
 8000bc2:	407a      	eors	r2, r7
 8000bc4:	2000      	movs	r0, #0
 8000bc6:	b2d2      	uxtb	r2, r2
 8000bc8:	1c5d      	adds	r5, r3, #1
 8000bca:	2e0a      	cmp	r6, #10
 8000bcc:	dd13      	ble.n	8000bf6 <__aeabi_fmul+0x8e>
 8000bce:	003a      	movs	r2, r7
 8000bd0:	2e0b      	cmp	r6, #11
 8000bd2:	d047      	beq.n	8000c64 <__aeabi_fmul+0xfc>
 8000bd4:	4647      	mov	r7, r8
 8000bd6:	e03f      	b.n	8000c58 <__aeabi_fmul+0xf0>
 8000bd8:	002b      	movs	r3, r5
 8000bda:	33ff      	adds	r3, #255	; 0xff
 8000bdc:	2c00      	cmp	r4, #0
 8000bde:	d11e      	bne.n	8000c1e <__aeabi_fmul+0xb6>
 8000be0:	2202      	movs	r2, #2
 8000be2:	4316      	orrs	r6, r2
 8000be4:	4642      	mov	r2, r8
 8000be6:	3501      	adds	r5, #1
 8000be8:	407a      	eors	r2, r7
 8000bea:	b2d2      	uxtb	r2, r2
 8000bec:	35ff      	adds	r5, #255	; 0xff
 8000bee:	2e0a      	cmp	r6, #10
 8000bf0:	dd00      	ble.n	8000bf4 <__aeabi_fmul+0x8c>
 8000bf2:	e0e4      	b.n	8000dbe <__aeabi_fmul+0x256>
 8000bf4:	2002      	movs	r0, #2
 8000bf6:	2e02      	cmp	r6, #2
 8000bf8:	dc1c      	bgt.n	8000c34 <__aeabi_fmul+0xcc>
 8000bfa:	3e01      	subs	r6, #1
 8000bfc:	2e01      	cmp	r6, #1
 8000bfe:	d842      	bhi.n	8000c86 <__aeabi_fmul+0x11e>
 8000c00:	2802      	cmp	r0, #2
 8000c02:	d03d      	beq.n	8000c80 <__aeabi_fmul+0x118>
 8000c04:	2801      	cmp	r0, #1
 8000c06:	d166      	bne.n	8000cd6 <__aeabi_fmul+0x16e>
 8000c08:	2000      	movs	r0, #0
 8000c0a:	2100      	movs	r1, #0
 8000c0c:	05c0      	lsls	r0, r0, #23
 8000c0e:	4308      	orrs	r0, r1
 8000c10:	07d2      	lsls	r2, r2, #31
 8000c12:	4310      	orrs	r0, r2
 8000c14:	bce0      	pop	{r5, r6, r7}
 8000c16:	46ba      	mov	sl, r7
 8000c18:	46b1      	mov	r9, r6
 8000c1a:	46a8      	mov	r8, r5
 8000c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c1e:	2203      	movs	r2, #3
 8000c20:	4316      	orrs	r6, r2
 8000c22:	4642      	mov	r2, r8
 8000c24:	3501      	adds	r5, #1
 8000c26:	407a      	eors	r2, r7
 8000c28:	b2d2      	uxtb	r2, r2
 8000c2a:	35ff      	adds	r5, #255	; 0xff
 8000c2c:	2e0a      	cmp	r6, #10
 8000c2e:	dd00      	ble.n	8000c32 <__aeabi_fmul+0xca>
 8000c30:	e0e4      	b.n	8000dfc <__aeabi_fmul+0x294>
 8000c32:	2003      	movs	r0, #3
 8000c34:	2101      	movs	r1, #1
 8000c36:	40b1      	lsls	r1, r6
 8000c38:	26a6      	movs	r6, #166	; 0xa6
 8000c3a:	00f6      	lsls	r6, r6, #3
 8000c3c:	4231      	tst	r1, r6
 8000c3e:	d10a      	bne.n	8000c56 <__aeabi_fmul+0xee>
 8000c40:	2690      	movs	r6, #144	; 0x90
 8000c42:	00b6      	lsls	r6, r6, #2
 8000c44:	4231      	tst	r1, r6
 8000c46:	d116      	bne.n	8000c76 <__aeabi_fmul+0x10e>
 8000c48:	3eb9      	subs	r6, #185	; 0xb9
 8000c4a:	3eff      	subs	r6, #255	; 0xff
 8000c4c:	420e      	tst	r6, r1
 8000c4e:	d01a      	beq.n	8000c86 <__aeabi_fmul+0x11e>
 8000c50:	46a1      	mov	r9, r4
 8000c52:	4682      	mov	sl, r0
 8000c54:	e000      	b.n	8000c58 <__aeabi_fmul+0xf0>
 8000c56:	0017      	movs	r7, r2
 8000c58:	4653      	mov	r3, sl
 8000c5a:	003a      	movs	r2, r7
 8000c5c:	2b02      	cmp	r3, #2
 8000c5e:	d00f      	beq.n	8000c80 <__aeabi_fmul+0x118>
 8000c60:	464c      	mov	r4, r9
 8000c62:	4650      	mov	r0, sl
 8000c64:	2803      	cmp	r0, #3
 8000c66:	d1cd      	bne.n	8000c04 <__aeabi_fmul+0x9c>
 8000c68:	2180      	movs	r1, #128	; 0x80
 8000c6a:	03c9      	lsls	r1, r1, #15
 8000c6c:	4321      	orrs	r1, r4
 8000c6e:	0249      	lsls	r1, r1, #9
 8000c70:	20ff      	movs	r0, #255	; 0xff
 8000c72:	0a49      	lsrs	r1, r1, #9
 8000c74:	e7ca      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000c76:	2180      	movs	r1, #128	; 0x80
 8000c78:	2200      	movs	r2, #0
 8000c7a:	20ff      	movs	r0, #255	; 0xff
 8000c7c:	03c9      	lsls	r1, r1, #15
 8000c7e:	e7c5      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000c80:	20ff      	movs	r0, #255	; 0xff
 8000c82:	2100      	movs	r1, #0
 8000c84:	e7c2      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000c86:	0c20      	lsrs	r0, r4, #16
 8000c88:	4649      	mov	r1, r9
 8000c8a:	0424      	lsls	r4, r4, #16
 8000c8c:	0c24      	lsrs	r4, r4, #16
 8000c8e:	0027      	movs	r7, r4
 8000c90:	0c0e      	lsrs	r6, r1, #16
 8000c92:	0409      	lsls	r1, r1, #16
 8000c94:	0c09      	lsrs	r1, r1, #16
 8000c96:	4374      	muls	r4, r6
 8000c98:	434f      	muls	r7, r1
 8000c9a:	4346      	muls	r6, r0
 8000c9c:	4348      	muls	r0, r1
 8000c9e:	0c39      	lsrs	r1, r7, #16
 8000ca0:	1900      	adds	r0, r0, r4
 8000ca2:	1809      	adds	r1, r1, r0
 8000ca4:	428c      	cmp	r4, r1
 8000ca6:	d903      	bls.n	8000cb0 <__aeabi_fmul+0x148>
 8000ca8:	2080      	movs	r0, #128	; 0x80
 8000caa:	0240      	lsls	r0, r0, #9
 8000cac:	4684      	mov	ip, r0
 8000cae:	4466      	add	r6, ip
 8000cb0:	043f      	lsls	r7, r7, #16
 8000cb2:	0408      	lsls	r0, r1, #16
 8000cb4:	0c3f      	lsrs	r7, r7, #16
 8000cb6:	19c0      	adds	r0, r0, r7
 8000cb8:	0184      	lsls	r4, r0, #6
 8000cba:	1e67      	subs	r7, r4, #1
 8000cbc:	41bc      	sbcs	r4, r7
 8000cbe:	0c09      	lsrs	r1, r1, #16
 8000cc0:	0e80      	lsrs	r0, r0, #26
 8000cc2:	1989      	adds	r1, r1, r6
 8000cc4:	4304      	orrs	r4, r0
 8000cc6:	0189      	lsls	r1, r1, #6
 8000cc8:	430c      	orrs	r4, r1
 8000cca:	0109      	lsls	r1, r1, #4
 8000ccc:	d571      	bpl.n	8000db2 <__aeabi_fmul+0x24a>
 8000cce:	2301      	movs	r3, #1
 8000cd0:	0861      	lsrs	r1, r4, #1
 8000cd2:	401c      	ands	r4, r3
 8000cd4:	430c      	orrs	r4, r1
 8000cd6:	002b      	movs	r3, r5
 8000cd8:	337f      	adds	r3, #127	; 0x7f
 8000cda:	2b00      	cmp	r3, #0
 8000cdc:	dd51      	ble.n	8000d82 <__aeabi_fmul+0x21a>
 8000cde:	0761      	lsls	r1, r4, #29
 8000ce0:	d004      	beq.n	8000cec <__aeabi_fmul+0x184>
 8000ce2:	210f      	movs	r1, #15
 8000ce4:	4021      	ands	r1, r4
 8000ce6:	2904      	cmp	r1, #4
 8000ce8:	d000      	beq.n	8000cec <__aeabi_fmul+0x184>
 8000cea:	3404      	adds	r4, #4
 8000cec:	0121      	lsls	r1, r4, #4
 8000cee:	d503      	bpl.n	8000cf8 <__aeabi_fmul+0x190>
 8000cf0:	4b43      	ldr	r3, [pc, #268]	; (8000e00 <__aeabi_fmul+0x298>)
 8000cf2:	401c      	ands	r4, r3
 8000cf4:	002b      	movs	r3, r5
 8000cf6:	3380      	adds	r3, #128	; 0x80
 8000cf8:	2bfe      	cmp	r3, #254	; 0xfe
 8000cfa:	dcc1      	bgt.n	8000c80 <__aeabi_fmul+0x118>
 8000cfc:	01a1      	lsls	r1, r4, #6
 8000cfe:	0a49      	lsrs	r1, r1, #9
 8000d00:	b2d8      	uxtb	r0, r3
 8000d02:	e783      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000d04:	2c00      	cmp	r4, #0
 8000d06:	d12c      	bne.n	8000d62 <__aeabi_fmul+0x1fa>
 8000d08:	2301      	movs	r3, #1
 8000d0a:	4642      	mov	r2, r8
 8000d0c:	431e      	orrs	r6, r3
 8000d0e:	002b      	movs	r3, r5
 8000d10:	407a      	eors	r2, r7
 8000d12:	2001      	movs	r0, #1
 8000d14:	b2d2      	uxtb	r2, r2
 8000d16:	1c5d      	adds	r5, r3, #1
 8000d18:	2e0a      	cmp	r6, #10
 8000d1a:	dd00      	ble.n	8000d1e <__aeabi_fmul+0x1b6>
 8000d1c:	e757      	b.n	8000bce <__aeabi_fmul+0x66>
 8000d1e:	e76a      	b.n	8000bf6 <__aeabi_fmul+0x8e>
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d110      	bne.n	8000d46 <__aeabi_fmul+0x1de>
 8000d24:	2301      	movs	r3, #1
 8000d26:	2604      	movs	r6, #4
 8000d28:	2500      	movs	r5, #0
 8000d2a:	469a      	mov	sl, r3
 8000d2c:	e738      	b.n	8000ba0 <__aeabi_fmul+0x38>
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d104      	bne.n	8000d3c <__aeabi_fmul+0x1d4>
 8000d32:	2302      	movs	r3, #2
 8000d34:	2608      	movs	r6, #8
 8000d36:	25ff      	movs	r5, #255	; 0xff
 8000d38:	469a      	mov	sl, r3
 8000d3a:	e731      	b.n	8000ba0 <__aeabi_fmul+0x38>
 8000d3c:	2303      	movs	r3, #3
 8000d3e:	260c      	movs	r6, #12
 8000d40:	25ff      	movs	r5, #255	; 0xff
 8000d42:	469a      	mov	sl, r3
 8000d44:	e72c      	b.n	8000ba0 <__aeabi_fmul+0x38>
 8000d46:	4648      	mov	r0, r9
 8000d48:	f001 f98c 	bl	8002064 <__clzsi2>
 8000d4c:	464a      	mov	r2, r9
 8000d4e:	1f43      	subs	r3, r0, #5
 8000d50:	2576      	movs	r5, #118	; 0x76
 8000d52:	409a      	lsls	r2, r3
 8000d54:	2300      	movs	r3, #0
 8000d56:	426d      	negs	r5, r5
 8000d58:	4691      	mov	r9, r2
 8000d5a:	2600      	movs	r6, #0
 8000d5c:	469a      	mov	sl, r3
 8000d5e:	1a2d      	subs	r5, r5, r0
 8000d60:	e71e      	b.n	8000ba0 <__aeabi_fmul+0x38>
 8000d62:	0020      	movs	r0, r4
 8000d64:	f001 f97e 	bl	8002064 <__clzsi2>
 8000d68:	4642      	mov	r2, r8
 8000d6a:	1f43      	subs	r3, r0, #5
 8000d6c:	409c      	lsls	r4, r3
 8000d6e:	1a2b      	subs	r3, r5, r0
 8000d70:	3b76      	subs	r3, #118	; 0x76
 8000d72:	407a      	eors	r2, r7
 8000d74:	2000      	movs	r0, #0
 8000d76:	b2d2      	uxtb	r2, r2
 8000d78:	1c5d      	adds	r5, r3, #1
 8000d7a:	2e0a      	cmp	r6, #10
 8000d7c:	dd00      	ble.n	8000d80 <__aeabi_fmul+0x218>
 8000d7e:	e726      	b.n	8000bce <__aeabi_fmul+0x66>
 8000d80:	e739      	b.n	8000bf6 <__aeabi_fmul+0x8e>
 8000d82:	2101      	movs	r1, #1
 8000d84:	1acb      	subs	r3, r1, r3
 8000d86:	2b1b      	cmp	r3, #27
 8000d88:	dd00      	ble.n	8000d8c <__aeabi_fmul+0x224>
 8000d8a:	e73d      	b.n	8000c08 <__aeabi_fmul+0xa0>
 8000d8c:	359e      	adds	r5, #158	; 0x9e
 8000d8e:	0021      	movs	r1, r4
 8000d90:	40ac      	lsls	r4, r5
 8000d92:	40d9      	lsrs	r1, r3
 8000d94:	1e63      	subs	r3, r4, #1
 8000d96:	419c      	sbcs	r4, r3
 8000d98:	4321      	orrs	r1, r4
 8000d9a:	074b      	lsls	r3, r1, #29
 8000d9c:	d004      	beq.n	8000da8 <__aeabi_fmul+0x240>
 8000d9e:	230f      	movs	r3, #15
 8000da0:	400b      	ands	r3, r1
 8000da2:	2b04      	cmp	r3, #4
 8000da4:	d000      	beq.n	8000da8 <__aeabi_fmul+0x240>
 8000da6:	3104      	adds	r1, #4
 8000da8:	014b      	lsls	r3, r1, #5
 8000daa:	d504      	bpl.n	8000db6 <__aeabi_fmul+0x24e>
 8000dac:	2001      	movs	r0, #1
 8000dae:	2100      	movs	r1, #0
 8000db0:	e72c      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000db2:	001d      	movs	r5, r3
 8000db4:	e78f      	b.n	8000cd6 <__aeabi_fmul+0x16e>
 8000db6:	0189      	lsls	r1, r1, #6
 8000db8:	2000      	movs	r0, #0
 8000dba:	0a49      	lsrs	r1, r1, #9
 8000dbc:	e726      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000dbe:	2302      	movs	r3, #2
 8000dc0:	2e0f      	cmp	r6, #15
 8000dc2:	d10c      	bne.n	8000dde <__aeabi_fmul+0x276>
 8000dc4:	2180      	movs	r1, #128	; 0x80
 8000dc6:	464b      	mov	r3, r9
 8000dc8:	03c9      	lsls	r1, r1, #15
 8000dca:	420b      	tst	r3, r1
 8000dcc:	d00d      	beq.n	8000dea <__aeabi_fmul+0x282>
 8000dce:	420c      	tst	r4, r1
 8000dd0:	d10b      	bne.n	8000dea <__aeabi_fmul+0x282>
 8000dd2:	4321      	orrs	r1, r4
 8000dd4:	0249      	lsls	r1, r1, #9
 8000dd6:	003a      	movs	r2, r7
 8000dd8:	20ff      	movs	r0, #255	; 0xff
 8000dda:	0a49      	lsrs	r1, r1, #9
 8000ddc:	e716      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000dde:	2e0b      	cmp	r6, #11
 8000de0:	d000      	beq.n	8000de4 <__aeabi_fmul+0x27c>
 8000de2:	e6f7      	b.n	8000bd4 <__aeabi_fmul+0x6c>
 8000de4:	46a1      	mov	r9, r4
 8000de6:	469a      	mov	sl, r3
 8000de8:	e736      	b.n	8000c58 <__aeabi_fmul+0xf0>
 8000dea:	2180      	movs	r1, #128	; 0x80
 8000dec:	464b      	mov	r3, r9
 8000dee:	03c9      	lsls	r1, r1, #15
 8000df0:	4319      	orrs	r1, r3
 8000df2:	0249      	lsls	r1, r1, #9
 8000df4:	4642      	mov	r2, r8
 8000df6:	20ff      	movs	r0, #255	; 0xff
 8000df8:	0a49      	lsrs	r1, r1, #9
 8000dfa:	e707      	b.n	8000c0c <__aeabi_fmul+0xa4>
 8000dfc:	2303      	movs	r3, #3
 8000dfe:	e7df      	b.n	8000dc0 <__aeabi_fmul+0x258>
 8000e00:	f7ffffff 	.word	0xf7ffffff

08000e04 <__aeabi_fsub>:
 8000e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e06:	46c6      	mov	lr, r8
 8000e08:	0243      	lsls	r3, r0, #9
 8000e0a:	0a5b      	lsrs	r3, r3, #9
 8000e0c:	0045      	lsls	r5, r0, #1
 8000e0e:	00da      	lsls	r2, r3, #3
 8000e10:	0fc4      	lsrs	r4, r0, #31
 8000e12:	0248      	lsls	r0, r1, #9
 8000e14:	004f      	lsls	r7, r1, #1
 8000e16:	4694      	mov	ip, r2
 8000e18:	0a42      	lsrs	r2, r0, #9
 8000e1a:	001e      	movs	r6, r3
 8000e1c:	4690      	mov	r8, r2
 8000e1e:	b500      	push	{lr}
 8000e20:	0e2d      	lsrs	r5, r5, #24
 8000e22:	0e3f      	lsrs	r7, r7, #24
 8000e24:	0fc9      	lsrs	r1, r1, #31
 8000e26:	0980      	lsrs	r0, r0, #6
 8000e28:	2fff      	cmp	r7, #255	; 0xff
 8000e2a:	d059      	beq.n	8000ee0 <__aeabi_fsub+0xdc>
 8000e2c:	2201      	movs	r2, #1
 8000e2e:	4051      	eors	r1, r2
 8000e30:	428c      	cmp	r4, r1
 8000e32:	d039      	beq.n	8000ea8 <__aeabi_fsub+0xa4>
 8000e34:	1bea      	subs	r2, r5, r7
 8000e36:	2a00      	cmp	r2, #0
 8000e38:	dd58      	ble.n	8000eec <__aeabi_fsub+0xe8>
 8000e3a:	2f00      	cmp	r7, #0
 8000e3c:	d068      	beq.n	8000f10 <__aeabi_fsub+0x10c>
 8000e3e:	2dff      	cmp	r5, #255	; 0xff
 8000e40:	d100      	bne.n	8000e44 <__aeabi_fsub+0x40>
 8000e42:	e0d1      	b.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000e44:	2380      	movs	r3, #128	; 0x80
 8000e46:	04db      	lsls	r3, r3, #19
 8000e48:	4318      	orrs	r0, r3
 8000e4a:	2a1b      	cmp	r2, #27
 8000e4c:	dc00      	bgt.n	8000e50 <__aeabi_fsub+0x4c>
 8000e4e:	e0e3      	b.n	8001018 <__aeabi_fsub+0x214>
 8000e50:	2301      	movs	r3, #1
 8000e52:	4662      	mov	r2, ip
 8000e54:	1ad3      	subs	r3, r2, r3
 8000e56:	015a      	lsls	r2, r3, #5
 8000e58:	d400      	bmi.n	8000e5c <__aeabi_fsub+0x58>
 8000e5a:	e0ac      	b.n	8000fb6 <__aeabi_fsub+0x1b2>
 8000e5c:	019b      	lsls	r3, r3, #6
 8000e5e:	099e      	lsrs	r6, r3, #6
 8000e60:	0030      	movs	r0, r6
 8000e62:	f001 f8ff 	bl	8002064 <__clzsi2>
 8000e66:	0033      	movs	r3, r6
 8000e68:	3805      	subs	r0, #5
 8000e6a:	4083      	lsls	r3, r0
 8000e6c:	4285      	cmp	r5, r0
 8000e6e:	dc00      	bgt.n	8000e72 <__aeabi_fsub+0x6e>
 8000e70:	e0c6      	b.n	8001000 <__aeabi_fsub+0x1fc>
 8000e72:	4ab2      	ldr	r2, [pc, #712]	; (800113c <__aeabi_fsub+0x338>)
 8000e74:	1a2d      	subs	r5, r5, r0
 8000e76:	4013      	ands	r3, r2
 8000e78:	075a      	lsls	r2, r3, #29
 8000e7a:	d004      	beq.n	8000e86 <__aeabi_fsub+0x82>
 8000e7c:	220f      	movs	r2, #15
 8000e7e:	401a      	ands	r2, r3
 8000e80:	2a04      	cmp	r2, #4
 8000e82:	d000      	beq.n	8000e86 <__aeabi_fsub+0x82>
 8000e84:	3304      	adds	r3, #4
 8000e86:	015a      	lsls	r2, r3, #5
 8000e88:	d400      	bmi.n	8000e8c <__aeabi_fsub+0x88>
 8000e8a:	e097      	b.n	8000fbc <__aeabi_fsub+0x1b8>
 8000e8c:	1c6a      	adds	r2, r5, #1
 8000e8e:	2dfe      	cmp	r5, #254	; 0xfe
 8000e90:	d100      	bne.n	8000e94 <__aeabi_fsub+0x90>
 8000e92:	e084      	b.n	8000f9e <__aeabi_fsub+0x19a>
 8000e94:	019b      	lsls	r3, r3, #6
 8000e96:	0a5e      	lsrs	r6, r3, #9
 8000e98:	b2d2      	uxtb	r2, r2
 8000e9a:	05d0      	lsls	r0, r2, #23
 8000e9c:	4330      	orrs	r0, r6
 8000e9e:	07e4      	lsls	r4, r4, #31
 8000ea0:	4320      	orrs	r0, r4
 8000ea2:	bc80      	pop	{r7}
 8000ea4:	46b8      	mov	r8, r7
 8000ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ea8:	1bea      	subs	r2, r5, r7
 8000eaa:	2a00      	cmp	r2, #0
 8000eac:	dd41      	ble.n	8000f32 <__aeabi_fsub+0x12e>
 8000eae:	2f00      	cmp	r7, #0
 8000eb0:	d06b      	beq.n	8000f8a <__aeabi_fsub+0x186>
 8000eb2:	2dff      	cmp	r5, #255	; 0xff
 8000eb4:	d100      	bne.n	8000eb8 <__aeabi_fsub+0xb4>
 8000eb6:	e097      	b.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000eb8:	2380      	movs	r3, #128	; 0x80
 8000eba:	04db      	lsls	r3, r3, #19
 8000ebc:	4318      	orrs	r0, r3
 8000ebe:	2a1b      	cmp	r2, #27
 8000ec0:	dc00      	bgt.n	8000ec4 <__aeabi_fsub+0xc0>
 8000ec2:	e0cc      	b.n	800105e <__aeabi_fsub+0x25a>
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	4463      	add	r3, ip
 8000ec8:	015a      	lsls	r2, r3, #5
 8000eca:	d574      	bpl.n	8000fb6 <__aeabi_fsub+0x1b2>
 8000ecc:	3501      	adds	r5, #1
 8000ece:	2dff      	cmp	r5, #255	; 0xff
 8000ed0:	d065      	beq.n	8000f9e <__aeabi_fsub+0x19a>
 8000ed2:	2201      	movs	r2, #1
 8000ed4:	499a      	ldr	r1, [pc, #616]	; (8001140 <__aeabi_fsub+0x33c>)
 8000ed6:	401a      	ands	r2, r3
 8000ed8:	085b      	lsrs	r3, r3, #1
 8000eda:	400b      	ands	r3, r1
 8000edc:	4313      	orrs	r3, r2
 8000ede:	e7cb      	b.n	8000e78 <__aeabi_fsub+0x74>
 8000ee0:	2800      	cmp	r0, #0
 8000ee2:	d01f      	beq.n	8000f24 <__aeabi_fsub+0x120>
 8000ee4:	428c      	cmp	r4, r1
 8000ee6:	d022      	beq.n	8000f2e <__aeabi_fsub+0x12a>
 8000ee8:	002a      	movs	r2, r5
 8000eea:	3aff      	subs	r2, #255	; 0xff
 8000eec:	2a00      	cmp	r2, #0
 8000eee:	d035      	beq.n	8000f5c <__aeabi_fsub+0x158>
 8000ef0:	1b7a      	subs	r2, r7, r5
 8000ef2:	2d00      	cmp	r5, #0
 8000ef4:	d000      	beq.n	8000ef8 <__aeabi_fsub+0xf4>
 8000ef6:	e099      	b.n	800102c <__aeabi_fsub+0x228>
 8000ef8:	4663      	mov	r3, ip
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	d100      	bne.n	8000f00 <__aeabi_fsub+0xfc>
 8000efe:	e0dd      	b.n	80010bc <__aeabi_fsub+0x2b8>
 8000f00:	1e53      	subs	r3, r2, #1
 8000f02:	2a01      	cmp	r2, #1
 8000f04:	d100      	bne.n	8000f08 <__aeabi_fsub+0x104>
 8000f06:	e105      	b.n	8001114 <__aeabi_fsub+0x310>
 8000f08:	2aff      	cmp	r2, #255	; 0xff
 8000f0a:	d06b      	beq.n	8000fe4 <__aeabi_fsub+0x1e0>
 8000f0c:	001a      	movs	r2, r3
 8000f0e:	e094      	b.n	800103a <__aeabi_fsub+0x236>
 8000f10:	2800      	cmp	r0, #0
 8000f12:	d073      	beq.n	8000ffc <__aeabi_fsub+0x1f8>
 8000f14:	1e51      	subs	r1, r2, #1
 8000f16:	2a01      	cmp	r2, #1
 8000f18:	d100      	bne.n	8000f1c <__aeabi_fsub+0x118>
 8000f1a:	e0df      	b.n	80010dc <__aeabi_fsub+0x2d8>
 8000f1c:	2aff      	cmp	r2, #255	; 0xff
 8000f1e:	d063      	beq.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000f20:	000a      	movs	r2, r1
 8000f22:	e792      	b.n	8000e4a <__aeabi_fsub+0x46>
 8000f24:	2201      	movs	r2, #1
 8000f26:	4051      	eors	r1, r2
 8000f28:	42a1      	cmp	r1, r4
 8000f2a:	d000      	beq.n	8000f2e <__aeabi_fsub+0x12a>
 8000f2c:	e782      	b.n	8000e34 <__aeabi_fsub+0x30>
 8000f2e:	002a      	movs	r2, r5
 8000f30:	3aff      	subs	r2, #255	; 0xff
 8000f32:	2a00      	cmp	r2, #0
 8000f34:	d036      	beq.n	8000fa4 <__aeabi_fsub+0x1a0>
 8000f36:	1b7a      	subs	r2, r7, r5
 8000f38:	2d00      	cmp	r5, #0
 8000f3a:	d100      	bne.n	8000f3e <__aeabi_fsub+0x13a>
 8000f3c:	e0aa      	b.n	8001094 <__aeabi_fsub+0x290>
 8000f3e:	2fff      	cmp	r7, #255	; 0xff
 8000f40:	d100      	bne.n	8000f44 <__aeabi_fsub+0x140>
 8000f42:	e0da      	b.n	80010fa <__aeabi_fsub+0x2f6>
 8000f44:	2380      	movs	r3, #128	; 0x80
 8000f46:	4661      	mov	r1, ip
 8000f48:	04db      	lsls	r3, r3, #19
 8000f4a:	4319      	orrs	r1, r3
 8000f4c:	468c      	mov	ip, r1
 8000f4e:	2a1b      	cmp	r2, #27
 8000f50:	dc00      	bgt.n	8000f54 <__aeabi_fsub+0x150>
 8000f52:	e0d4      	b.n	80010fe <__aeabi_fsub+0x2fa>
 8000f54:	2301      	movs	r3, #1
 8000f56:	003d      	movs	r5, r7
 8000f58:	181b      	adds	r3, r3, r0
 8000f5a:	e7b5      	b.n	8000ec8 <__aeabi_fsub+0xc4>
 8000f5c:	27fe      	movs	r7, #254	; 0xfe
 8000f5e:	1c6a      	adds	r2, r5, #1
 8000f60:	4217      	tst	r7, r2
 8000f62:	d171      	bne.n	8001048 <__aeabi_fsub+0x244>
 8000f64:	2d00      	cmp	r5, #0
 8000f66:	d000      	beq.n	8000f6a <__aeabi_fsub+0x166>
 8000f68:	e09e      	b.n	80010a8 <__aeabi_fsub+0x2a4>
 8000f6a:	4663      	mov	r3, ip
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	d100      	bne.n	8000f72 <__aeabi_fsub+0x16e>
 8000f70:	e0d5      	b.n	800111e <__aeabi_fsub+0x31a>
 8000f72:	2200      	movs	r2, #0
 8000f74:	2800      	cmp	r0, #0
 8000f76:	d100      	bne.n	8000f7a <__aeabi_fsub+0x176>
 8000f78:	e78f      	b.n	8000e9a <__aeabi_fsub+0x96>
 8000f7a:	1a1b      	subs	r3, r3, r0
 8000f7c:	015e      	lsls	r6, r3, #5
 8000f7e:	d400      	bmi.n	8000f82 <__aeabi_fsub+0x17e>
 8000f80:	e0d6      	b.n	8001130 <__aeabi_fsub+0x32c>
 8000f82:	4663      	mov	r3, ip
 8000f84:	000c      	movs	r4, r1
 8000f86:	1ac3      	subs	r3, r0, r3
 8000f88:	e776      	b.n	8000e78 <__aeabi_fsub+0x74>
 8000f8a:	2800      	cmp	r0, #0
 8000f8c:	d036      	beq.n	8000ffc <__aeabi_fsub+0x1f8>
 8000f8e:	1e51      	subs	r1, r2, #1
 8000f90:	2a01      	cmp	r2, #1
 8000f92:	d100      	bne.n	8000f96 <__aeabi_fsub+0x192>
 8000f94:	e09a      	b.n	80010cc <__aeabi_fsub+0x2c8>
 8000f96:	2aff      	cmp	r2, #255	; 0xff
 8000f98:	d026      	beq.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000f9a:	000a      	movs	r2, r1
 8000f9c:	e78f      	b.n	8000ebe <__aeabi_fsub+0xba>
 8000f9e:	22ff      	movs	r2, #255	; 0xff
 8000fa0:	2600      	movs	r6, #0
 8000fa2:	e77a      	b.n	8000e9a <__aeabi_fsub+0x96>
 8000fa4:	27fe      	movs	r7, #254	; 0xfe
 8000fa6:	1c6a      	adds	r2, r5, #1
 8000fa8:	4217      	tst	r7, r2
 8000faa:	d062      	beq.n	8001072 <__aeabi_fsub+0x26e>
 8000fac:	2aff      	cmp	r2, #255	; 0xff
 8000fae:	d0f6      	beq.n	8000f9e <__aeabi_fsub+0x19a>
 8000fb0:	0015      	movs	r5, r2
 8000fb2:	4460      	add	r0, ip
 8000fb4:	0843      	lsrs	r3, r0, #1
 8000fb6:	075a      	lsls	r2, r3, #29
 8000fb8:	d000      	beq.n	8000fbc <__aeabi_fsub+0x1b8>
 8000fba:	e75f      	b.n	8000e7c <__aeabi_fsub+0x78>
 8000fbc:	08db      	lsrs	r3, r3, #3
 8000fbe:	2dff      	cmp	r5, #255	; 0xff
 8000fc0:	d012      	beq.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000fc2:	025b      	lsls	r3, r3, #9
 8000fc4:	0a5e      	lsrs	r6, r3, #9
 8000fc6:	b2ea      	uxtb	r2, r5
 8000fc8:	e767      	b.n	8000e9a <__aeabi_fsub+0x96>
 8000fca:	4662      	mov	r2, ip
 8000fcc:	2a00      	cmp	r2, #0
 8000fce:	d100      	bne.n	8000fd2 <__aeabi_fsub+0x1ce>
 8000fd0:	e093      	b.n	80010fa <__aeabi_fsub+0x2f6>
 8000fd2:	2800      	cmp	r0, #0
 8000fd4:	d008      	beq.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000fd6:	2280      	movs	r2, #128	; 0x80
 8000fd8:	03d2      	lsls	r2, r2, #15
 8000fda:	4213      	tst	r3, r2
 8000fdc:	d004      	beq.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000fde:	4640      	mov	r0, r8
 8000fe0:	4210      	tst	r0, r2
 8000fe2:	d101      	bne.n	8000fe8 <__aeabi_fsub+0x1e4>
 8000fe4:	000c      	movs	r4, r1
 8000fe6:	4643      	mov	r3, r8
 8000fe8:	2b00      	cmp	r3, #0
 8000fea:	d0d8      	beq.n	8000f9e <__aeabi_fsub+0x19a>
 8000fec:	2680      	movs	r6, #128	; 0x80
 8000fee:	03f6      	lsls	r6, r6, #15
 8000ff0:	431e      	orrs	r6, r3
 8000ff2:	0276      	lsls	r6, r6, #9
 8000ff4:	22ff      	movs	r2, #255	; 0xff
 8000ff6:	0a76      	lsrs	r6, r6, #9
 8000ff8:	e74f      	b.n	8000e9a <__aeabi_fsub+0x96>
 8000ffa:	4643      	mov	r3, r8
 8000ffc:	0015      	movs	r5, r2
 8000ffe:	e7de      	b.n	8000fbe <__aeabi_fsub+0x1ba>
 8001000:	2220      	movs	r2, #32
 8001002:	1b40      	subs	r0, r0, r5
 8001004:	3001      	adds	r0, #1
 8001006:	1a12      	subs	r2, r2, r0
 8001008:	0019      	movs	r1, r3
 800100a:	4093      	lsls	r3, r2
 800100c:	40c1      	lsrs	r1, r0
 800100e:	1e5a      	subs	r2, r3, #1
 8001010:	4193      	sbcs	r3, r2
 8001012:	2500      	movs	r5, #0
 8001014:	430b      	orrs	r3, r1
 8001016:	e72f      	b.n	8000e78 <__aeabi_fsub+0x74>
 8001018:	2320      	movs	r3, #32
 800101a:	1a9b      	subs	r3, r3, r2
 800101c:	0001      	movs	r1, r0
 800101e:	4098      	lsls	r0, r3
 8001020:	0003      	movs	r3, r0
 8001022:	40d1      	lsrs	r1, r2
 8001024:	1e5a      	subs	r2, r3, #1
 8001026:	4193      	sbcs	r3, r2
 8001028:	430b      	orrs	r3, r1
 800102a:	e712      	b.n	8000e52 <__aeabi_fsub+0x4e>
 800102c:	2fff      	cmp	r7, #255	; 0xff
 800102e:	d0d9      	beq.n	8000fe4 <__aeabi_fsub+0x1e0>
 8001030:	2380      	movs	r3, #128	; 0x80
 8001032:	4664      	mov	r4, ip
 8001034:	04db      	lsls	r3, r3, #19
 8001036:	431c      	orrs	r4, r3
 8001038:	46a4      	mov	ip, r4
 800103a:	2a1b      	cmp	r2, #27
 800103c:	dd52      	ble.n	80010e4 <__aeabi_fsub+0x2e0>
 800103e:	2301      	movs	r3, #1
 8001040:	000c      	movs	r4, r1
 8001042:	003d      	movs	r5, r7
 8001044:	1ac3      	subs	r3, r0, r3
 8001046:	e706      	b.n	8000e56 <__aeabi_fsub+0x52>
 8001048:	4663      	mov	r3, ip
 800104a:	1a1e      	subs	r6, r3, r0
 800104c:	0173      	lsls	r3, r6, #5
 800104e:	d439      	bmi.n	80010c4 <__aeabi_fsub+0x2c0>
 8001050:	2e00      	cmp	r6, #0
 8001052:	d000      	beq.n	8001056 <__aeabi_fsub+0x252>
 8001054:	e704      	b.n	8000e60 <__aeabi_fsub+0x5c>
 8001056:	2400      	movs	r4, #0
 8001058:	2200      	movs	r2, #0
 800105a:	2600      	movs	r6, #0
 800105c:	e71d      	b.n	8000e9a <__aeabi_fsub+0x96>
 800105e:	2320      	movs	r3, #32
 8001060:	1a9b      	subs	r3, r3, r2
 8001062:	0001      	movs	r1, r0
 8001064:	4098      	lsls	r0, r3
 8001066:	0003      	movs	r3, r0
 8001068:	40d1      	lsrs	r1, r2
 800106a:	1e5a      	subs	r2, r3, #1
 800106c:	4193      	sbcs	r3, r2
 800106e:	430b      	orrs	r3, r1
 8001070:	e729      	b.n	8000ec6 <__aeabi_fsub+0xc2>
 8001072:	2d00      	cmp	r5, #0
 8001074:	d1a9      	bne.n	8000fca <__aeabi_fsub+0x1c6>
 8001076:	4663      	mov	r3, ip
 8001078:	2b00      	cmp	r3, #0
 800107a:	d056      	beq.n	800112a <__aeabi_fsub+0x326>
 800107c:	2200      	movs	r2, #0
 800107e:	2800      	cmp	r0, #0
 8001080:	d100      	bne.n	8001084 <__aeabi_fsub+0x280>
 8001082:	e70a      	b.n	8000e9a <__aeabi_fsub+0x96>
 8001084:	0003      	movs	r3, r0
 8001086:	4463      	add	r3, ip
 8001088:	015a      	lsls	r2, r3, #5
 800108a:	d594      	bpl.n	8000fb6 <__aeabi_fsub+0x1b2>
 800108c:	4a2b      	ldr	r2, [pc, #172]	; (800113c <__aeabi_fsub+0x338>)
 800108e:	3501      	adds	r5, #1
 8001090:	4013      	ands	r3, r2
 8001092:	e790      	b.n	8000fb6 <__aeabi_fsub+0x1b2>
 8001094:	4663      	mov	r3, ip
 8001096:	2b00      	cmp	r3, #0
 8001098:	d0af      	beq.n	8000ffa <__aeabi_fsub+0x1f6>
 800109a:	1e53      	subs	r3, r2, #1
 800109c:	2a01      	cmp	r2, #1
 800109e:	d015      	beq.n	80010cc <__aeabi_fsub+0x2c8>
 80010a0:	2aff      	cmp	r2, #255	; 0xff
 80010a2:	d02a      	beq.n	80010fa <__aeabi_fsub+0x2f6>
 80010a4:	001a      	movs	r2, r3
 80010a6:	e752      	b.n	8000f4e <__aeabi_fsub+0x14a>
 80010a8:	4662      	mov	r2, ip
 80010aa:	2a00      	cmp	r2, #0
 80010ac:	d191      	bne.n	8000fd2 <__aeabi_fsub+0x1ce>
 80010ae:	2800      	cmp	r0, #0
 80010b0:	d198      	bne.n	8000fe4 <__aeabi_fsub+0x1e0>
 80010b2:	2680      	movs	r6, #128	; 0x80
 80010b4:	2400      	movs	r4, #0
 80010b6:	22ff      	movs	r2, #255	; 0xff
 80010b8:	03f6      	lsls	r6, r6, #15
 80010ba:	e6ee      	b.n	8000e9a <__aeabi_fsub+0x96>
 80010bc:	000c      	movs	r4, r1
 80010be:	4643      	mov	r3, r8
 80010c0:	0015      	movs	r5, r2
 80010c2:	e77c      	b.n	8000fbe <__aeabi_fsub+0x1ba>
 80010c4:	4663      	mov	r3, ip
 80010c6:	000c      	movs	r4, r1
 80010c8:	1ac6      	subs	r6, r0, r3
 80010ca:	e6c9      	b.n	8000e60 <__aeabi_fsub+0x5c>
 80010cc:	0003      	movs	r3, r0
 80010ce:	4463      	add	r3, ip
 80010d0:	2501      	movs	r5, #1
 80010d2:	015a      	lsls	r2, r3, #5
 80010d4:	d400      	bmi.n	80010d8 <__aeabi_fsub+0x2d4>
 80010d6:	e76e      	b.n	8000fb6 <__aeabi_fsub+0x1b2>
 80010d8:	2502      	movs	r5, #2
 80010da:	e6fa      	b.n	8000ed2 <__aeabi_fsub+0xce>
 80010dc:	4663      	mov	r3, ip
 80010de:	2501      	movs	r5, #1
 80010e0:	1a1b      	subs	r3, r3, r0
 80010e2:	e6b8      	b.n	8000e56 <__aeabi_fsub+0x52>
 80010e4:	4664      	mov	r4, ip
 80010e6:	2320      	movs	r3, #32
 80010e8:	40d4      	lsrs	r4, r2
 80010ea:	1a9b      	subs	r3, r3, r2
 80010ec:	4662      	mov	r2, ip
 80010ee:	409a      	lsls	r2, r3
 80010f0:	0013      	movs	r3, r2
 80010f2:	1e5a      	subs	r2, r3, #1
 80010f4:	4193      	sbcs	r3, r2
 80010f6:	4323      	orrs	r3, r4
 80010f8:	e7a2      	b.n	8001040 <__aeabi_fsub+0x23c>
 80010fa:	4643      	mov	r3, r8
 80010fc:	e774      	b.n	8000fe8 <__aeabi_fsub+0x1e4>
 80010fe:	4661      	mov	r1, ip
 8001100:	2320      	movs	r3, #32
 8001102:	40d1      	lsrs	r1, r2
 8001104:	1a9b      	subs	r3, r3, r2
 8001106:	4662      	mov	r2, ip
 8001108:	409a      	lsls	r2, r3
 800110a:	0013      	movs	r3, r2
 800110c:	1e5a      	subs	r2, r3, #1
 800110e:	4193      	sbcs	r3, r2
 8001110:	430b      	orrs	r3, r1
 8001112:	e720      	b.n	8000f56 <__aeabi_fsub+0x152>
 8001114:	4663      	mov	r3, ip
 8001116:	000c      	movs	r4, r1
 8001118:	2501      	movs	r5, #1
 800111a:	1ac3      	subs	r3, r0, r3
 800111c:	e69b      	b.n	8000e56 <__aeabi_fsub+0x52>
 800111e:	2800      	cmp	r0, #0
 8001120:	d099      	beq.n	8001056 <__aeabi_fsub+0x252>
 8001122:	000c      	movs	r4, r1
 8001124:	4646      	mov	r6, r8
 8001126:	2200      	movs	r2, #0
 8001128:	e6b7      	b.n	8000e9a <__aeabi_fsub+0x96>
 800112a:	4646      	mov	r6, r8
 800112c:	2200      	movs	r2, #0
 800112e:	e6b4      	b.n	8000e9a <__aeabi_fsub+0x96>
 8001130:	2b00      	cmp	r3, #0
 8001132:	d000      	beq.n	8001136 <__aeabi_fsub+0x332>
 8001134:	e73f      	b.n	8000fb6 <__aeabi_fsub+0x1b2>
 8001136:	2400      	movs	r4, #0
 8001138:	2600      	movs	r6, #0
 800113a:	e6ae      	b.n	8000e9a <__aeabi_fsub+0x96>
 800113c:	fbffffff 	.word	0xfbffffff
 8001140:	7dffffff 	.word	0x7dffffff

08001144 <__aeabi_fcmpun>:
 8001144:	0243      	lsls	r3, r0, #9
 8001146:	024a      	lsls	r2, r1, #9
 8001148:	0040      	lsls	r0, r0, #1
 800114a:	0049      	lsls	r1, r1, #1
 800114c:	0a5b      	lsrs	r3, r3, #9
 800114e:	0a52      	lsrs	r2, r2, #9
 8001150:	0e09      	lsrs	r1, r1, #24
 8001152:	0e00      	lsrs	r0, r0, #24
 8001154:	28ff      	cmp	r0, #255	; 0xff
 8001156:	d006      	beq.n	8001166 <__aeabi_fcmpun+0x22>
 8001158:	2000      	movs	r0, #0
 800115a:	29ff      	cmp	r1, #255	; 0xff
 800115c:	d102      	bne.n	8001164 <__aeabi_fcmpun+0x20>
 800115e:	1e53      	subs	r3, r2, #1
 8001160:	419a      	sbcs	r2, r3
 8001162:	0010      	movs	r0, r2
 8001164:	4770      	bx	lr
 8001166:	38fe      	subs	r0, #254	; 0xfe
 8001168:	2b00      	cmp	r3, #0
 800116a:	d1fb      	bne.n	8001164 <__aeabi_fcmpun+0x20>
 800116c:	e7f4      	b.n	8001158 <__aeabi_fcmpun+0x14>
 800116e:	46c0      	nop			; (mov r8, r8)

08001170 <__aeabi_f2iz>:
 8001170:	0241      	lsls	r1, r0, #9
 8001172:	0042      	lsls	r2, r0, #1
 8001174:	0fc3      	lsrs	r3, r0, #31
 8001176:	0a49      	lsrs	r1, r1, #9
 8001178:	2000      	movs	r0, #0
 800117a:	0e12      	lsrs	r2, r2, #24
 800117c:	2a7e      	cmp	r2, #126	; 0x7e
 800117e:	dd03      	ble.n	8001188 <__aeabi_f2iz+0x18>
 8001180:	2a9d      	cmp	r2, #157	; 0x9d
 8001182:	dd02      	ble.n	800118a <__aeabi_f2iz+0x1a>
 8001184:	4a09      	ldr	r2, [pc, #36]	; (80011ac <__aeabi_f2iz+0x3c>)
 8001186:	1898      	adds	r0, r3, r2
 8001188:	4770      	bx	lr
 800118a:	2080      	movs	r0, #128	; 0x80
 800118c:	0400      	lsls	r0, r0, #16
 800118e:	4301      	orrs	r1, r0
 8001190:	2a95      	cmp	r2, #149	; 0x95
 8001192:	dc07      	bgt.n	80011a4 <__aeabi_f2iz+0x34>
 8001194:	2096      	movs	r0, #150	; 0x96
 8001196:	1a82      	subs	r2, r0, r2
 8001198:	40d1      	lsrs	r1, r2
 800119a:	4248      	negs	r0, r1
 800119c:	2b00      	cmp	r3, #0
 800119e:	d1f3      	bne.n	8001188 <__aeabi_f2iz+0x18>
 80011a0:	0008      	movs	r0, r1
 80011a2:	e7f1      	b.n	8001188 <__aeabi_f2iz+0x18>
 80011a4:	3a96      	subs	r2, #150	; 0x96
 80011a6:	4091      	lsls	r1, r2
 80011a8:	e7f7      	b.n	800119a <__aeabi_f2iz+0x2a>
 80011aa:	46c0      	nop			; (mov r8, r8)
 80011ac:	7fffffff 	.word	0x7fffffff

080011b0 <__aeabi_ui2f>:
 80011b0:	b570      	push	{r4, r5, r6, lr}
 80011b2:	1e04      	subs	r4, r0, #0
 80011b4:	d00e      	beq.n	80011d4 <__aeabi_ui2f+0x24>
 80011b6:	f000 ff55 	bl	8002064 <__clzsi2>
 80011ba:	239e      	movs	r3, #158	; 0x9e
 80011bc:	0001      	movs	r1, r0
 80011be:	1a1b      	subs	r3, r3, r0
 80011c0:	2b96      	cmp	r3, #150	; 0x96
 80011c2:	dc0c      	bgt.n	80011de <__aeabi_ui2f+0x2e>
 80011c4:	2808      	cmp	r0, #8
 80011c6:	d02c      	beq.n	8001222 <__aeabi_ui2f+0x72>
 80011c8:	3908      	subs	r1, #8
 80011ca:	408c      	lsls	r4, r1
 80011cc:	0264      	lsls	r4, r4, #9
 80011ce:	0a64      	lsrs	r4, r4, #9
 80011d0:	b2d8      	uxtb	r0, r3
 80011d2:	e001      	b.n	80011d8 <__aeabi_ui2f+0x28>
 80011d4:	2000      	movs	r0, #0
 80011d6:	2400      	movs	r4, #0
 80011d8:	05c0      	lsls	r0, r0, #23
 80011da:	4320      	orrs	r0, r4
 80011dc:	bd70      	pop	{r4, r5, r6, pc}
 80011de:	2b99      	cmp	r3, #153	; 0x99
 80011e0:	dd0a      	ble.n	80011f8 <__aeabi_ui2f+0x48>
 80011e2:	0002      	movs	r2, r0
 80011e4:	0020      	movs	r0, r4
 80011e6:	321b      	adds	r2, #27
 80011e8:	4090      	lsls	r0, r2
 80011ea:	0002      	movs	r2, r0
 80011ec:	1e50      	subs	r0, r2, #1
 80011ee:	4182      	sbcs	r2, r0
 80011f0:	2005      	movs	r0, #5
 80011f2:	1a40      	subs	r0, r0, r1
 80011f4:	40c4      	lsrs	r4, r0
 80011f6:	4314      	orrs	r4, r2
 80011f8:	2905      	cmp	r1, #5
 80011fa:	dc16      	bgt.n	800122a <__aeabi_ui2f+0x7a>
 80011fc:	0022      	movs	r2, r4
 80011fe:	480f      	ldr	r0, [pc, #60]	; (800123c <__aeabi_ui2f+0x8c>)
 8001200:	4002      	ands	r2, r0
 8001202:	0765      	lsls	r5, r4, #29
 8001204:	d009      	beq.n	800121a <__aeabi_ui2f+0x6a>
 8001206:	250f      	movs	r5, #15
 8001208:	402c      	ands	r4, r5
 800120a:	2c04      	cmp	r4, #4
 800120c:	d005      	beq.n	800121a <__aeabi_ui2f+0x6a>
 800120e:	3204      	adds	r2, #4
 8001210:	0154      	lsls	r4, r2, #5
 8001212:	d502      	bpl.n	800121a <__aeabi_ui2f+0x6a>
 8001214:	239f      	movs	r3, #159	; 0x9f
 8001216:	4002      	ands	r2, r0
 8001218:	1a5b      	subs	r3, r3, r1
 800121a:	0192      	lsls	r2, r2, #6
 800121c:	0a54      	lsrs	r4, r2, #9
 800121e:	b2d8      	uxtb	r0, r3
 8001220:	e7da      	b.n	80011d8 <__aeabi_ui2f+0x28>
 8001222:	0264      	lsls	r4, r4, #9
 8001224:	2096      	movs	r0, #150	; 0x96
 8001226:	0a64      	lsrs	r4, r4, #9
 8001228:	e7d6      	b.n	80011d8 <__aeabi_ui2f+0x28>
 800122a:	1f4a      	subs	r2, r1, #5
 800122c:	4094      	lsls	r4, r2
 800122e:	0022      	movs	r2, r4
 8001230:	4802      	ldr	r0, [pc, #8]	; (800123c <__aeabi_ui2f+0x8c>)
 8001232:	4002      	ands	r2, r0
 8001234:	0765      	lsls	r5, r4, #29
 8001236:	d0f0      	beq.n	800121a <__aeabi_ui2f+0x6a>
 8001238:	e7e5      	b.n	8001206 <__aeabi_ui2f+0x56>
 800123a:	46c0      	nop			; (mov r8, r8)
 800123c:	fbffffff 	.word	0xfbffffff

08001240 <__aeabi_dmul>:
 8001240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001242:	4645      	mov	r5, r8
 8001244:	46de      	mov	lr, fp
 8001246:	4657      	mov	r7, sl
 8001248:	464e      	mov	r6, r9
 800124a:	b5e0      	push	{r5, r6, r7, lr}
 800124c:	001f      	movs	r7, r3
 800124e:	030b      	lsls	r3, r1, #12
 8001250:	0b1b      	lsrs	r3, r3, #12
 8001252:	469b      	mov	fp, r3
 8001254:	004d      	lsls	r5, r1, #1
 8001256:	0fcb      	lsrs	r3, r1, #31
 8001258:	0004      	movs	r4, r0
 800125a:	4691      	mov	r9, r2
 800125c:	4698      	mov	r8, r3
 800125e:	b087      	sub	sp, #28
 8001260:	0d6d      	lsrs	r5, r5, #21
 8001262:	d100      	bne.n	8001266 <__aeabi_dmul+0x26>
 8001264:	e1cd      	b.n	8001602 <__aeabi_dmul+0x3c2>
 8001266:	4bce      	ldr	r3, [pc, #824]	; (80015a0 <__aeabi_dmul+0x360>)
 8001268:	429d      	cmp	r5, r3
 800126a:	d100      	bne.n	800126e <__aeabi_dmul+0x2e>
 800126c:	e1e9      	b.n	8001642 <__aeabi_dmul+0x402>
 800126e:	465a      	mov	r2, fp
 8001270:	0f43      	lsrs	r3, r0, #29
 8001272:	00d2      	lsls	r2, r2, #3
 8001274:	4313      	orrs	r3, r2
 8001276:	2280      	movs	r2, #128	; 0x80
 8001278:	0412      	lsls	r2, r2, #16
 800127a:	431a      	orrs	r2, r3
 800127c:	00c3      	lsls	r3, r0, #3
 800127e:	469a      	mov	sl, r3
 8001280:	4bc8      	ldr	r3, [pc, #800]	; (80015a4 <__aeabi_dmul+0x364>)
 8001282:	4693      	mov	fp, r2
 8001284:	469c      	mov	ip, r3
 8001286:	2300      	movs	r3, #0
 8001288:	2600      	movs	r6, #0
 800128a:	4465      	add	r5, ip
 800128c:	9300      	str	r3, [sp, #0]
 800128e:	033c      	lsls	r4, r7, #12
 8001290:	007b      	lsls	r3, r7, #1
 8001292:	4648      	mov	r0, r9
 8001294:	0b24      	lsrs	r4, r4, #12
 8001296:	0d5b      	lsrs	r3, r3, #21
 8001298:	0fff      	lsrs	r7, r7, #31
 800129a:	2b00      	cmp	r3, #0
 800129c:	d100      	bne.n	80012a0 <__aeabi_dmul+0x60>
 800129e:	e189      	b.n	80015b4 <__aeabi_dmul+0x374>
 80012a0:	4abf      	ldr	r2, [pc, #764]	; (80015a0 <__aeabi_dmul+0x360>)
 80012a2:	4293      	cmp	r3, r2
 80012a4:	d019      	beq.n	80012da <__aeabi_dmul+0x9a>
 80012a6:	0f42      	lsrs	r2, r0, #29
 80012a8:	00e4      	lsls	r4, r4, #3
 80012aa:	4322      	orrs	r2, r4
 80012ac:	2480      	movs	r4, #128	; 0x80
 80012ae:	0424      	lsls	r4, r4, #16
 80012b0:	4314      	orrs	r4, r2
 80012b2:	4abc      	ldr	r2, [pc, #752]	; (80015a4 <__aeabi_dmul+0x364>)
 80012b4:	2100      	movs	r1, #0
 80012b6:	4694      	mov	ip, r2
 80012b8:	4642      	mov	r2, r8
 80012ba:	4463      	add	r3, ip
 80012bc:	195b      	adds	r3, r3, r5
 80012be:	9301      	str	r3, [sp, #4]
 80012c0:	9b01      	ldr	r3, [sp, #4]
 80012c2:	407a      	eors	r2, r7
 80012c4:	3301      	adds	r3, #1
 80012c6:	00c0      	lsls	r0, r0, #3
 80012c8:	b2d2      	uxtb	r2, r2
 80012ca:	9302      	str	r3, [sp, #8]
 80012cc:	2e0a      	cmp	r6, #10
 80012ce:	dd1c      	ble.n	800130a <__aeabi_dmul+0xca>
 80012d0:	003a      	movs	r2, r7
 80012d2:	2e0b      	cmp	r6, #11
 80012d4:	d05e      	beq.n	8001394 <__aeabi_dmul+0x154>
 80012d6:	4647      	mov	r7, r8
 80012d8:	e056      	b.n	8001388 <__aeabi_dmul+0x148>
 80012da:	4649      	mov	r1, r9
 80012dc:	4bb0      	ldr	r3, [pc, #704]	; (80015a0 <__aeabi_dmul+0x360>)
 80012de:	4321      	orrs	r1, r4
 80012e0:	18eb      	adds	r3, r5, r3
 80012e2:	9301      	str	r3, [sp, #4]
 80012e4:	2900      	cmp	r1, #0
 80012e6:	d12a      	bne.n	800133e <__aeabi_dmul+0xfe>
 80012e8:	2080      	movs	r0, #128	; 0x80
 80012ea:	2202      	movs	r2, #2
 80012ec:	0100      	lsls	r0, r0, #4
 80012ee:	002b      	movs	r3, r5
 80012f0:	4684      	mov	ip, r0
 80012f2:	4316      	orrs	r6, r2
 80012f4:	4642      	mov	r2, r8
 80012f6:	4463      	add	r3, ip
 80012f8:	407a      	eors	r2, r7
 80012fa:	b2d2      	uxtb	r2, r2
 80012fc:	9302      	str	r3, [sp, #8]
 80012fe:	2e0a      	cmp	r6, #10
 8001300:	dd00      	ble.n	8001304 <__aeabi_dmul+0xc4>
 8001302:	e231      	b.n	8001768 <__aeabi_dmul+0x528>
 8001304:	2000      	movs	r0, #0
 8001306:	2400      	movs	r4, #0
 8001308:	2102      	movs	r1, #2
 800130a:	2e02      	cmp	r6, #2
 800130c:	dc26      	bgt.n	800135c <__aeabi_dmul+0x11c>
 800130e:	3e01      	subs	r6, #1
 8001310:	2e01      	cmp	r6, #1
 8001312:	d852      	bhi.n	80013ba <__aeabi_dmul+0x17a>
 8001314:	2902      	cmp	r1, #2
 8001316:	d04c      	beq.n	80013b2 <__aeabi_dmul+0x172>
 8001318:	2901      	cmp	r1, #1
 800131a:	d000      	beq.n	800131e <__aeabi_dmul+0xde>
 800131c:	e118      	b.n	8001550 <__aeabi_dmul+0x310>
 800131e:	2300      	movs	r3, #0
 8001320:	2400      	movs	r4, #0
 8001322:	2500      	movs	r5, #0
 8001324:	051b      	lsls	r3, r3, #20
 8001326:	4323      	orrs	r3, r4
 8001328:	07d2      	lsls	r2, r2, #31
 800132a:	4313      	orrs	r3, r2
 800132c:	0028      	movs	r0, r5
 800132e:	0019      	movs	r1, r3
 8001330:	b007      	add	sp, #28
 8001332:	bcf0      	pop	{r4, r5, r6, r7}
 8001334:	46bb      	mov	fp, r7
 8001336:	46b2      	mov	sl, r6
 8001338:	46a9      	mov	r9, r5
 800133a:	46a0      	mov	r8, r4
 800133c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800133e:	2180      	movs	r1, #128	; 0x80
 8001340:	2203      	movs	r2, #3
 8001342:	0109      	lsls	r1, r1, #4
 8001344:	002b      	movs	r3, r5
 8001346:	468c      	mov	ip, r1
 8001348:	4316      	orrs	r6, r2
 800134a:	4642      	mov	r2, r8
 800134c:	4463      	add	r3, ip
 800134e:	407a      	eors	r2, r7
 8001350:	b2d2      	uxtb	r2, r2
 8001352:	9302      	str	r3, [sp, #8]
 8001354:	2e0a      	cmp	r6, #10
 8001356:	dd00      	ble.n	800135a <__aeabi_dmul+0x11a>
 8001358:	e228      	b.n	80017ac <__aeabi_dmul+0x56c>
 800135a:	2103      	movs	r1, #3
 800135c:	2501      	movs	r5, #1
 800135e:	40b5      	lsls	r5, r6
 8001360:	46ac      	mov	ip, r5
 8001362:	26a6      	movs	r6, #166	; 0xa6
 8001364:	4663      	mov	r3, ip
 8001366:	00f6      	lsls	r6, r6, #3
 8001368:	4035      	ands	r5, r6
 800136a:	4233      	tst	r3, r6
 800136c:	d10b      	bne.n	8001386 <__aeabi_dmul+0x146>
 800136e:	2690      	movs	r6, #144	; 0x90
 8001370:	00b6      	lsls	r6, r6, #2
 8001372:	4233      	tst	r3, r6
 8001374:	d118      	bne.n	80013a8 <__aeabi_dmul+0x168>
 8001376:	3eb9      	subs	r6, #185	; 0xb9
 8001378:	3eff      	subs	r6, #255	; 0xff
 800137a:	421e      	tst	r6, r3
 800137c:	d01d      	beq.n	80013ba <__aeabi_dmul+0x17a>
 800137e:	46a3      	mov	fp, r4
 8001380:	4682      	mov	sl, r0
 8001382:	9100      	str	r1, [sp, #0]
 8001384:	e000      	b.n	8001388 <__aeabi_dmul+0x148>
 8001386:	0017      	movs	r7, r2
 8001388:	9900      	ldr	r1, [sp, #0]
 800138a:	003a      	movs	r2, r7
 800138c:	2902      	cmp	r1, #2
 800138e:	d010      	beq.n	80013b2 <__aeabi_dmul+0x172>
 8001390:	465c      	mov	r4, fp
 8001392:	4650      	mov	r0, sl
 8001394:	2903      	cmp	r1, #3
 8001396:	d1bf      	bne.n	8001318 <__aeabi_dmul+0xd8>
 8001398:	2380      	movs	r3, #128	; 0x80
 800139a:	031b      	lsls	r3, r3, #12
 800139c:	431c      	orrs	r4, r3
 800139e:	0324      	lsls	r4, r4, #12
 80013a0:	0005      	movs	r5, r0
 80013a2:	4b7f      	ldr	r3, [pc, #508]	; (80015a0 <__aeabi_dmul+0x360>)
 80013a4:	0b24      	lsrs	r4, r4, #12
 80013a6:	e7bd      	b.n	8001324 <__aeabi_dmul+0xe4>
 80013a8:	2480      	movs	r4, #128	; 0x80
 80013aa:	2200      	movs	r2, #0
 80013ac:	4b7c      	ldr	r3, [pc, #496]	; (80015a0 <__aeabi_dmul+0x360>)
 80013ae:	0324      	lsls	r4, r4, #12
 80013b0:	e7b8      	b.n	8001324 <__aeabi_dmul+0xe4>
 80013b2:	2400      	movs	r4, #0
 80013b4:	2500      	movs	r5, #0
 80013b6:	4b7a      	ldr	r3, [pc, #488]	; (80015a0 <__aeabi_dmul+0x360>)
 80013b8:	e7b4      	b.n	8001324 <__aeabi_dmul+0xe4>
 80013ba:	4653      	mov	r3, sl
 80013bc:	041e      	lsls	r6, r3, #16
 80013be:	0c36      	lsrs	r6, r6, #16
 80013c0:	0c1f      	lsrs	r7, r3, #16
 80013c2:	0033      	movs	r3, r6
 80013c4:	0c01      	lsrs	r1, r0, #16
 80013c6:	0400      	lsls	r0, r0, #16
 80013c8:	0c00      	lsrs	r0, r0, #16
 80013ca:	4343      	muls	r3, r0
 80013cc:	4698      	mov	r8, r3
 80013ce:	0003      	movs	r3, r0
 80013d0:	437b      	muls	r3, r7
 80013d2:	4699      	mov	r9, r3
 80013d4:	0033      	movs	r3, r6
 80013d6:	434b      	muls	r3, r1
 80013d8:	469c      	mov	ip, r3
 80013da:	4643      	mov	r3, r8
 80013dc:	000d      	movs	r5, r1
 80013de:	0c1b      	lsrs	r3, r3, #16
 80013e0:	469a      	mov	sl, r3
 80013e2:	437d      	muls	r5, r7
 80013e4:	44cc      	add	ip, r9
 80013e6:	44d4      	add	ip, sl
 80013e8:	9500      	str	r5, [sp, #0]
 80013ea:	45e1      	cmp	r9, ip
 80013ec:	d904      	bls.n	80013f8 <__aeabi_dmul+0x1b8>
 80013ee:	2380      	movs	r3, #128	; 0x80
 80013f0:	025b      	lsls	r3, r3, #9
 80013f2:	4699      	mov	r9, r3
 80013f4:	444d      	add	r5, r9
 80013f6:	9500      	str	r5, [sp, #0]
 80013f8:	4663      	mov	r3, ip
 80013fa:	0c1b      	lsrs	r3, r3, #16
 80013fc:	001d      	movs	r5, r3
 80013fe:	4663      	mov	r3, ip
 8001400:	041b      	lsls	r3, r3, #16
 8001402:	469c      	mov	ip, r3
 8001404:	4643      	mov	r3, r8
 8001406:	041b      	lsls	r3, r3, #16
 8001408:	0c1b      	lsrs	r3, r3, #16
 800140a:	4698      	mov	r8, r3
 800140c:	4663      	mov	r3, ip
 800140e:	4443      	add	r3, r8
 8001410:	9303      	str	r3, [sp, #12]
 8001412:	0c23      	lsrs	r3, r4, #16
 8001414:	4698      	mov	r8, r3
 8001416:	0033      	movs	r3, r6
 8001418:	0424      	lsls	r4, r4, #16
 800141a:	0c24      	lsrs	r4, r4, #16
 800141c:	4363      	muls	r3, r4
 800141e:	469c      	mov	ip, r3
 8001420:	0023      	movs	r3, r4
 8001422:	437b      	muls	r3, r7
 8001424:	4699      	mov	r9, r3
 8001426:	4643      	mov	r3, r8
 8001428:	435e      	muls	r6, r3
 800142a:	435f      	muls	r7, r3
 800142c:	444e      	add	r6, r9
 800142e:	4663      	mov	r3, ip
 8001430:	46b2      	mov	sl, r6
 8001432:	0c1e      	lsrs	r6, r3, #16
 8001434:	4456      	add	r6, sl
 8001436:	45b1      	cmp	r9, r6
 8001438:	d903      	bls.n	8001442 <__aeabi_dmul+0x202>
 800143a:	2380      	movs	r3, #128	; 0x80
 800143c:	025b      	lsls	r3, r3, #9
 800143e:	4699      	mov	r9, r3
 8001440:	444f      	add	r7, r9
 8001442:	0c33      	lsrs	r3, r6, #16
 8001444:	4699      	mov	r9, r3
 8001446:	003b      	movs	r3, r7
 8001448:	444b      	add	r3, r9
 800144a:	9305      	str	r3, [sp, #20]
 800144c:	4663      	mov	r3, ip
 800144e:	46ac      	mov	ip, r5
 8001450:	041f      	lsls	r7, r3, #16
 8001452:	0c3f      	lsrs	r7, r7, #16
 8001454:	0436      	lsls	r6, r6, #16
 8001456:	19f6      	adds	r6, r6, r7
 8001458:	44b4      	add	ip, r6
 800145a:	4663      	mov	r3, ip
 800145c:	9304      	str	r3, [sp, #16]
 800145e:	465b      	mov	r3, fp
 8001460:	0c1b      	lsrs	r3, r3, #16
 8001462:	469c      	mov	ip, r3
 8001464:	465b      	mov	r3, fp
 8001466:	041f      	lsls	r7, r3, #16
 8001468:	0c3f      	lsrs	r7, r7, #16
 800146a:	003b      	movs	r3, r7
 800146c:	4343      	muls	r3, r0
 800146e:	4699      	mov	r9, r3
 8001470:	4663      	mov	r3, ip
 8001472:	4343      	muls	r3, r0
 8001474:	469a      	mov	sl, r3
 8001476:	464b      	mov	r3, r9
 8001478:	4660      	mov	r0, ip
 800147a:	0c1b      	lsrs	r3, r3, #16
 800147c:	469b      	mov	fp, r3
 800147e:	4348      	muls	r0, r1
 8001480:	4379      	muls	r1, r7
 8001482:	4451      	add	r1, sl
 8001484:	4459      	add	r1, fp
 8001486:	458a      	cmp	sl, r1
 8001488:	d903      	bls.n	8001492 <__aeabi_dmul+0x252>
 800148a:	2380      	movs	r3, #128	; 0x80
 800148c:	025b      	lsls	r3, r3, #9
 800148e:	469a      	mov	sl, r3
 8001490:	4450      	add	r0, sl
 8001492:	0c0b      	lsrs	r3, r1, #16
 8001494:	469a      	mov	sl, r3
 8001496:	464b      	mov	r3, r9
 8001498:	041b      	lsls	r3, r3, #16
 800149a:	0c1b      	lsrs	r3, r3, #16
 800149c:	4699      	mov	r9, r3
 800149e:	003b      	movs	r3, r7
 80014a0:	4363      	muls	r3, r4
 80014a2:	0409      	lsls	r1, r1, #16
 80014a4:	4645      	mov	r5, r8
 80014a6:	4449      	add	r1, r9
 80014a8:	4699      	mov	r9, r3
 80014aa:	4663      	mov	r3, ip
 80014ac:	435c      	muls	r4, r3
 80014ae:	436b      	muls	r3, r5
 80014b0:	469c      	mov	ip, r3
 80014b2:	464b      	mov	r3, r9
 80014b4:	0c1b      	lsrs	r3, r3, #16
 80014b6:	4698      	mov	r8, r3
 80014b8:	436f      	muls	r7, r5
 80014ba:	193f      	adds	r7, r7, r4
 80014bc:	4447      	add	r7, r8
 80014be:	4450      	add	r0, sl
 80014c0:	42bc      	cmp	r4, r7
 80014c2:	d903      	bls.n	80014cc <__aeabi_dmul+0x28c>
 80014c4:	2380      	movs	r3, #128	; 0x80
 80014c6:	025b      	lsls	r3, r3, #9
 80014c8:	4698      	mov	r8, r3
 80014ca:	44c4      	add	ip, r8
 80014cc:	9b04      	ldr	r3, [sp, #16]
 80014ce:	9d00      	ldr	r5, [sp, #0]
 80014d0:	4698      	mov	r8, r3
 80014d2:	4445      	add	r5, r8
 80014d4:	42b5      	cmp	r5, r6
 80014d6:	41b6      	sbcs	r6, r6
 80014d8:	4273      	negs	r3, r6
 80014da:	4698      	mov	r8, r3
 80014dc:	464b      	mov	r3, r9
 80014de:	041e      	lsls	r6, r3, #16
 80014e0:	9b05      	ldr	r3, [sp, #20]
 80014e2:	043c      	lsls	r4, r7, #16
 80014e4:	4699      	mov	r9, r3
 80014e6:	0c36      	lsrs	r6, r6, #16
 80014e8:	19a4      	adds	r4, r4, r6
 80014ea:	444c      	add	r4, r9
 80014ec:	46a1      	mov	r9, r4
 80014ee:	4683      	mov	fp, r0
 80014f0:	186e      	adds	r6, r5, r1
 80014f2:	44c1      	add	r9, r8
 80014f4:	428e      	cmp	r6, r1
 80014f6:	4189      	sbcs	r1, r1
 80014f8:	44cb      	add	fp, r9
 80014fa:	465d      	mov	r5, fp
 80014fc:	4249      	negs	r1, r1
 80014fe:	186d      	adds	r5, r5, r1
 8001500:	429c      	cmp	r4, r3
 8001502:	41a4      	sbcs	r4, r4
 8001504:	45c1      	cmp	r9, r8
 8001506:	419b      	sbcs	r3, r3
 8001508:	4583      	cmp	fp, r0
 800150a:	4180      	sbcs	r0, r0
 800150c:	428d      	cmp	r5, r1
 800150e:	4189      	sbcs	r1, r1
 8001510:	425b      	negs	r3, r3
 8001512:	4264      	negs	r4, r4
 8001514:	431c      	orrs	r4, r3
 8001516:	4240      	negs	r0, r0
 8001518:	9b03      	ldr	r3, [sp, #12]
 800151a:	4249      	negs	r1, r1
 800151c:	4301      	orrs	r1, r0
 800151e:	0270      	lsls	r0, r6, #9
 8001520:	0c3f      	lsrs	r7, r7, #16
 8001522:	4318      	orrs	r0, r3
 8001524:	19e4      	adds	r4, r4, r7
 8001526:	1e47      	subs	r7, r0, #1
 8001528:	41b8      	sbcs	r0, r7
 800152a:	1864      	adds	r4, r4, r1
 800152c:	4464      	add	r4, ip
 800152e:	0df6      	lsrs	r6, r6, #23
 8001530:	0261      	lsls	r1, r4, #9
 8001532:	4330      	orrs	r0, r6
 8001534:	0dec      	lsrs	r4, r5, #23
 8001536:	026e      	lsls	r6, r5, #9
 8001538:	430c      	orrs	r4, r1
 800153a:	4330      	orrs	r0, r6
 800153c:	01c9      	lsls	r1, r1, #7
 800153e:	d400      	bmi.n	8001542 <__aeabi_dmul+0x302>
 8001540:	e0f1      	b.n	8001726 <__aeabi_dmul+0x4e6>
 8001542:	2101      	movs	r1, #1
 8001544:	0843      	lsrs	r3, r0, #1
 8001546:	4001      	ands	r1, r0
 8001548:	430b      	orrs	r3, r1
 800154a:	07e0      	lsls	r0, r4, #31
 800154c:	4318      	orrs	r0, r3
 800154e:	0864      	lsrs	r4, r4, #1
 8001550:	4915      	ldr	r1, [pc, #84]	; (80015a8 <__aeabi_dmul+0x368>)
 8001552:	9b02      	ldr	r3, [sp, #8]
 8001554:	468c      	mov	ip, r1
 8001556:	4463      	add	r3, ip
 8001558:	2b00      	cmp	r3, #0
 800155a:	dc00      	bgt.n	800155e <__aeabi_dmul+0x31e>
 800155c:	e097      	b.n	800168e <__aeabi_dmul+0x44e>
 800155e:	0741      	lsls	r1, r0, #29
 8001560:	d009      	beq.n	8001576 <__aeabi_dmul+0x336>
 8001562:	210f      	movs	r1, #15
 8001564:	4001      	ands	r1, r0
 8001566:	2904      	cmp	r1, #4
 8001568:	d005      	beq.n	8001576 <__aeabi_dmul+0x336>
 800156a:	1d01      	adds	r1, r0, #4
 800156c:	4281      	cmp	r1, r0
 800156e:	4180      	sbcs	r0, r0
 8001570:	4240      	negs	r0, r0
 8001572:	1824      	adds	r4, r4, r0
 8001574:	0008      	movs	r0, r1
 8001576:	01e1      	lsls	r1, r4, #7
 8001578:	d506      	bpl.n	8001588 <__aeabi_dmul+0x348>
 800157a:	2180      	movs	r1, #128	; 0x80
 800157c:	00c9      	lsls	r1, r1, #3
 800157e:	468c      	mov	ip, r1
 8001580:	4b0a      	ldr	r3, [pc, #40]	; (80015ac <__aeabi_dmul+0x36c>)
 8001582:	401c      	ands	r4, r3
 8001584:	9b02      	ldr	r3, [sp, #8]
 8001586:	4463      	add	r3, ip
 8001588:	4909      	ldr	r1, [pc, #36]	; (80015b0 <__aeabi_dmul+0x370>)
 800158a:	428b      	cmp	r3, r1
 800158c:	dd00      	ble.n	8001590 <__aeabi_dmul+0x350>
 800158e:	e710      	b.n	80013b2 <__aeabi_dmul+0x172>
 8001590:	0761      	lsls	r1, r4, #29
 8001592:	08c5      	lsrs	r5, r0, #3
 8001594:	0264      	lsls	r4, r4, #9
 8001596:	055b      	lsls	r3, r3, #21
 8001598:	430d      	orrs	r5, r1
 800159a:	0b24      	lsrs	r4, r4, #12
 800159c:	0d5b      	lsrs	r3, r3, #21
 800159e:	e6c1      	b.n	8001324 <__aeabi_dmul+0xe4>
 80015a0:	000007ff 	.word	0x000007ff
 80015a4:	fffffc01 	.word	0xfffffc01
 80015a8:	000003ff 	.word	0x000003ff
 80015ac:	feffffff 	.word	0xfeffffff
 80015b0:	000007fe 	.word	0x000007fe
 80015b4:	464b      	mov	r3, r9
 80015b6:	4323      	orrs	r3, r4
 80015b8:	d059      	beq.n	800166e <__aeabi_dmul+0x42e>
 80015ba:	2c00      	cmp	r4, #0
 80015bc:	d100      	bne.n	80015c0 <__aeabi_dmul+0x380>
 80015be:	e0a3      	b.n	8001708 <__aeabi_dmul+0x4c8>
 80015c0:	0020      	movs	r0, r4
 80015c2:	f000 fd4f 	bl	8002064 <__clzsi2>
 80015c6:	0001      	movs	r1, r0
 80015c8:	0003      	movs	r3, r0
 80015ca:	390b      	subs	r1, #11
 80015cc:	221d      	movs	r2, #29
 80015ce:	1a52      	subs	r2, r2, r1
 80015d0:	4649      	mov	r1, r9
 80015d2:	0018      	movs	r0, r3
 80015d4:	40d1      	lsrs	r1, r2
 80015d6:	464a      	mov	r2, r9
 80015d8:	3808      	subs	r0, #8
 80015da:	4082      	lsls	r2, r0
 80015dc:	4084      	lsls	r4, r0
 80015de:	0010      	movs	r0, r2
 80015e0:	430c      	orrs	r4, r1
 80015e2:	4a74      	ldr	r2, [pc, #464]	; (80017b4 <__aeabi_dmul+0x574>)
 80015e4:	1aeb      	subs	r3, r5, r3
 80015e6:	4694      	mov	ip, r2
 80015e8:	4642      	mov	r2, r8
 80015ea:	4463      	add	r3, ip
 80015ec:	9301      	str	r3, [sp, #4]
 80015ee:	9b01      	ldr	r3, [sp, #4]
 80015f0:	407a      	eors	r2, r7
 80015f2:	3301      	adds	r3, #1
 80015f4:	2100      	movs	r1, #0
 80015f6:	b2d2      	uxtb	r2, r2
 80015f8:	9302      	str	r3, [sp, #8]
 80015fa:	2e0a      	cmp	r6, #10
 80015fc:	dd00      	ble.n	8001600 <__aeabi_dmul+0x3c0>
 80015fe:	e667      	b.n	80012d0 <__aeabi_dmul+0x90>
 8001600:	e683      	b.n	800130a <__aeabi_dmul+0xca>
 8001602:	465b      	mov	r3, fp
 8001604:	4303      	orrs	r3, r0
 8001606:	469a      	mov	sl, r3
 8001608:	d02a      	beq.n	8001660 <__aeabi_dmul+0x420>
 800160a:	465b      	mov	r3, fp
 800160c:	2b00      	cmp	r3, #0
 800160e:	d06d      	beq.n	80016ec <__aeabi_dmul+0x4ac>
 8001610:	4658      	mov	r0, fp
 8001612:	f000 fd27 	bl	8002064 <__clzsi2>
 8001616:	0001      	movs	r1, r0
 8001618:	0003      	movs	r3, r0
 800161a:	390b      	subs	r1, #11
 800161c:	221d      	movs	r2, #29
 800161e:	1a52      	subs	r2, r2, r1
 8001620:	0021      	movs	r1, r4
 8001622:	0018      	movs	r0, r3
 8001624:	465d      	mov	r5, fp
 8001626:	40d1      	lsrs	r1, r2
 8001628:	3808      	subs	r0, #8
 800162a:	4085      	lsls	r5, r0
 800162c:	000a      	movs	r2, r1
 800162e:	4084      	lsls	r4, r0
 8001630:	432a      	orrs	r2, r5
 8001632:	4693      	mov	fp, r2
 8001634:	46a2      	mov	sl, r4
 8001636:	4d5f      	ldr	r5, [pc, #380]	; (80017b4 <__aeabi_dmul+0x574>)
 8001638:	2600      	movs	r6, #0
 800163a:	1aed      	subs	r5, r5, r3
 800163c:	2300      	movs	r3, #0
 800163e:	9300      	str	r3, [sp, #0]
 8001640:	e625      	b.n	800128e <__aeabi_dmul+0x4e>
 8001642:	465b      	mov	r3, fp
 8001644:	4303      	orrs	r3, r0
 8001646:	469a      	mov	sl, r3
 8001648:	d105      	bne.n	8001656 <__aeabi_dmul+0x416>
 800164a:	2300      	movs	r3, #0
 800164c:	469b      	mov	fp, r3
 800164e:	3302      	adds	r3, #2
 8001650:	2608      	movs	r6, #8
 8001652:	9300      	str	r3, [sp, #0]
 8001654:	e61b      	b.n	800128e <__aeabi_dmul+0x4e>
 8001656:	2303      	movs	r3, #3
 8001658:	4682      	mov	sl, r0
 800165a:	260c      	movs	r6, #12
 800165c:	9300      	str	r3, [sp, #0]
 800165e:	e616      	b.n	800128e <__aeabi_dmul+0x4e>
 8001660:	2300      	movs	r3, #0
 8001662:	469b      	mov	fp, r3
 8001664:	3301      	adds	r3, #1
 8001666:	2604      	movs	r6, #4
 8001668:	2500      	movs	r5, #0
 800166a:	9300      	str	r3, [sp, #0]
 800166c:	e60f      	b.n	800128e <__aeabi_dmul+0x4e>
 800166e:	4642      	mov	r2, r8
 8001670:	3301      	adds	r3, #1
 8001672:	9501      	str	r5, [sp, #4]
 8001674:	431e      	orrs	r6, r3
 8001676:	9b01      	ldr	r3, [sp, #4]
 8001678:	407a      	eors	r2, r7
 800167a:	3301      	adds	r3, #1
 800167c:	2400      	movs	r4, #0
 800167e:	2000      	movs	r0, #0
 8001680:	2101      	movs	r1, #1
 8001682:	b2d2      	uxtb	r2, r2
 8001684:	9302      	str	r3, [sp, #8]
 8001686:	2e0a      	cmp	r6, #10
 8001688:	dd00      	ble.n	800168c <__aeabi_dmul+0x44c>
 800168a:	e621      	b.n	80012d0 <__aeabi_dmul+0x90>
 800168c:	e63d      	b.n	800130a <__aeabi_dmul+0xca>
 800168e:	2101      	movs	r1, #1
 8001690:	1ac9      	subs	r1, r1, r3
 8001692:	2938      	cmp	r1, #56	; 0x38
 8001694:	dd00      	ble.n	8001698 <__aeabi_dmul+0x458>
 8001696:	e642      	b.n	800131e <__aeabi_dmul+0xde>
 8001698:	291f      	cmp	r1, #31
 800169a:	dd47      	ble.n	800172c <__aeabi_dmul+0x4ec>
 800169c:	261f      	movs	r6, #31
 800169e:	0025      	movs	r5, r4
 80016a0:	4276      	negs	r6, r6
 80016a2:	1af3      	subs	r3, r6, r3
 80016a4:	40dd      	lsrs	r5, r3
 80016a6:	002b      	movs	r3, r5
 80016a8:	2920      	cmp	r1, #32
 80016aa:	d005      	beq.n	80016b8 <__aeabi_dmul+0x478>
 80016ac:	4942      	ldr	r1, [pc, #264]	; (80017b8 <__aeabi_dmul+0x578>)
 80016ae:	9d02      	ldr	r5, [sp, #8]
 80016b0:	468c      	mov	ip, r1
 80016b2:	4465      	add	r5, ip
 80016b4:	40ac      	lsls	r4, r5
 80016b6:	4320      	orrs	r0, r4
 80016b8:	1e41      	subs	r1, r0, #1
 80016ba:	4188      	sbcs	r0, r1
 80016bc:	4318      	orrs	r0, r3
 80016be:	2307      	movs	r3, #7
 80016c0:	001d      	movs	r5, r3
 80016c2:	2400      	movs	r4, #0
 80016c4:	4005      	ands	r5, r0
 80016c6:	4203      	tst	r3, r0
 80016c8:	d04a      	beq.n	8001760 <__aeabi_dmul+0x520>
 80016ca:	230f      	movs	r3, #15
 80016cc:	2400      	movs	r4, #0
 80016ce:	4003      	ands	r3, r0
 80016d0:	2b04      	cmp	r3, #4
 80016d2:	d042      	beq.n	800175a <__aeabi_dmul+0x51a>
 80016d4:	1d03      	adds	r3, r0, #4
 80016d6:	4283      	cmp	r3, r0
 80016d8:	4180      	sbcs	r0, r0
 80016da:	4240      	negs	r0, r0
 80016dc:	1824      	adds	r4, r4, r0
 80016de:	0018      	movs	r0, r3
 80016e0:	0223      	lsls	r3, r4, #8
 80016e2:	d53a      	bpl.n	800175a <__aeabi_dmul+0x51a>
 80016e4:	2301      	movs	r3, #1
 80016e6:	2400      	movs	r4, #0
 80016e8:	2500      	movs	r5, #0
 80016ea:	e61b      	b.n	8001324 <__aeabi_dmul+0xe4>
 80016ec:	f000 fcba 	bl	8002064 <__clzsi2>
 80016f0:	0001      	movs	r1, r0
 80016f2:	0003      	movs	r3, r0
 80016f4:	3115      	adds	r1, #21
 80016f6:	3320      	adds	r3, #32
 80016f8:	291c      	cmp	r1, #28
 80016fa:	dd8f      	ble.n	800161c <__aeabi_dmul+0x3dc>
 80016fc:	3808      	subs	r0, #8
 80016fe:	2200      	movs	r2, #0
 8001700:	4084      	lsls	r4, r0
 8001702:	4692      	mov	sl, r2
 8001704:	46a3      	mov	fp, r4
 8001706:	e796      	b.n	8001636 <__aeabi_dmul+0x3f6>
 8001708:	f000 fcac 	bl	8002064 <__clzsi2>
 800170c:	0001      	movs	r1, r0
 800170e:	0003      	movs	r3, r0
 8001710:	3115      	adds	r1, #21
 8001712:	3320      	adds	r3, #32
 8001714:	291c      	cmp	r1, #28
 8001716:	dc00      	bgt.n	800171a <__aeabi_dmul+0x4da>
 8001718:	e758      	b.n	80015cc <__aeabi_dmul+0x38c>
 800171a:	0002      	movs	r2, r0
 800171c:	464c      	mov	r4, r9
 800171e:	3a08      	subs	r2, #8
 8001720:	2000      	movs	r0, #0
 8001722:	4094      	lsls	r4, r2
 8001724:	e75d      	b.n	80015e2 <__aeabi_dmul+0x3a2>
 8001726:	9b01      	ldr	r3, [sp, #4]
 8001728:	9302      	str	r3, [sp, #8]
 800172a:	e711      	b.n	8001550 <__aeabi_dmul+0x310>
 800172c:	4b23      	ldr	r3, [pc, #140]	; (80017bc <__aeabi_dmul+0x57c>)
 800172e:	0026      	movs	r6, r4
 8001730:	469c      	mov	ip, r3
 8001732:	0003      	movs	r3, r0
 8001734:	9d02      	ldr	r5, [sp, #8]
 8001736:	40cb      	lsrs	r3, r1
 8001738:	4465      	add	r5, ip
 800173a:	40ae      	lsls	r6, r5
 800173c:	431e      	orrs	r6, r3
 800173e:	0003      	movs	r3, r0
 8001740:	40ab      	lsls	r3, r5
 8001742:	1e58      	subs	r0, r3, #1
 8001744:	4183      	sbcs	r3, r0
 8001746:	0030      	movs	r0, r6
 8001748:	4318      	orrs	r0, r3
 800174a:	40cc      	lsrs	r4, r1
 800174c:	0743      	lsls	r3, r0, #29
 800174e:	d0c7      	beq.n	80016e0 <__aeabi_dmul+0x4a0>
 8001750:	230f      	movs	r3, #15
 8001752:	4003      	ands	r3, r0
 8001754:	2b04      	cmp	r3, #4
 8001756:	d1bd      	bne.n	80016d4 <__aeabi_dmul+0x494>
 8001758:	e7c2      	b.n	80016e0 <__aeabi_dmul+0x4a0>
 800175a:	0765      	lsls	r5, r4, #29
 800175c:	0264      	lsls	r4, r4, #9
 800175e:	0b24      	lsrs	r4, r4, #12
 8001760:	08c0      	lsrs	r0, r0, #3
 8001762:	2300      	movs	r3, #0
 8001764:	4305      	orrs	r5, r0
 8001766:	e5dd      	b.n	8001324 <__aeabi_dmul+0xe4>
 8001768:	2500      	movs	r5, #0
 800176a:	2302      	movs	r3, #2
 800176c:	2e0f      	cmp	r6, #15
 800176e:	d10c      	bne.n	800178a <__aeabi_dmul+0x54a>
 8001770:	2480      	movs	r4, #128	; 0x80
 8001772:	465b      	mov	r3, fp
 8001774:	0324      	lsls	r4, r4, #12
 8001776:	4223      	tst	r3, r4
 8001778:	d00e      	beq.n	8001798 <__aeabi_dmul+0x558>
 800177a:	4221      	tst	r1, r4
 800177c:	d10c      	bne.n	8001798 <__aeabi_dmul+0x558>
 800177e:	430c      	orrs	r4, r1
 8001780:	0324      	lsls	r4, r4, #12
 8001782:	003a      	movs	r2, r7
 8001784:	4b0e      	ldr	r3, [pc, #56]	; (80017c0 <__aeabi_dmul+0x580>)
 8001786:	0b24      	lsrs	r4, r4, #12
 8001788:	e5cc      	b.n	8001324 <__aeabi_dmul+0xe4>
 800178a:	2e0b      	cmp	r6, #11
 800178c:	d000      	beq.n	8001790 <__aeabi_dmul+0x550>
 800178e:	e5a2      	b.n	80012d6 <__aeabi_dmul+0x96>
 8001790:	468b      	mov	fp, r1
 8001792:	46aa      	mov	sl, r5
 8001794:	9300      	str	r3, [sp, #0]
 8001796:	e5f7      	b.n	8001388 <__aeabi_dmul+0x148>
 8001798:	2480      	movs	r4, #128	; 0x80
 800179a:	465b      	mov	r3, fp
 800179c:	0324      	lsls	r4, r4, #12
 800179e:	431c      	orrs	r4, r3
 80017a0:	0324      	lsls	r4, r4, #12
 80017a2:	4642      	mov	r2, r8
 80017a4:	4655      	mov	r5, sl
 80017a6:	4b06      	ldr	r3, [pc, #24]	; (80017c0 <__aeabi_dmul+0x580>)
 80017a8:	0b24      	lsrs	r4, r4, #12
 80017aa:	e5bb      	b.n	8001324 <__aeabi_dmul+0xe4>
 80017ac:	464d      	mov	r5, r9
 80017ae:	0021      	movs	r1, r4
 80017b0:	2303      	movs	r3, #3
 80017b2:	e7db      	b.n	800176c <__aeabi_dmul+0x52c>
 80017b4:	fffffc0d 	.word	0xfffffc0d
 80017b8:	0000043e 	.word	0x0000043e
 80017bc:	0000041e 	.word	0x0000041e
 80017c0:	000007ff 	.word	0x000007ff

080017c4 <__aeabi_dsub>:
 80017c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017c6:	4657      	mov	r7, sl
 80017c8:	464e      	mov	r6, r9
 80017ca:	4645      	mov	r5, r8
 80017cc:	46de      	mov	lr, fp
 80017ce:	b5e0      	push	{r5, r6, r7, lr}
 80017d0:	000d      	movs	r5, r1
 80017d2:	0004      	movs	r4, r0
 80017d4:	0019      	movs	r1, r3
 80017d6:	0010      	movs	r0, r2
 80017d8:	032b      	lsls	r3, r5, #12
 80017da:	0a5b      	lsrs	r3, r3, #9
 80017dc:	0f62      	lsrs	r2, r4, #29
 80017de:	431a      	orrs	r2, r3
 80017e0:	00e3      	lsls	r3, r4, #3
 80017e2:	030c      	lsls	r4, r1, #12
 80017e4:	0a64      	lsrs	r4, r4, #9
 80017e6:	0f47      	lsrs	r7, r0, #29
 80017e8:	4327      	orrs	r7, r4
 80017ea:	4cd0      	ldr	r4, [pc, #832]	; (8001b2c <__aeabi_dsub+0x368>)
 80017ec:	006e      	lsls	r6, r5, #1
 80017ee:	4691      	mov	r9, r2
 80017f0:	b083      	sub	sp, #12
 80017f2:	004a      	lsls	r2, r1, #1
 80017f4:	00c0      	lsls	r0, r0, #3
 80017f6:	4698      	mov	r8, r3
 80017f8:	46a2      	mov	sl, r4
 80017fa:	0d76      	lsrs	r6, r6, #21
 80017fc:	0fed      	lsrs	r5, r5, #31
 80017fe:	0d52      	lsrs	r2, r2, #21
 8001800:	0fc9      	lsrs	r1, r1, #31
 8001802:	9001      	str	r0, [sp, #4]
 8001804:	42a2      	cmp	r2, r4
 8001806:	d100      	bne.n	800180a <__aeabi_dsub+0x46>
 8001808:	e0b9      	b.n	800197e <__aeabi_dsub+0x1ba>
 800180a:	2401      	movs	r4, #1
 800180c:	4061      	eors	r1, r4
 800180e:	468b      	mov	fp, r1
 8001810:	428d      	cmp	r5, r1
 8001812:	d100      	bne.n	8001816 <__aeabi_dsub+0x52>
 8001814:	e08d      	b.n	8001932 <__aeabi_dsub+0x16e>
 8001816:	1ab4      	subs	r4, r6, r2
 8001818:	46a4      	mov	ip, r4
 800181a:	2c00      	cmp	r4, #0
 800181c:	dc00      	bgt.n	8001820 <__aeabi_dsub+0x5c>
 800181e:	e0b7      	b.n	8001990 <__aeabi_dsub+0x1cc>
 8001820:	2a00      	cmp	r2, #0
 8001822:	d100      	bne.n	8001826 <__aeabi_dsub+0x62>
 8001824:	e0cb      	b.n	80019be <__aeabi_dsub+0x1fa>
 8001826:	4ac1      	ldr	r2, [pc, #772]	; (8001b2c <__aeabi_dsub+0x368>)
 8001828:	4296      	cmp	r6, r2
 800182a:	d100      	bne.n	800182e <__aeabi_dsub+0x6a>
 800182c:	e186      	b.n	8001b3c <__aeabi_dsub+0x378>
 800182e:	2280      	movs	r2, #128	; 0x80
 8001830:	0412      	lsls	r2, r2, #16
 8001832:	4317      	orrs	r7, r2
 8001834:	4662      	mov	r2, ip
 8001836:	2a38      	cmp	r2, #56	; 0x38
 8001838:	dd00      	ble.n	800183c <__aeabi_dsub+0x78>
 800183a:	e1a4      	b.n	8001b86 <__aeabi_dsub+0x3c2>
 800183c:	2a1f      	cmp	r2, #31
 800183e:	dd00      	ble.n	8001842 <__aeabi_dsub+0x7e>
 8001840:	e21d      	b.n	8001c7e <__aeabi_dsub+0x4ba>
 8001842:	4661      	mov	r1, ip
 8001844:	2220      	movs	r2, #32
 8001846:	003c      	movs	r4, r7
 8001848:	1a52      	subs	r2, r2, r1
 800184a:	0001      	movs	r1, r0
 800184c:	4090      	lsls	r0, r2
 800184e:	4094      	lsls	r4, r2
 8001850:	1e42      	subs	r2, r0, #1
 8001852:	4190      	sbcs	r0, r2
 8001854:	4662      	mov	r2, ip
 8001856:	46a0      	mov	r8, r4
 8001858:	4664      	mov	r4, ip
 800185a:	40d7      	lsrs	r7, r2
 800185c:	464a      	mov	r2, r9
 800185e:	40e1      	lsrs	r1, r4
 8001860:	4644      	mov	r4, r8
 8001862:	1bd2      	subs	r2, r2, r7
 8001864:	4691      	mov	r9, r2
 8001866:	430c      	orrs	r4, r1
 8001868:	4304      	orrs	r4, r0
 800186a:	1b1c      	subs	r4, r3, r4
 800186c:	42a3      	cmp	r3, r4
 800186e:	4192      	sbcs	r2, r2
 8001870:	464b      	mov	r3, r9
 8001872:	4252      	negs	r2, r2
 8001874:	1a9b      	subs	r3, r3, r2
 8001876:	469a      	mov	sl, r3
 8001878:	4653      	mov	r3, sl
 800187a:	021b      	lsls	r3, r3, #8
 800187c:	d400      	bmi.n	8001880 <__aeabi_dsub+0xbc>
 800187e:	e12b      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001880:	4653      	mov	r3, sl
 8001882:	025a      	lsls	r2, r3, #9
 8001884:	0a53      	lsrs	r3, r2, #9
 8001886:	469a      	mov	sl, r3
 8001888:	4653      	mov	r3, sl
 800188a:	2b00      	cmp	r3, #0
 800188c:	d100      	bne.n	8001890 <__aeabi_dsub+0xcc>
 800188e:	e166      	b.n	8001b5e <__aeabi_dsub+0x39a>
 8001890:	4650      	mov	r0, sl
 8001892:	f000 fbe7 	bl	8002064 <__clzsi2>
 8001896:	0003      	movs	r3, r0
 8001898:	3b08      	subs	r3, #8
 800189a:	2220      	movs	r2, #32
 800189c:	0020      	movs	r0, r4
 800189e:	1ad2      	subs	r2, r2, r3
 80018a0:	4651      	mov	r1, sl
 80018a2:	40d0      	lsrs	r0, r2
 80018a4:	4099      	lsls	r1, r3
 80018a6:	0002      	movs	r2, r0
 80018a8:	409c      	lsls	r4, r3
 80018aa:	430a      	orrs	r2, r1
 80018ac:	429e      	cmp	r6, r3
 80018ae:	dd00      	ble.n	80018b2 <__aeabi_dsub+0xee>
 80018b0:	e164      	b.n	8001b7c <__aeabi_dsub+0x3b8>
 80018b2:	1b9b      	subs	r3, r3, r6
 80018b4:	1c59      	adds	r1, r3, #1
 80018b6:	291f      	cmp	r1, #31
 80018b8:	dd00      	ble.n	80018bc <__aeabi_dsub+0xf8>
 80018ba:	e0fe      	b.n	8001aba <__aeabi_dsub+0x2f6>
 80018bc:	2320      	movs	r3, #32
 80018be:	0010      	movs	r0, r2
 80018c0:	0026      	movs	r6, r4
 80018c2:	1a5b      	subs	r3, r3, r1
 80018c4:	409c      	lsls	r4, r3
 80018c6:	4098      	lsls	r0, r3
 80018c8:	40ce      	lsrs	r6, r1
 80018ca:	40ca      	lsrs	r2, r1
 80018cc:	1e63      	subs	r3, r4, #1
 80018ce:	419c      	sbcs	r4, r3
 80018d0:	4330      	orrs	r0, r6
 80018d2:	4692      	mov	sl, r2
 80018d4:	2600      	movs	r6, #0
 80018d6:	4304      	orrs	r4, r0
 80018d8:	0763      	lsls	r3, r4, #29
 80018da:	d009      	beq.n	80018f0 <__aeabi_dsub+0x12c>
 80018dc:	230f      	movs	r3, #15
 80018de:	4023      	ands	r3, r4
 80018e0:	2b04      	cmp	r3, #4
 80018e2:	d005      	beq.n	80018f0 <__aeabi_dsub+0x12c>
 80018e4:	1d23      	adds	r3, r4, #4
 80018e6:	42a3      	cmp	r3, r4
 80018e8:	41a4      	sbcs	r4, r4
 80018ea:	4264      	negs	r4, r4
 80018ec:	44a2      	add	sl, r4
 80018ee:	001c      	movs	r4, r3
 80018f0:	4653      	mov	r3, sl
 80018f2:	021b      	lsls	r3, r3, #8
 80018f4:	d400      	bmi.n	80018f8 <__aeabi_dsub+0x134>
 80018f6:	e0f2      	b.n	8001ade <__aeabi_dsub+0x31a>
 80018f8:	4b8c      	ldr	r3, [pc, #560]	; (8001b2c <__aeabi_dsub+0x368>)
 80018fa:	3601      	adds	r6, #1
 80018fc:	429e      	cmp	r6, r3
 80018fe:	d100      	bne.n	8001902 <__aeabi_dsub+0x13e>
 8001900:	e10f      	b.n	8001b22 <__aeabi_dsub+0x35e>
 8001902:	4653      	mov	r3, sl
 8001904:	498a      	ldr	r1, [pc, #552]	; (8001b30 <__aeabi_dsub+0x36c>)
 8001906:	08e4      	lsrs	r4, r4, #3
 8001908:	400b      	ands	r3, r1
 800190a:	0019      	movs	r1, r3
 800190c:	075b      	lsls	r3, r3, #29
 800190e:	4323      	orrs	r3, r4
 8001910:	0572      	lsls	r2, r6, #21
 8001912:	024c      	lsls	r4, r1, #9
 8001914:	0b24      	lsrs	r4, r4, #12
 8001916:	0d52      	lsrs	r2, r2, #21
 8001918:	0512      	lsls	r2, r2, #20
 800191a:	4322      	orrs	r2, r4
 800191c:	07ed      	lsls	r5, r5, #31
 800191e:	432a      	orrs	r2, r5
 8001920:	0018      	movs	r0, r3
 8001922:	0011      	movs	r1, r2
 8001924:	b003      	add	sp, #12
 8001926:	bcf0      	pop	{r4, r5, r6, r7}
 8001928:	46bb      	mov	fp, r7
 800192a:	46b2      	mov	sl, r6
 800192c:	46a9      	mov	r9, r5
 800192e:	46a0      	mov	r8, r4
 8001930:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001932:	1ab4      	subs	r4, r6, r2
 8001934:	46a4      	mov	ip, r4
 8001936:	2c00      	cmp	r4, #0
 8001938:	dd59      	ble.n	80019ee <__aeabi_dsub+0x22a>
 800193a:	2a00      	cmp	r2, #0
 800193c:	d100      	bne.n	8001940 <__aeabi_dsub+0x17c>
 800193e:	e0b0      	b.n	8001aa2 <__aeabi_dsub+0x2de>
 8001940:	4556      	cmp	r6, sl
 8001942:	d100      	bne.n	8001946 <__aeabi_dsub+0x182>
 8001944:	e0fa      	b.n	8001b3c <__aeabi_dsub+0x378>
 8001946:	2280      	movs	r2, #128	; 0x80
 8001948:	0412      	lsls	r2, r2, #16
 800194a:	4317      	orrs	r7, r2
 800194c:	4662      	mov	r2, ip
 800194e:	2a38      	cmp	r2, #56	; 0x38
 8001950:	dd00      	ble.n	8001954 <__aeabi_dsub+0x190>
 8001952:	e0d4      	b.n	8001afe <__aeabi_dsub+0x33a>
 8001954:	2a1f      	cmp	r2, #31
 8001956:	dc00      	bgt.n	800195a <__aeabi_dsub+0x196>
 8001958:	e1c0      	b.n	8001cdc <__aeabi_dsub+0x518>
 800195a:	0039      	movs	r1, r7
 800195c:	3a20      	subs	r2, #32
 800195e:	40d1      	lsrs	r1, r2
 8001960:	4662      	mov	r2, ip
 8001962:	2a20      	cmp	r2, #32
 8001964:	d006      	beq.n	8001974 <__aeabi_dsub+0x1b0>
 8001966:	4664      	mov	r4, ip
 8001968:	2240      	movs	r2, #64	; 0x40
 800196a:	1b12      	subs	r2, r2, r4
 800196c:	003c      	movs	r4, r7
 800196e:	4094      	lsls	r4, r2
 8001970:	4304      	orrs	r4, r0
 8001972:	9401      	str	r4, [sp, #4]
 8001974:	9c01      	ldr	r4, [sp, #4]
 8001976:	1e62      	subs	r2, r4, #1
 8001978:	4194      	sbcs	r4, r2
 800197a:	430c      	orrs	r4, r1
 800197c:	e0c3      	b.n	8001b06 <__aeabi_dsub+0x342>
 800197e:	003c      	movs	r4, r7
 8001980:	4304      	orrs	r4, r0
 8001982:	d02b      	beq.n	80019dc <__aeabi_dsub+0x218>
 8001984:	468b      	mov	fp, r1
 8001986:	428d      	cmp	r5, r1
 8001988:	d02e      	beq.n	80019e8 <__aeabi_dsub+0x224>
 800198a:	4c6a      	ldr	r4, [pc, #424]	; (8001b34 <__aeabi_dsub+0x370>)
 800198c:	46a4      	mov	ip, r4
 800198e:	44b4      	add	ip, r6
 8001990:	4664      	mov	r4, ip
 8001992:	2c00      	cmp	r4, #0
 8001994:	d05f      	beq.n	8001a56 <__aeabi_dsub+0x292>
 8001996:	1b94      	subs	r4, r2, r6
 8001998:	46a4      	mov	ip, r4
 800199a:	2e00      	cmp	r6, #0
 800199c:	d000      	beq.n	80019a0 <__aeabi_dsub+0x1dc>
 800199e:	e120      	b.n	8001be2 <__aeabi_dsub+0x41e>
 80019a0:	464c      	mov	r4, r9
 80019a2:	431c      	orrs	r4, r3
 80019a4:	d100      	bne.n	80019a8 <__aeabi_dsub+0x1e4>
 80019a6:	e1c7      	b.n	8001d38 <__aeabi_dsub+0x574>
 80019a8:	4661      	mov	r1, ip
 80019aa:	1e4c      	subs	r4, r1, #1
 80019ac:	2901      	cmp	r1, #1
 80019ae:	d100      	bne.n	80019b2 <__aeabi_dsub+0x1ee>
 80019b0:	e223      	b.n	8001dfa <__aeabi_dsub+0x636>
 80019b2:	4d5e      	ldr	r5, [pc, #376]	; (8001b2c <__aeabi_dsub+0x368>)
 80019b4:	45ac      	cmp	ip, r5
 80019b6:	d100      	bne.n	80019ba <__aeabi_dsub+0x1f6>
 80019b8:	e1d8      	b.n	8001d6c <__aeabi_dsub+0x5a8>
 80019ba:	46a4      	mov	ip, r4
 80019bc:	e11a      	b.n	8001bf4 <__aeabi_dsub+0x430>
 80019be:	003a      	movs	r2, r7
 80019c0:	4302      	orrs	r2, r0
 80019c2:	d100      	bne.n	80019c6 <__aeabi_dsub+0x202>
 80019c4:	e0e4      	b.n	8001b90 <__aeabi_dsub+0x3cc>
 80019c6:	0022      	movs	r2, r4
 80019c8:	3a01      	subs	r2, #1
 80019ca:	2c01      	cmp	r4, #1
 80019cc:	d100      	bne.n	80019d0 <__aeabi_dsub+0x20c>
 80019ce:	e1c3      	b.n	8001d58 <__aeabi_dsub+0x594>
 80019d0:	4956      	ldr	r1, [pc, #344]	; (8001b2c <__aeabi_dsub+0x368>)
 80019d2:	428c      	cmp	r4, r1
 80019d4:	d100      	bne.n	80019d8 <__aeabi_dsub+0x214>
 80019d6:	e0b1      	b.n	8001b3c <__aeabi_dsub+0x378>
 80019d8:	4694      	mov	ip, r2
 80019da:	e72b      	b.n	8001834 <__aeabi_dsub+0x70>
 80019dc:	2401      	movs	r4, #1
 80019de:	4061      	eors	r1, r4
 80019e0:	468b      	mov	fp, r1
 80019e2:	428d      	cmp	r5, r1
 80019e4:	d000      	beq.n	80019e8 <__aeabi_dsub+0x224>
 80019e6:	e716      	b.n	8001816 <__aeabi_dsub+0x52>
 80019e8:	4952      	ldr	r1, [pc, #328]	; (8001b34 <__aeabi_dsub+0x370>)
 80019ea:	468c      	mov	ip, r1
 80019ec:	44b4      	add	ip, r6
 80019ee:	4664      	mov	r4, ip
 80019f0:	2c00      	cmp	r4, #0
 80019f2:	d100      	bne.n	80019f6 <__aeabi_dsub+0x232>
 80019f4:	e0d3      	b.n	8001b9e <__aeabi_dsub+0x3da>
 80019f6:	1b91      	subs	r1, r2, r6
 80019f8:	468c      	mov	ip, r1
 80019fa:	2e00      	cmp	r6, #0
 80019fc:	d100      	bne.n	8001a00 <__aeabi_dsub+0x23c>
 80019fe:	e15e      	b.n	8001cbe <__aeabi_dsub+0x4fa>
 8001a00:	494a      	ldr	r1, [pc, #296]	; (8001b2c <__aeabi_dsub+0x368>)
 8001a02:	428a      	cmp	r2, r1
 8001a04:	d100      	bne.n	8001a08 <__aeabi_dsub+0x244>
 8001a06:	e1be      	b.n	8001d86 <__aeabi_dsub+0x5c2>
 8001a08:	2180      	movs	r1, #128	; 0x80
 8001a0a:	464c      	mov	r4, r9
 8001a0c:	0409      	lsls	r1, r1, #16
 8001a0e:	430c      	orrs	r4, r1
 8001a10:	46a1      	mov	r9, r4
 8001a12:	4661      	mov	r1, ip
 8001a14:	2938      	cmp	r1, #56	; 0x38
 8001a16:	dd00      	ble.n	8001a1a <__aeabi_dsub+0x256>
 8001a18:	e1ba      	b.n	8001d90 <__aeabi_dsub+0x5cc>
 8001a1a:	291f      	cmp	r1, #31
 8001a1c:	dd00      	ble.n	8001a20 <__aeabi_dsub+0x25c>
 8001a1e:	e227      	b.n	8001e70 <__aeabi_dsub+0x6ac>
 8001a20:	2420      	movs	r4, #32
 8001a22:	1a64      	subs	r4, r4, r1
 8001a24:	4649      	mov	r1, r9
 8001a26:	40a1      	lsls	r1, r4
 8001a28:	001e      	movs	r6, r3
 8001a2a:	4688      	mov	r8, r1
 8001a2c:	4661      	mov	r1, ip
 8001a2e:	40a3      	lsls	r3, r4
 8001a30:	40ce      	lsrs	r6, r1
 8001a32:	4641      	mov	r1, r8
 8001a34:	1e5c      	subs	r4, r3, #1
 8001a36:	41a3      	sbcs	r3, r4
 8001a38:	4331      	orrs	r1, r6
 8001a3a:	4319      	orrs	r1, r3
 8001a3c:	000c      	movs	r4, r1
 8001a3e:	4663      	mov	r3, ip
 8001a40:	4649      	mov	r1, r9
 8001a42:	40d9      	lsrs	r1, r3
 8001a44:	187f      	adds	r7, r7, r1
 8001a46:	1824      	adds	r4, r4, r0
 8001a48:	4284      	cmp	r4, r0
 8001a4a:	419b      	sbcs	r3, r3
 8001a4c:	425b      	negs	r3, r3
 8001a4e:	469a      	mov	sl, r3
 8001a50:	0016      	movs	r6, r2
 8001a52:	44ba      	add	sl, r7
 8001a54:	e05d      	b.n	8001b12 <__aeabi_dsub+0x34e>
 8001a56:	4c38      	ldr	r4, [pc, #224]	; (8001b38 <__aeabi_dsub+0x374>)
 8001a58:	1c72      	adds	r2, r6, #1
 8001a5a:	4222      	tst	r2, r4
 8001a5c:	d000      	beq.n	8001a60 <__aeabi_dsub+0x29c>
 8001a5e:	e0df      	b.n	8001c20 <__aeabi_dsub+0x45c>
 8001a60:	464a      	mov	r2, r9
 8001a62:	431a      	orrs	r2, r3
 8001a64:	2e00      	cmp	r6, #0
 8001a66:	d000      	beq.n	8001a6a <__aeabi_dsub+0x2a6>
 8001a68:	e15c      	b.n	8001d24 <__aeabi_dsub+0x560>
 8001a6a:	2a00      	cmp	r2, #0
 8001a6c:	d100      	bne.n	8001a70 <__aeabi_dsub+0x2ac>
 8001a6e:	e1cf      	b.n	8001e10 <__aeabi_dsub+0x64c>
 8001a70:	003a      	movs	r2, r7
 8001a72:	4302      	orrs	r2, r0
 8001a74:	d100      	bne.n	8001a78 <__aeabi_dsub+0x2b4>
 8001a76:	e17f      	b.n	8001d78 <__aeabi_dsub+0x5b4>
 8001a78:	1a1c      	subs	r4, r3, r0
 8001a7a:	464a      	mov	r2, r9
 8001a7c:	42a3      	cmp	r3, r4
 8001a7e:	4189      	sbcs	r1, r1
 8001a80:	1bd2      	subs	r2, r2, r7
 8001a82:	4249      	negs	r1, r1
 8001a84:	1a52      	subs	r2, r2, r1
 8001a86:	4692      	mov	sl, r2
 8001a88:	0212      	lsls	r2, r2, #8
 8001a8a:	d400      	bmi.n	8001a8e <__aeabi_dsub+0x2ca>
 8001a8c:	e20a      	b.n	8001ea4 <__aeabi_dsub+0x6e0>
 8001a8e:	1ac4      	subs	r4, r0, r3
 8001a90:	42a0      	cmp	r0, r4
 8001a92:	4180      	sbcs	r0, r0
 8001a94:	464b      	mov	r3, r9
 8001a96:	4240      	negs	r0, r0
 8001a98:	1aff      	subs	r7, r7, r3
 8001a9a:	1a3b      	subs	r3, r7, r0
 8001a9c:	469a      	mov	sl, r3
 8001a9e:	465d      	mov	r5, fp
 8001aa0:	e71a      	b.n	80018d8 <__aeabi_dsub+0x114>
 8001aa2:	003a      	movs	r2, r7
 8001aa4:	4302      	orrs	r2, r0
 8001aa6:	d073      	beq.n	8001b90 <__aeabi_dsub+0x3cc>
 8001aa8:	0022      	movs	r2, r4
 8001aaa:	3a01      	subs	r2, #1
 8001aac:	2c01      	cmp	r4, #1
 8001aae:	d100      	bne.n	8001ab2 <__aeabi_dsub+0x2ee>
 8001ab0:	e0cb      	b.n	8001c4a <__aeabi_dsub+0x486>
 8001ab2:	4554      	cmp	r4, sl
 8001ab4:	d042      	beq.n	8001b3c <__aeabi_dsub+0x378>
 8001ab6:	4694      	mov	ip, r2
 8001ab8:	e748      	b.n	800194c <__aeabi_dsub+0x188>
 8001aba:	0010      	movs	r0, r2
 8001abc:	3b1f      	subs	r3, #31
 8001abe:	40d8      	lsrs	r0, r3
 8001ac0:	2920      	cmp	r1, #32
 8001ac2:	d003      	beq.n	8001acc <__aeabi_dsub+0x308>
 8001ac4:	2340      	movs	r3, #64	; 0x40
 8001ac6:	1a5b      	subs	r3, r3, r1
 8001ac8:	409a      	lsls	r2, r3
 8001aca:	4314      	orrs	r4, r2
 8001acc:	1e63      	subs	r3, r4, #1
 8001ace:	419c      	sbcs	r4, r3
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	2600      	movs	r6, #0
 8001ad4:	469a      	mov	sl, r3
 8001ad6:	4304      	orrs	r4, r0
 8001ad8:	0763      	lsls	r3, r4, #29
 8001ada:	d000      	beq.n	8001ade <__aeabi_dsub+0x31a>
 8001adc:	e6fe      	b.n	80018dc <__aeabi_dsub+0x118>
 8001ade:	4652      	mov	r2, sl
 8001ae0:	08e3      	lsrs	r3, r4, #3
 8001ae2:	0752      	lsls	r2, r2, #29
 8001ae4:	4313      	orrs	r3, r2
 8001ae6:	4652      	mov	r2, sl
 8001ae8:	46b4      	mov	ip, r6
 8001aea:	08d2      	lsrs	r2, r2, #3
 8001aec:	490f      	ldr	r1, [pc, #60]	; (8001b2c <__aeabi_dsub+0x368>)
 8001aee:	458c      	cmp	ip, r1
 8001af0:	d02a      	beq.n	8001b48 <__aeabi_dsub+0x384>
 8001af2:	0312      	lsls	r2, r2, #12
 8001af4:	0b14      	lsrs	r4, r2, #12
 8001af6:	4662      	mov	r2, ip
 8001af8:	0552      	lsls	r2, r2, #21
 8001afa:	0d52      	lsrs	r2, r2, #21
 8001afc:	e70c      	b.n	8001918 <__aeabi_dsub+0x154>
 8001afe:	003c      	movs	r4, r7
 8001b00:	4304      	orrs	r4, r0
 8001b02:	1e62      	subs	r2, r4, #1
 8001b04:	4194      	sbcs	r4, r2
 8001b06:	18e4      	adds	r4, r4, r3
 8001b08:	429c      	cmp	r4, r3
 8001b0a:	4192      	sbcs	r2, r2
 8001b0c:	4252      	negs	r2, r2
 8001b0e:	444a      	add	r2, r9
 8001b10:	4692      	mov	sl, r2
 8001b12:	4653      	mov	r3, sl
 8001b14:	021b      	lsls	r3, r3, #8
 8001b16:	d5df      	bpl.n	8001ad8 <__aeabi_dsub+0x314>
 8001b18:	4b04      	ldr	r3, [pc, #16]	; (8001b2c <__aeabi_dsub+0x368>)
 8001b1a:	3601      	adds	r6, #1
 8001b1c:	429e      	cmp	r6, r3
 8001b1e:	d000      	beq.n	8001b22 <__aeabi_dsub+0x35e>
 8001b20:	e0a0      	b.n	8001c64 <__aeabi_dsub+0x4a0>
 8001b22:	0032      	movs	r2, r6
 8001b24:	2400      	movs	r4, #0
 8001b26:	2300      	movs	r3, #0
 8001b28:	e6f6      	b.n	8001918 <__aeabi_dsub+0x154>
 8001b2a:	46c0      	nop			; (mov r8, r8)
 8001b2c:	000007ff 	.word	0x000007ff
 8001b30:	ff7fffff 	.word	0xff7fffff
 8001b34:	fffff801 	.word	0xfffff801
 8001b38:	000007fe 	.word	0x000007fe
 8001b3c:	08db      	lsrs	r3, r3, #3
 8001b3e:	464a      	mov	r2, r9
 8001b40:	0752      	lsls	r2, r2, #29
 8001b42:	4313      	orrs	r3, r2
 8001b44:	464a      	mov	r2, r9
 8001b46:	08d2      	lsrs	r2, r2, #3
 8001b48:	0019      	movs	r1, r3
 8001b4a:	4311      	orrs	r1, r2
 8001b4c:	d100      	bne.n	8001b50 <__aeabi_dsub+0x38c>
 8001b4e:	e1b5      	b.n	8001ebc <__aeabi_dsub+0x6f8>
 8001b50:	2480      	movs	r4, #128	; 0x80
 8001b52:	0324      	lsls	r4, r4, #12
 8001b54:	4314      	orrs	r4, r2
 8001b56:	0324      	lsls	r4, r4, #12
 8001b58:	4ad5      	ldr	r2, [pc, #852]	; (8001eb0 <__aeabi_dsub+0x6ec>)
 8001b5a:	0b24      	lsrs	r4, r4, #12
 8001b5c:	e6dc      	b.n	8001918 <__aeabi_dsub+0x154>
 8001b5e:	0020      	movs	r0, r4
 8001b60:	f000 fa80 	bl	8002064 <__clzsi2>
 8001b64:	0003      	movs	r3, r0
 8001b66:	3318      	adds	r3, #24
 8001b68:	2b1f      	cmp	r3, #31
 8001b6a:	dc00      	bgt.n	8001b6e <__aeabi_dsub+0x3aa>
 8001b6c:	e695      	b.n	800189a <__aeabi_dsub+0xd6>
 8001b6e:	0022      	movs	r2, r4
 8001b70:	3808      	subs	r0, #8
 8001b72:	4082      	lsls	r2, r0
 8001b74:	2400      	movs	r4, #0
 8001b76:	429e      	cmp	r6, r3
 8001b78:	dc00      	bgt.n	8001b7c <__aeabi_dsub+0x3b8>
 8001b7a:	e69a      	b.n	80018b2 <__aeabi_dsub+0xee>
 8001b7c:	1af6      	subs	r6, r6, r3
 8001b7e:	4bcd      	ldr	r3, [pc, #820]	; (8001eb4 <__aeabi_dsub+0x6f0>)
 8001b80:	401a      	ands	r2, r3
 8001b82:	4692      	mov	sl, r2
 8001b84:	e6a8      	b.n	80018d8 <__aeabi_dsub+0x114>
 8001b86:	003c      	movs	r4, r7
 8001b88:	4304      	orrs	r4, r0
 8001b8a:	1e62      	subs	r2, r4, #1
 8001b8c:	4194      	sbcs	r4, r2
 8001b8e:	e66c      	b.n	800186a <__aeabi_dsub+0xa6>
 8001b90:	464a      	mov	r2, r9
 8001b92:	08db      	lsrs	r3, r3, #3
 8001b94:	0752      	lsls	r2, r2, #29
 8001b96:	4313      	orrs	r3, r2
 8001b98:	464a      	mov	r2, r9
 8001b9a:	08d2      	lsrs	r2, r2, #3
 8001b9c:	e7a6      	b.n	8001aec <__aeabi_dsub+0x328>
 8001b9e:	4cc6      	ldr	r4, [pc, #792]	; (8001eb8 <__aeabi_dsub+0x6f4>)
 8001ba0:	1c72      	adds	r2, r6, #1
 8001ba2:	4222      	tst	r2, r4
 8001ba4:	d000      	beq.n	8001ba8 <__aeabi_dsub+0x3e4>
 8001ba6:	e0ac      	b.n	8001d02 <__aeabi_dsub+0x53e>
 8001ba8:	464a      	mov	r2, r9
 8001baa:	431a      	orrs	r2, r3
 8001bac:	2e00      	cmp	r6, #0
 8001bae:	d000      	beq.n	8001bb2 <__aeabi_dsub+0x3ee>
 8001bb0:	e105      	b.n	8001dbe <__aeabi_dsub+0x5fa>
 8001bb2:	2a00      	cmp	r2, #0
 8001bb4:	d100      	bne.n	8001bb8 <__aeabi_dsub+0x3f4>
 8001bb6:	e156      	b.n	8001e66 <__aeabi_dsub+0x6a2>
 8001bb8:	003a      	movs	r2, r7
 8001bba:	4302      	orrs	r2, r0
 8001bbc:	d100      	bne.n	8001bc0 <__aeabi_dsub+0x3fc>
 8001bbe:	e0db      	b.n	8001d78 <__aeabi_dsub+0x5b4>
 8001bc0:	181c      	adds	r4, r3, r0
 8001bc2:	429c      	cmp	r4, r3
 8001bc4:	419b      	sbcs	r3, r3
 8001bc6:	444f      	add	r7, r9
 8001bc8:	46ba      	mov	sl, r7
 8001bca:	425b      	negs	r3, r3
 8001bcc:	449a      	add	sl, r3
 8001bce:	4653      	mov	r3, sl
 8001bd0:	021b      	lsls	r3, r3, #8
 8001bd2:	d400      	bmi.n	8001bd6 <__aeabi_dsub+0x412>
 8001bd4:	e780      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001bd6:	4652      	mov	r2, sl
 8001bd8:	4bb6      	ldr	r3, [pc, #728]	; (8001eb4 <__aeabi_dsub+0x6f0>)
 8001bda:	2601      	movs	r6, #1
 8001bdc:	401a      	ands	r2, r3
 8001bde:	4692      	mov	sl, r2
 8001be0:	e77a      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001be2:	4cb3      	ldr	r4, [pc, #716]	; (8001eb0 <__aeabi_dsub+0x6ec>)
 8001be4:	42a2      	cmp	r2, r4
 8001be6:	d100      	bne.n	8001bea <__aeabi_dsub+0x426>
 8001be8:	e0c0      	b.n	8001d6c <__aeabi_dsub+0x5a8>
 8001bea:	2480      	movs	r4, #128	; 0x80
 8001bec:	464d      	mov	r5, r9
 8001bee:	0424      	lsls	r4, r4, #16
 8001bf0:	4325      	orrs	r5, r4
 8001bf2:	46a9      	mov	r9, r5
 8001bf4:	4664      	mov	r4, ip
 8001bf6:	2c38      	cmp	r4, #56	; 0x38
 8001bf8:	dc53      	bgt.n	8001ca2 <__aeabi_dsub+0x4de>
 8001bfa:	4661      	mov	r1, ip
 8001bfc:	2c1f      	cmp	r4, #31
 8001bfe:	dd00      	ble.n	8001c02 <__aeabi_dsub+0x43e>
 8001c00:	e0cd      	b.n	8001d9e <__aeabi_dsub+0x5da>
 8001c02:	2520      	movs	r5, #32
 8001c04:	001e      	movs	r6, r3
 8001c06:	1b2d      	subs	r5, r5, r4
 8001c08:	464c      	mov	r4, r9
 8001c0a:	40ab      	lsls	r3, r5
 8001c0c:	40ac      	lsls	r4, r5
 8001c0e:	40ce      	lsrs	r6, r1
 8001c10:	1e5d      	subs	r5, r3, #1
 8001c12:	41ab      	sbcs	r3, r5
 8001c14:	4334      	orrs	r4, r6
 8001c16:	4323      	orrs	r3, r4
 8001c18:	464c      	mov	r4, r9
 8001c1a:	40cc      	lsrs	r4, r1
 8001c1c:	1b3f      	subs	r7, r7, r4
 8001c1e:	e045      	b.n	8001cac <__aeabi_dsub+0x4e8>
 8001c20:	464a      	mov	r2, r9
 8001c22:	1a1c      	subs	r4, r3, r0
 8001c24:	1bd1      	subs	r1, r2, r7
 8001c26:	42a3      	cmp	r3, r4
 8001c28:	4192      	sbcs	r2, r2
 8001c2a:	4252      	negs	r2, r2
 8001c2c:	4692      	mov	sl, r2
 8001c2e:	000a      	movs	r2, r1
 8001c30:	4651      	mov	r1, sl
 8001c32:	1a52      	subs	r2, r2, r1
 8001c34:	4692      	mov	sl, r2
 8001c36:	0212      	lsls	r2, r2, #8
 8001c38:	d500      	bpl.n	8001c3c <__aeabi_dsub+0x478>
 8001c3a:	e083      	b.n	8001d44 <__aeabi_dsub+0x580>
 8001c3c:	4653      	mov	r3, sl
 8001c3e:	4323      	orrs	r3, r4
 8001c40:	d000      	beq.n	8001c44 <__aeabi_dsub+0x480>
 8001c42:	e621      	b.n	8001888 <__aeabi_dsub+0xc4>
 8001c44:	2200      	movs	r2, #0
 8001c46:	2500      	movs	r5, #0
 8001c48:	e753      	b.n	8001af2 <__aeabi_dsub+0x32e>
 8001c4a:	181c      	adds	r4, r3, r0
 8001c4c:	429c      	cmp	r4, r3
 8001c4e:	419b      	sbcs	r3, r3
 8001c50:	444f      	add	r7, r9
 8001c52:	46ba      	mov	sl, r7
 8001c54:	425b      	negs	r3, r3
 8001c56:	449a      	add	sl, r3
 8001c58:	4653      	mov	r3, sl
 8001c5a:	2601      	movs	r6, #1
 8001c5c:	021b      	lsls	r3, r3, #8
 8001c5e:	d400      	bmi.n	8001c62 <__aeabi_dsub+0x49e>
 8001c60:	e73a      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001c62:	2602      	movs	r6, #2
 8001c64:	4652      	mov	r2, sl
 8001c66:	4b93      	ldr	r3, [pc, #588]	; (8001eb4 <__aeabi_dsub+0x6f0>)
 8001c68:	2101      	movs	r1, #1
 8001c6a:	401a      	ands	r2, r3
 8001c6c:	0013      	movs	r3, r2
 8001c6e:	4021      	ands	r1, r4
 8001c70:	0862      	lsrs	r2, r4, #1
 8001c72:	430a      	orrs	r2, r1
 8001c74:	07dc      	lsls	r4, r3, #31
 8001c76:	085b      	lsrs	r3, r3, #1
 8001c78:	469a      	mov	sl, r3
 8001c7a:	4314      	orrs	r4, r2
 8001c7c:	e62c      	b.n	80018d8 <__aeabi_dsub+0x114>
 8001c7e:	0039      	movs	r1, r7
 8001c80:	3a20      	subs	r2, #32
 8001c82:	40d1      	lsrs	r1, r2
 8001c84:	4662      	mov	r2, ip
 8001c86:	2a20      	cmp	r2, #32
 8001c88:	d006      	beq.n	8001c98 <__aeabi_dsub+0x4d4>
 8001c8a:	4664      	mov	r4, ip
 8001c8c:	2240      	movs	r2, #64	; 0x40
 8001c8e:	1b12      	subs	r2, r2, r4
 8001c90:	003c      	movs	r4, r7
 8001c92:	4094      	lsls	r4, r2
 8001c94:	4304      	orrs	r4, r0
 8001c96:	9401      	str	r4, [sp, #4]
 8001c98:	9c01      	ldr	r4, [sp, #4]
 8001c9a:	1e62      	subs	r2, r4, #1
 8001c9c:	4194      	sbcs	r4, r2
 8001c9e:	430c      	orrs	r4, r1
 8001ca0:	e5e3      	b.n	800186a <__aeabi_dsub+0xa6>
 8001ca2:	4649      	mov	r1, r9
 8001ca4:	4319      	orrs	r1, r3
 8001ca6:	000b      	movs	r3, r1
 8001ca8:	1e5c      	subs	r4, r3, #1
 8001caa:	41a3      	sbcs	r3, r4
 8001cac:	1ac4      	subs	r4, r0, r3
 8001cae:	42a0      	cmp	r0, r4
 8001cb0:	419b      	sbcs	r3, r3
 8001cb2:	425b      	negs	r3, r3
 8001cb4:	1afb      	subs	r3, r7, r3
 8001cb6:	469a      	mov	sl, r3
 8001cb8:	465d      	mov	r5, fp
 8001cba:	0016      	movs	r6, r2
 8001cbc:	e5dc      	b.n	8001878 <__aeabi_dsub+0xb4>
 8001cbe:	4649      	mov	r1, r9
 8001cc0:	4319      	orrs	r1, r3
 8001cc2:	d100      	bne.n	8001cc6 <__aeabi_dsub+0x502>
 8001cc4:	e0ae      	b.n	8001e24 <__aeabi_dsub+0x660>
 8001cc6:	4661      	mov	r1, ip
 8001cc8:	4664      	mov	r4, ip
 8001cca:	3901      	subs	r1, #1
 8001ccc:	2c01      	cmp	r4, #1
 8001cce:	d100      	bne.n	8001cd2 <__aeabi_dsub+0x50e>
 8001cd0:	e0e0      	b.n	8001e94 <__aeabi_dsub+0x6d0>
 8001cd2:	4c77      	ldr	r4, [pc, #476]	; (8001eb0 <__aeabi_dsub+0x6ec>)
 8001cd4:	45a4      	cmp	ip, r4
 8001cd6:	d056      	beq.n	8001d86 <__aeabi_dsub+0x5c2>
 8001cd8:	468c      	mov	ip, r1
 8001cda:	e69a      	b.n	8001a12 <__aeabi_dsub+0x24e>
 8001cdc:	4661      	mov	r1, ip
 8001cde:	2220      	movs	r2, #32
 8001ce0:	003c      	movs	r4, r7
 8001ce2:	1a52      	subs	r2, r2, r1
 8001ce4:	4094      	lsls	r4, r2
 8001ce6:	0001      	movs	r1, r0
 8001ce8:	4090      	lsls	r0, r2
 8001cea:	46a0      	mov	r8, r4
 8001cec:	4664      	mov	r4, ip
 8001cee:	1e42      	subs	r2, r0, #1
 8001cf0:	4190      	sbcs	r0, r2
 8001cf2:	4662      	mov	r2, ip
 8001cf4:	40e1      	lsrs	r1, r4
 8001cf6:	4644      	mov	r4, r8
 8001cf8:	40d7      	lsrs	r7, r2
 8001cfa:	430c      	orrs	r4, r1
 8001cfc:	4304      	orrs	r4, r0
 8001cfe:	44b9      	add	r9, r7
 8001d00:	e701      	b.n	8001b06 <__aeabi_dsub+0x342>
 8001d02:	496b      	ldr	r1, [pc, #428]	; (8001eb0 <__aeabi_dsub+0x6ec>)
 8001d04:	428a      	cmp	r2, r1
 8001d06:	d100      	bne.n	8001d0a <__aeabi_dsub+0x546>
 8001d08:	e70c      	b.n	8001b24 <__aeabi_dsub+0x360>
 8001d0a:	1818      	adds	r0, r3, r0
 8001d0c:	4298      	cmp	r0, r3
 8001d0e:	419b      	sbcs	r3, r3
 8001d10:	444f      	add	r7, r9
 8001d12:	425b      	negs	r3, r3
 8001d14:	18fb      	adds	r3, r7, r3
 8001d16:	07dc      	lsls	r4, r3, #31
 8001d18:	0840      	lsrs	r0, r0, #1
 8001d1a:	085b      	lsrs	r3, r3, #1
 8001d1c:	469a      	mov	sl, r3
 8001d1e:	0016      	movs	r6, r2
 8001d20:	4304      	orrs	r4, r0
 8001d22:	e6d9      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001d24:	2a00      	cmp	r2, #0
 8001d26:	d000      	beq.n	8001d2a <__aeabi_dsub+0x566>
 8001d28:	e081      	b.n	8001e2e <__aeabi_dsub+0x66a>
 8001d2a:	003b      	movs	r3, r7
 8001d2c:	4303      	orrs	r3, r0
 8001d2e:	d11d      	bne.n	8001d6c <__aeabi_dsub+0x5a8>
 8001d30:	2280      	movs	r2, #128	; 0x80
 8001d32:	2500      	movs	r5, #0
 8001d34:	0312      	lsls	r2, r2, #12
 8001d36:	e70b      	b.n	8001b50 <__aeabi_dsub+0x38c>
 8001d38:	08c0      	lsrs	r0, r0, #3
 8001d3a:	077b      	lsls	r3, r7, #29
 8001d3c:	465d      	mov	r5, fp
 8001d3e:	4303      	orrs	r3, r0
 8001d40:	08fa      	lsrs	r2, r7, #3
 8001d42:	e6d3      	b.n	8001aec <__aeabi_dsub+0x328>
 8001d44:	1ac4      	subs	r4, r0, r3
 8001d46:	42a0      	cmp	r0, r4
 8001d48:	4180      	sbcs	r0, r0
 8001d4a:	464b      	mov	r3, r9
 8001d4c:	4240      	negs	r0, r0
 8001d4e:	1aff      	subs	r7, r7, r3
 8001d50:	1a3b      	subs	r3, r7, r0
 8001d52:	469a      	mov	sl, r3
 8001d54:	465d      	mov	r5, fp
 8001d56:	e597      	b.n	8001888 <__aeabi_dsub+0xc4>
 8001d58:	1a1c      	subs	r4, r3, r0
 8001d5a:	464a      	mov	r2, r9
 8001d5c:	42a3      	cmp	r3, r4
 8001d5e:	419b      	sbcs	r3, r3
 8001d60:	1bd7      	subs	r7, r2, r7
 8001d62:	425b      	negs	r3, r3
 8001d64:	1afb      	subs	r3, r7, r3
 8001d66:	469a      	mov	sl, r3
 8001d68:	2601      	movs	r6, #1
 8001d6a:	e585      	b.n	8001878 <__aeabi_dsub+0xb4>
 8001d6c:	08c0      	lsrs	r0, r0, #3
 8001d6e:	077b      	lsls	r3, r7, #29
 8001d70:	465d      	mov	r5, fp
 8001d72:	4303      	orrs	r3, r0
 8001d74:	08fa      	lsrs	r2, r7, #3
 8001d76:	e6e7      	b.n	8001b48 <__aeabi_dsub+0x384>
 8001d78:	464a      	mov	r2, r9
 8001d7a:	08db      	lsrs	r3, r3, #3
 8001d7c:	0752      	lsls	r2, r2, #29
 8001d7e:	4313      	orrs	r3, r2
 8001d80:	464a      	mov	r2, r9
 8001d82:	08d2      	lsrs	r2, r2, #3
 8001d84:	e6b5      	b.n	8001af2 <__aeabi_dsub+0x32e>
 8001d86:	08c0      	lsrs	r0, r0, #3
 8001d88:	077b      	lsls	r3, r7, #29
 8001d8a:	4303      	orrs	r3, r0
 8001d8c:	08fa      	lsrs	r2, r7, #3
 8001d8e:	e6db      	b.n	8001b48 <__aeabi_dsub+0x384>
 8001d90:	4649      	mov	r1, r9
 8001d92:	4319      	orrs	r1, r3
 8001d94:	000b      	movs	r3, r1
 8001d96:	1e59      	subs	r1, r3, #1
 8001d98:	418b      	sbcs	r3, r1
 8001d9a:	001c      	movs	r4, r3
 8001d9c:	e653      	b.n	8001a46 <__aeabi_dsub+0x282>
 8001d9e:	464d      	mov	r5, r9
 8001da0:	3c20      	subs	r4, #32
 8001da2:	40e5      	lsrs	r5, r4
 8001da4:	2920      	cmp	r1, #32
 8001da6:	d005      	beq.n	8001db4 <__aeabi_dsub+0x5f0>
 8001da8:	2440      	movs	r4, #64	; 0x40
 8001daa:	1a64      	subs	r4, r4, r1
 8001dac:	4649      	mov	r1, r9
 8001dae:	40a1      	lsls	r1, r4
 8001db0:	430b      	orrs	r3, r1
 8001db2:	4698      	mov	r8, r3
 8001db4:	4643      	mov	r3, r8
 8001db6:	1e5c      	subs	r4, r3, #1
 8001db8:	41a3      	sbcs	r3, r4
 8001dba:	432b      	orrs	r3, r5
 8001dbc:	e776      	b.n	8001cac <__aeabi_dsub+0x4e8>
 8001dbe:	2a00      	cmp	r2, #0
 8001dc0:	d0e1      	beq.n	8001d86 <__aeabi_dsub+0x5c2>
 8001dc2:	003a      	movs	r2, r7
 8001dc4:	08db      	lsrs	r3, r3, #3
 8001dc6:	4302      	orrs	r2, r0
 8001dc8:	d100      	bne.n	8001dcc <__aeabi_dsub+0x608>
 8001dca:	e6b8      	b.n	8001b3e <__aeabi_dsub+0x37a>
 8001dcc:	464a      	mov	r2, r9
 8001dce:	0752      	lsls	r2, r2, #29
 8001dd0:	2480      	movs	r4, #128	; 0x80
 8001dd2:	4313      	orrs	r3, r2
 8001dd4:	464a      	mov	r2, r9
 8001dd6:	0324      	lsls	r4, r4, #12
 8001dd8:	08d2      	lsrs	r2, r2, #3
 8001dda:	4222      	tst	r2, r4
 8001ddc:	d007      	beq.n	8001dee <__aeabi_dsub+0x62a>
 8001dde:	08fe      	lsrs	r6, r7, #3
 8001de0:	4226      	tst	r6, r4
 8001de2:	d104      	bne.n	8001dee <__aeabi_dsub+0x62a>
 8001de4:	465d      	mov	r5, fp
 8001de6:	0032      	movs	r2, r6
 8001de8:	08c3      	lsrs	r3, r0, #3
 8001dea:	077f      	lsls	r7, r7, #29
 8001dec:	433b      	orrs	r3, r7
 8001dee:	0f59      	lsrs	r1, r3, #29
 8001df0:	00db      	lsls	r3, r3, #3
 8001df2:	0749      	lsls	r1, r1, #29
 8001df4:	08db      	lsrs	r3, r3, #3
 8001df6:	430b      	orrs	r3, r1
 8001df8:	e6a6      	b.n	8001b48 <__aeabi_dsub+0x384>
 8001dfa:	1ac4      	subs	r4, r0, r3
 8001dfc:	42a0      	cmp	r0, r4
 8001dfe:	4180      	sbcs	r0, r0
 8001e00:	464b      	mov	r3, r9
 8001e02:	4240      	negs	r0, r0
 8001e04:	1aff      	subs	r7, r7, r3
 8001e06:	1a3b      	subs	r3, r7, r0
 8001e08:	469a      	mov	sl, r3
 8001e0a:	465d      	mov	r5, fp
 8001e0c:	2601      	movs	r6, #1
 8001e0e:	e533      	b.n	8001878 <__aeabi_dsub+0xb4>
 8001e10:	003b      	movs	r3, r7
 8001e12:	4303      	orrs	r3, r0
 8001e14:	d100      	bne.n	8001e18 <__aeabi_dsub+0x654>
 8001e16:	e715      	b.n	8001c44 <__aeabi_dsub+0x480>
 8001e18:	08c0      	lsrs	r0, r0, #3
 8001e1a:	077b      	lsls	r3, r7, #29
 8001e1c:	465d      	mov	r5, fp
 8001e1e:	4303      	orrs	r3, r0
 8001e20:	08fa      	lsrs	r2, r7, #3
 8001e22:	e666      	b.n	8001af2 <__aeabi_dsub+0x32e>
 8001e24:	08c0      	lsrs	r0, r0, #3
 8001e26:	077b      	lsls	r3, r7, #29
 8001e28:	4303      	orrs	r3, r0
 8001e2a:	08fa      	lsrs	r2, r7, #3
 8001e2c:	e65e      	b.n	8001aec <__aeabi_dsub+0x328>
 8001e2e:	003a      	movs	r2, r7
 8001e30:	08db      	lsrs	r3, r3, #3
 8001e32:	4302      	orrs	r2, r0
 8001e34:	d100      	bne.n	8001e38 <__aeabi_dsub+0x674>
 8001e36:	e682      	b.n	8001b3e <__aeabi_dsub+0x37a>
 8001e38:	464a      	mov	r2, r9
 8001e3a:	0752      	lsls	r2, r2, #29
 8001e3c:	2480      	movs	r4, #128	; 0x80
 8001e3e:	4313      	orrs	r3, r2
 8001e40:	464a      	mov	r2, r9
 8001e42:	0324      	lsls	r4, r4, #12
 8001e44:	08d2      	lsrs	r2, r2, #3
 8001e46:	4222      	tst	r2, r4
 8001e48:	d007      	beq.n	8001e5a <__aeabi_dsub+0x696>
 8001e4a:	08fe      	lsrs	r6, r7, #3
 8001e4c:	4226      	tst	r6, r4
 8001e4e:	d104      	bne.n	8001e5a <__aeabi_dsub+0x696>
 8001e50:	465d      	mov	r5, fp
 8001e52:	0032      	movs	r2, r6
 8001e54:	08c3      	lsrs	r3, r0, #3
 8001e56:	077f      	lsls	r7, r7, #29
 8001e58:	433b      	orrs	r3, r7
 8001e5a:	0f59      	lsrs	r1, r3, #29
 8001e5c:	00db      	lsls	r3, r3, #3
 8001e5e:	08db      	lsrs	r3, r3, #3
 8001e60:	0749      	lsls	r1, r1, #29
 8001e62:	430b      	orrs	r3, r1
 8001e64:	e670      	b.n	8001b48 <__aeabi_dsub+0x384>
 8001e66:	08c0      	lsrs	r0, r0, #3
 8001e68:	077b      	lsls	r3, r7, #29
 8001e6a:	4303      	orrs	r3, r0
 8001e6c:	08fa      	lsrs	r2, r7, #3
 8001e6e:	e640      	b.n	8001af2 <__aeabi_dsub+0x32e>
 8001e70:	464c      	mov	r4, r9
 8001e72:	3920      	subs	r1, #32
 8001e74:	40cc      	lsrs	r4, r1
 8001e76:	4661      	mov	r1, ip
 8001e78:	2920      	cmp	r1, #32
 8001e7a:	d006      	beq.n	8001e8a <__aeabi_dsub+0x6c6>
 8001e7c:	4666      	mov	r6, ip
 8001e7e:	2140      	movs	r1, #64	; 0x40
 8001e80:	1b89      	subs	r1, r1, r6
 8001e82:	464e      	mov	r6, r9
 8001e84:	408e      	lsls	r6, r1
 8001e86:	4333      	orrs	r3, r6
 8001e88:	4698      	mov	r8, r3
 8001e8a:	4643      	mov	r3, r8
 8001e8c:	1e59      	subs	r1, r3, #1
 8001e8e:	418b      	sbcs	r3, r1
 8001e90:	431c      	orrs	r4, r3
 8001e92:	e5d8      	b.n	8001a46 <__aeabi_dsub+0x282>
 8001e94:	181c      	adds	r4, r3, r0
 8001e96:	4284      	cmp	r4, r0
 8001e98:	4180      	sbcs	r0, r0
 8001e9a:	444f      	add	r7, r9
 8001e9c:	46ba      	mov	sl, r7
 8001e9e:	4240      	negs	r0, r0
 8001ea0:	4482      	add	sl, r0
 8001ea2:	e6d9      	b.n	8001c58 <__aeabi_dsub+0x494>
 8001ea4:	4653      	mov	r3, sl
 8001ea6:	4323      	orrs	r3, r4
 8001ea8:	d100      	bne.n	8001eac <__aeabi_dsub+0x6e8>
 8001eaa:	e6cb      	b.n	8001c44 <__aeabi_dsub+0x480>
 8001eac:	e614      	b.n	8001ad8 <__aeabi_dsub+0x314>
 8001eae:	46c0      	nop			; (mov r8, r8)
 8001eb0:	000007ff 	.word	0x000007ff
 8001eb4:	ff7fffff 	.word	0xff7fffff
 8001eb8:	000007fe 	.word	0x000007fe
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	4a01      	ldr	r2, [pc, #4]	; (8001ec4 <__aeabi_dsub+0x700>)
 8001ec0:	001c      	movs	r4, r3
 8001ec2:	e529      	b.n	8001918 <__aeabi_dsub+0x154>
 8001ec4:	000007ff 	.word	0x000007ff

08001ec8 <__aeabi_f2d>:
 8001ec8:	b570      	push	{r4, r5, r6, lr}
 8001eca:	0242      	lsls	r2, r0, #9
 8001ecc:	0043      	lsls	r3, r0, #1
 8001ece:	0fc4      	lsrs	r4, r0, #31
 8001ed0:	20fe      	movs	r0, #254	; 0xfe
 8001ed2:	0e1b      	lsrs	r3, r3, #24
 8001ed4:	1c59      	adds	r1, r3, #1
 8001ed6:	0a55      	lsrs	r5, r2, #9
 8001ed8:	4208      	tst	r0, r1
 8001eda:	d00c      	beq.n	8001ef6 <__aeabi_f2d+0x2e>
 8001edc:	21e0      	movs	r1, #224	; 0xe0
 8001ede:	0089      	lsls	r1, r1, #2
 8001ee0:	468c      	mov	ip, r1
 8001ee2:	076d      	lsls	r5, r5, #29
 8001ee4:	0b12      	lsrs	r2, r2, #12
 8001ee6:	4463      	add	r3, ip
 8001ee8:	051b      	lsls	r3, r3, #20
 8001eea:	4313      	orrs	r3, r2
 8001eec:	07e4      	lsls	r4, r4, #31
 8001eee:	4323      	orrs	r3, r4
 8001ef0:	0028      	movs	r0, r5
 8001ef2:	0019      	movs	r1, r3
 8001ef4:	bd70      	pop	{r4, r5, r6, pc}
 8001ef6:	2b00      	cmp	r3, #0
 8001ef8:	d114      	bne.n	8001f24 <__aeabi_f2d+0x5c>
 8001efa:	2d00      	cmp	r5, #0
 8001efc:	d01b      	beq.n	8001f36 <__aeabi_f2d+0x6e>
 8001efe:	0028      	movs	r0, r5
 8001f00:	f000 f8b0 	bl	8002064 <__clzsi2>
 8001f04:	280a      	cmp	r0, #10
 8001f06:	dc1c      	bgt.n	8001f42 <__aeabi_f2d+0x7a>
 8001f08:	230b      	movs	r3, #11
 8001f0a:	002a      	movs	r2, r5
 8001f0c:	1a1b      	subs	r3, r3, r0
 8001f0e:	40da      	lsrs	r2, r3
 8001f10:	0003      	movs	r3, r0
 8001f12:	3315      	adds	r3, #21
 8001f14:	409d      	lsls	r5, r3
 8001f16:	4b0e      	ldr	r3, [pc, #56]	; (8001f50 <__aeabi_f2d+0x88>)
 8001f18:	0312      	lsls	r2, r2, #12
 8001f1a:	1a1b      	subs	r3, r3, r0
 8001f1c:	055b      	lsls	r3, r3, #21
 8001f1e:	0b12      	lsrs	r2, r2, #12
 8001f20:	0d5b      	lsrs	r3, r3, #21
 8001f22:	e7e1      	b.n	8001ee8 <__aeabi_f2d+0x20>
 8001f24:	2d00      	cmp	r5, #0
 8001f26:	d009      	beq.n	8001f3c <__aeabi_f2d+0x74>
 8001f28:	0b13      	lsrs	r3, r2, #12
 8001f2a:	2280      	movs	r2, #128	; 0x80
 8001f2c:	0312      	lsls	r2, r2, #12
 8001f2e:	431a      	orrs	r2, r3
 8001f30:	076d      	lsls	r5, r5, #29
 8001f32:	4b08      	ldr	r3, [pc, #32]	; (8001f54 <__aeabi_f2d+0x8c>)
 8001f34:	e7d8      	b.n	8001ee8 <__aeabi_f2d+0x20>
 8001f36:	2300      	movs	r3, #0
 8001f38:	2200      	movs	r2, #0
 8001f3a:	e7d5      	b.n	8001ee8 <__aeabi_f2d+0x20>
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	4b05      	ldr	r3, [pc, #20]	; (8001f54 <__aeabi_f2d+0x8c>)
 8001f40:	e7d2      	b.n	8001ee8 <__aeabi_f2d+0x20>
 8001f42:	0003      	movs	r3, r0
 8001f44:	002a      	movs	r2, r5
 8001f46:	3b0b      	subs	r3, #11
 8001f48:	409a      	lsls	r2, r3
 8001f4a:	2500      	movs	r5, #0
 8001f4c:	e7e3      	b.n	8001f16 <__aeabi_f2d+0x4e>
 8001f4e:	46c0      	nop			; (mov r8, r8)
 8001f50:	00000389 	.word	0x00000389
 8001f54:	000007ff 	.word	0x000007ff

08001f58 <__aeabi_d2f>:
 8001f58:	0002      	movs	r2, r0
 8001f5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f5c:	004b      	lsls	r3, r1, #1
 8001f5e:	030d      	lsls	r5, r1, #12
 8001f60:	0f40      	lsrs	r0, r0, #29
 8001f62:	0d5b      	lsrs	r3, r3, #21
 8001f64:	0fcc      	lsrs	r4, r1, #31
 8001f66:	0a6d      	lsrs	r5, r5, #9
 8001f68:	493a      	ldr	r1, [pc, #232]	; (8002054 <__aeabi_d2f+0xfc>)
 8001f6a:	4305      	orrs	r5, r0
 8001f6c:	1c58      	adds	r0, r3, #1
 8001f6e:	00d7      	lsls	r7, r2, #3
 8001f70:	4208      	tst	r0, r1
 8001f72:	d00a      	beq.n	8001f8a <__aeabi_d2f+0x32>
 8001f74:	4938      	ldr	r1, [pc, #224]	; (8002058 <__aeabi_d2f+0x100>)
 8001f76:	1859      	adds	r1, r3, r1
 8001f78:	29fe      	cmp	r1, #254	; 0xfe
 8001f7a:	dd16      	ble.n	8001faa <__aeabi_d2f+0x52>
 8001f7c:	20ff      	movs	r0, #255	; 0xff
 8001f7e:	2200      	movs	r2, #0
 8001f80:	05c0      	lsls	r0, r0, #23
 8001f82:	4310      	orrs	r0, r2
 8001f84:	07e4      	lsls	r4, r4, #31
 8001f86:	4320      	orrs	r0, r4
 8001f88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f8a:	2b00      	cmp	r3, #0
 8001f8c:	d106      	bne.n	8001f9c <__aeabi_d2f+0x44>
 8001f8e:	433d      	orrs	r5, r7
 8001f90:	d026      	beq.n	8001fe0 <__aeabi_d2f+0x88>
 8001f92:	2205      	movs	r2, #5
 8001f94:	0192      	lsls	r2, r2, #6
 8001f96:	0a52      	lsrs	r2, r2, #9
 8001f98:	b2d8      	uxtb	r0, r3
 8001f9a:	e7f1      	b.n	8001f80 <__aeabi_d2f+0x28>
 8001f9c:	432f      	orrs	r7, r5
 8001f9e:	d0ed      	beq.n	8001f7c <__aeabi_d2f+0x24>
 8001fa0:	2280      	movs	r2, #128	; 0x80
 8001fa2:	03d2      	lsls	r2, r2, #15
 8001fa4:	20ff      	movs	r0, #255	; 0xff
 8001fa6:	432a      	orrs	r2, r5
 8001fa8:	e7ea      	b.n	8001f80 <__aeabi_d2f+0x28>
 8001faa:	2900      	cmp	r1, #0
 8001fac:	dd1b      	ble.n	8001fe6 <__aeabi_d2f+0x8e>
 8001fae:	0192      	lsls	r2, r2, #6
 8001fb0:	1e50      	subs	r0, r2, #1
 8001fb2:	4182      	sbcs	r2, r0
 8001fb4:	00ed      	lsls	r5, r5, #3
 8001fb6:	0f7f      	lsrs	r7, r7, #29
 8001fb8:	432a      	orrs	r2, r5
 8001fba:	433a      	orrs	r2, r7
 8001fbc:	0753      	lsls	r3, r2, #29
 8001fbe:	d047      	beq.n	8002050 <__aeabi_d2f+0xf8>
 8001fc0:	230f      	movs	r3, #15
 8001fc2:	4013      	ands	r3, r2
 8001fc4:	2b04      	cmp	r3, #4
 8001fc6:	d000      	beq.n	8001fca <__aeabi_d2f+0x72>
 8001fc8:	3204      	adds	r2, #4
 8001fca:	2380      	movs	r3, #128	; 0x80
 8001fcc:	04db      	lsls	r3, r3, #19
 8001fce:	4013      	ands	r3, r2
 8001fd0:	d03e      	beq.n	8002050 <__aeabi_d2f+0xf8>
 8001fd2:	1c48      	adds	r0, r1, #1
 8001fd4:	29fe      	cmp	r1, #254	; 0xfe
 8001fd6:	d0d1      	beq.n	8001f7c <__aeabi_d2f+0x24>
 8001fd8:	0192      	lsls	r2, r2, #6
 8001fda:	0a52      	lsrs	r2, r2, #9
 8001fdc:	b2c0      	uxtb	r0, r0
 8001fde:	e7cf      	b.n	8001f80 <__aeabi_d2f+0x28>
 8001fe0:	2000      	movs	r0, #0
 8001fe2:	2200      	movs	r2, #0
 8001fe4:	e7cc      	b.n	8001f80 <__aeabi_d2f+0x28>
 8001fe6:	000a      	movs	r2, r1
 8001fe8:	3217      	adds	r2, #23
 8001fea:	db2f      	blt.n	800204c <__aeabi_d2f+0xf4>
 8001fec:	2680      	movs	r6, #128	; 0x80
 8001fee:	0436      	lsls	r6, r6, #16
 8001ff0:	432e      	orrs	r6, r5
 8001ff2:	251e      	movs	r5, #30
 8001ff4:	1a6d      	subs	r5, r5, r1
 8001ff6:	2d1f      	cmp	r5, #31
 8001ff8:	dd11      	ble.n	800201e <__aeabi_d2f+0xc6>
 8001ffa:	2202      	movs	r2, #2
 8001ffc:	4252      	negs	r2, r2
 8001ffe:	1a52      	subs	r2, r2, r1
 8002000:	0031      	movs	r1, r6
 8002002:	40d1      	lsrs	r1, r2
 8002004:	2d20      	cmp	r5, #32
 8002006:	d004      	beq.n	8002012 <__aeabi_d2f+0xba>
 8002008:	4a14      	ldr	r2, [pc, #80]	; (800205c <__aeabi_d2f+0x104>)
 800200a:	4694      	mov	ip, r2
 800200c:	4463      	add	r3, ip
 800200e:	409e      	lsls	r6, r3
 8002010:	4337      	orrs	r7, r6
 8002012:	003a      	movs	r2, r7
 8002014:	1e53      	subs	r3, r2, #1
 8002016:	419a      	sbcs	r2, r3
 8002018:	430a      	orrs	r2, r1
 800201a:	2100      	movs	r1, #0
 800201c:	e7ce      	b.n	8001fbc <__aeabi_d2f+0x64>
 800201e:	4a10      	ldr	r2, [pc, #64]	; (8002060 <__aeabi_d2f+0x108>)
 8002020:	0038      	movs	r0, r7
 8002022:	4694      	mov	ip, r2
 8002024:	4463      	add	r3, ip
 8002026:	4098      	lsls	r0, r3
 8002028:	003a      	movs	r2, r7
 800202a:	1e41      	subs	r1, r0, #1
 800202c:	4188      	sbcs	r0, r1
 800202e:	409e      	lsls	r6, r3
 8002030:	40ea      	lsrs	r2, r5
 8002032:	4330      	orrs	r0, r6
 8002034:	4302      	orrs	r2, r0
 8002036:	2100      	movs	r1, #0
 8002038:	0753      	lsls	r3, r2, #29
 800203a:	d1c1      	bne.n	8001fc0 <__aeabi_d2f+0x68>
 800203c:	2180      	movs	r1, #128	; 0x80
 800203e:	0013      	movs	r3, r2
 8002040:	04c9      	lsls	r1, r1, #19
 8002042:	2001      	movs	r0, #1
 8002044:	400b      	ands	r3, r1
 8002046:	420a      	tst	r2, r1
 8002048:	d1c6      	bne.n	8001fd8 <__aeabi_d2f+0x80>
 800204a:	e7a3      	b.n	8001f94 <__aeabi_d2f+0x3c>
 800204c:	2300      	movs	r3, #0
 800204e:	e7a0      	b.n	8001f92 <__aeabi_d2f+0x3a>
 8002050:	000b      	movs	r3, r1
 8002052:	e79f      	b.n	8001f94 <__aeabi_d2f+0x3c>
 8002054:	000007fe 	.word	0x000007fe
 8002058:	fffffc80 	.word	0xfffffc80
 800205c:	fffffca2 	.word	0xfffffca2
 8002060:	fffffc82 	.word	0xfffffc82

08002064 <__clzsi2>:
 8002064:	211c      	movs	r1, #28
 8002066:	2301      	movs	r3, #1
 8002068:	041b      	lsls	r3, r3, #16
 800206a:	4298      	cmp	r0, r3
 800206c:	d301      	bcc.n	8002072 <__clzsi2+0xe>
 800206e:	0c00      	lsrs	r0, r0, #16
 8002070:	3910      	subs	r1, #16
 8002072:	0a1b      	lsrs	r3, r3, #8
 8002074:	4298      	cmp	r0, r3
 8002076:	d301      	bcc.n	800207c <__clzsi2+0x18>
 8002078:	0a00      	lsrs	r0, r0, #8
 800207a:	3908      	subs	r1, #8
 800207c:	091b      	lsrs	r3, r3, #4
 800207e:	4298      	cmp	r0, r3
 8002080:	d301      	bcc.n	8002086 <__clzsi2+0x22>
 8002082:	0900      	lsrs	r0, r0, #4
 8002084:	3904      	subs	r1, #4
 8002086:	a202      	add	r2, pc, #8	; (adr r2, 8002090 <__clzsi2+0x2c>)
 8002088:	5c10      	ldrb	r0, [r2, r0]
 800208a:	1840      	adds	r0, r0, r1
 800208c:	4770      	bx	lr
 800208e:	46c0      	nop			; (mov r8, r8)
 8002090:	02020304 	.word	0x02020304
 8002094:	01010101 	.word	0x01010101
	...

080020a0 <HAL_Init>:
 80020a0:	b580      	push	{r7, lr}
 80020a2:	b082      	sub	sp, #8
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	1dfb      	adds	r3, r7, #7
 80020a8:	2200      	movs	r2, #0
 80020aa:	701a      	strb	r2, [r3, #0]
 80020ac:	4b0b      	ldr	r3, [pc, #44]	; (80020dc <HAL_Init+0x3c>)
 80020ae:	681a      	ldr	r2, [r3, #0]
 80020b0:	4b0a      	ldr	r3, [pc, #40]	; (80020dc <HAL_Init+0x3c>)
 80020b2:	2180      	movs	r1, #128	; 0x80
 80020b4:	0049      	lsls	r1, r1, #1
 80020b6:	430a      	orrs	r2, r1
 80020b8:	601a      	str	r2, [r3, #0]
 80020ba:	2003      	movs	r0, #3
 80020bc:	f000 f810 	bl	80020e0 <HAL_InitTick>
 80020c0:	1e03      	subs	r3, r0, #0
 80020c2:	d003      	beq.n	80020cc <HAL_Init+0x2c>
 80020c4:	1dfb      	adds	r3, r7, #7
 80020c6:	2201      	movs	r2, #1
 80020c8:	701a      	strb	r2, [r3, #0]
 80020ca:	e001      	b.n	80020d0 <HAL_Init+0x30>
 80020cc:	f002 fcb6 	bl	8004a3c <HAL_MspInit>
 80020d0:	1dfb      	adds	r3, r7, #7
 80020d2:	781b      	ldrb	r3, [r3, #0]
 80020d4:	0018      	movs	r0, r3
 80020d6:	46bd      	mov	sp, r7
 80020d8:	b002      	add	sp, #8
 80020da:	bd80      	pop	{r7, pc}
 80020dc:	40022000 	.word	0x40022000

080020e0 <HAL_InitTick>:
 80020e0:	b590      	push	{r4, r7, lr}
 80020e2:	b085      	sub	sp, #20
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	6078      	str	r0, [r7, #4]
 80020e8:	230f      	movs	r3, #15
 80020ea:	18fb      	adds	r3, r7, r3
 80020ec:	2200      	movs	r2, #0
 80020ee:	701a      	strb	r2, [r3, #0]
 80020f0:	4b1d      	ldr	r3, [pc, #116]	; (8002168 <HAL_InitTick+0x88>)
 80020f2:	781b      	ldrb	r3, [r3, #0]
 80020f4:	2b00      	cmp	r3, #0
 80020f6:	d02b      	beq.n	8002150 <HAL_InitTick+0x70>
 80020f8:	4b1c      	ldr	r3, [pc, #112]	; (800216c <HAL_InitTick+0x8c>)
 80020fa:	681c      	ldr	r4, [r3, #0]
 80020fc:	4b1a      	ldr	r3, [pc, #104]	; (8002168 <HAL_InitTick+0x88>)
 80020fe:	781b      	ldrb	r3, [r3, #0]
 8002100:	0019      	movs	r1, r3
 8002102:	23fa      	movs	r3, #250	; 0xfa
 8002104:	0098      	lsls	r0, r3, #2
 8002106:	f7fd fffd 	bl	8000104 <__udivsi3>
 800210a:	0003      	movs	r3, r0
 800210c:	0019      	movs	r1, r3
 800210e:	0020      	movs	r0, r4
 8002110:	f7fd fff8 	bl	8000104 <__udivsi3>
 8002114:	0003      	movs	r3, r0
 8002116:	0018      	movs	r0, r3
 8002118:	f000 f92f 	bl	800237a <HAL_SYSTICK_Config>
 800211c:	1e03      	subs	r3, r0, #0
 800211e:	d112      	bne.n	8002146 <HAL_InitTick+0x66>
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	2b03      	cmp	r3, #3
 8002124:	d80a      	bhi.n	800213c <HAL_InitTick+0x5c>
 8002126:	6879      	ldr	r1, [r7, #4]
 8002128:	2301      	movs	r3, #1
 800212a:	425b      	negs	r3, r3
 800212c:	2200      	movs	r2, #0
 800212e:	0018      	movs	r0, r3
 8002130:	f000 f8fe 	bl	8002330 <HAL_NVIC_SetPriority>
 8002134:	4b0e      	ldr	r3, [pc, #56]	; (8002170 <HAL_InitTick+0x90>)
 8002136:	687a      	ldr	r2, [r7, #4]
 8002138:	601a      	str	r2, [r3, #0]
 800213a:	e00d      	b.n	8002158 <HAL_InitTick+0x78>
 800213c:	230f      	movs	r3, #15
 800213e:	18fb      	adds	r3, r7, r3
 8002140:	2201      	movs	r2, #1
 8002142:	701a      	strb	r2, [r3, #0]
 8002144:	e008      	b.n	8002158 <HAL_InitTick+0x78>
 8002146:	230f      	movs	r3, #15
 8002148:	18fb      	adds	r3, r7, r3
 800214a:	2201      	movs	r2, #1
 800214c:	701a      	strb	r2, [r3, #0]
 800214e:	e003      	b.n	8002158 <HAL_InitTick+0x78>
 8002150:	230f      	movs	r3, #15
 8002152:	18fb      	adds	r3, r7, r3
 8002154:	2201      	movs	r2, #1
 8002156:	701a      	strb	r2, [r3, #0]
 8002158:	230f      	movs	r3, #15
 800215a:	18fb      	adds	r3, r7, r3
 800215c:	781b      	ldrb	r3, [r3, #0]
 800215e:	0018      	movs	r0, r3
 8002160:	46bd      	mov	sp, r7
 8002162:	b005      	add	sp, #20
 8002164:	bd90      	pop	{r4, r7, pc}
 8002166:	46c0      	nop			; (mov r8, r8)
 8002168:	20000004 	.word	0x20000004
 800216c:	20000008 	.word	0x20000008
 8002170:	20000000 	.word	0x20000000

08002174 <HAL_IncTick>:
 8002174:	b580      	push	{r7, lr}
 8002176:	af00      	add	r7, sp, #0
 8002178:	4b05      	ldr	r3, [pc, #20]	; (8002190 <HAL_IncTick+0x1c>)
 800217a:	781b      	ldrb	r3, [r3, #0]
 800217c:	001a      	movs	r2, r3
 800217e:	4b05      	ldr	r3, [pc, #20]	; (8002194 <HAL_IncTick+0x20>)
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	18d2      	adds	r2, r2, r3
 8002184:	4b03      	ldr	r3, [pc, #12]	; (8002194 <HAL_IncTick+0x20>)
 8002186:	601a      	str	r2, [r3, #0]
 8002188:	46c0      	nop			; (mov r8, r8)
 800218a:	46bd      	mov	sp, r7
 800218c:	bd80      	pop	{r7, pc}
 800218e:	46c0      	nop			; (mov r8, r8)
 8002190:	20000004 	.word	0x20000004
 8002194:	20000078 	.word	0x20000078

08002198 <HAL_GetTick>:
 8002198:	b580      	push	{r7, lr}
 800219a:	af00      	add	r7, sp, #0
 800219c:	4b02      	ldr	r3, [pc, #8]	; (80021a8 <HAL_GetTick+0x10>)
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	0018      	movs	r0, r3
 80021a2:	46bd      	mov	sp, r7
 80021a4:	bd80      	pop	{r7, pc}
 80021a6:	46c0      	nop			; (mov r8, r8)
 80021a8:	20000078 	.word	0x20000078

080021ac <HAL_SYSCFG_StrobeDBattpinsConfig>:
 80021ac:	b580      	push	{r7, lr}
 80021ae:	b082      	sub	sp, #8
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	6078      	str	r0, [r7, #4]
 80021b4:	4b06      	ldr	r3, [pc, #24]	; (80021d0 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	4a06      	ldr	r2, [pc, #24]	; (80021d4 <HAL_SYSCFG_StrobeDBattpinsConfig+0x28>)
 80021ba:	4013      	ands	r3, r2
 80021bc:	0019      	movs	r1, r3
 80021be:	4b04      	ldr	r3, [pc, #16]	; (80021d0 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 80021c0:	687a      	ldr	r2, [r7, #4]
 80021c2:	430a      	orrs	r2, r1
 80021c4:	601a      	str	r2, [r3, #0]
 80021c6:	46c0      	nop			; (mov r8, r8)
 80021c8:	46bd      	mov	sp, r7
 80021ca:	b002      	add	sp, #8
 80021cc:	bd80      	pop	{r7, pc}
 80021ce:	46c0      	nop			; (mov r8, r8)
 80021d0:	40010000 	.word	0x40010000
 80021d4:	fffff9ff 	.word	0xfffff9ff

080021d8 <__NVIC_EnableIRQ>:
 80021d8:	b580      	push	{r7, lr}
 80021da:	b082      	sub	sp, #8
 80021dc:	af00      	add	r7, sp, #0
 80021de:	0002      	movs	r2, r0
 80021e0:	1dfb      	adds	r3, r7, #7
 80021e2:	701a      	strb	r2, [r3, #0]
 80021e4:	1dfb      	adds	r3, r7, #7
 80021e6:	781b      	ldrb	r3, [r3, #0]
 80021e8:	2b7f      	cmp	r3, #127	; 0x7f
 80021ea:	d809      	bhi.n	8002200 <__NVIC_EnableIRQ+0x28>
 80021ec:	1dfb      	adds	r3, r7, #7
 80021ee:	781b      	ldrb	r3, [r3, #0]
 80021f0:	001a      	movs	r2, r3
 80021f2:	231f      	movs	r3, #31
 80021f4:	401a      	ands	r2, r3
 80021f6:	4b04      	ldr	r3, [pc, #16]	; (8002208 <__NVIC_EnableIRQ+0x30>)
 80021f8:	2101      	movs	r1, #1
 80021fa:	4091      	lsls	r1, r2
 80021fc:	000a      	movs	r2, r1
 80021fe:	601a      	str	r2, [r3, #0]
 8002200:	46c0      	nop			; (mov r8, r8)
 8002202:	46bd      	mov	sp, r7
 8002204:	b002      	add	sp, #8
 8002206:	bd80      	pop	{r7, pc}
 8002208:	e000e100 	.word	0xe000e100

0800220c <__NVIC_SetPriority>:
 800220c:	b590      	push	{r4, r7, lr}
 800220e:	b083      	sub	sp, #12
 8002210:	af00      	add	r7, sp, #0
 8002212:	0002      	movs	r2, r0
 8002214:	6039      	str	r1, [r7, #0]
 8002216:	1dfb      	adds	r3, r7, #7
 8002218:	701a      	strb	r2, [r3, #0]
 800221a:	1dfb      	adds	r3, r7, #7
 800221c:	781b      	ldrb	r3, [r3, #0]
 800221e:	2b7f      	cmp	r3, #127	; 0x7f
 8002220:	d828      	bhi.n	8002274 <__NVIC_SetPriority+0x68>
 8002222:	4a2f      	ldr	r2, [pc, #188]	; (80022e0 <__NVIC_SetPriority+0xd4>)
 8002224:	1dfb      	adds	r3, r7, #7
 8002226:	781b      	ldrb	r3, [r3, #0]
 8002228:	b25b      	sxtb	r3, r3
 800222a:	089b      	lsrs	r3, r3, #2
 800222c:	33c0      	adds	r3, #192	; 0xc0
 800222e:	009b      	lsls	r3, r3, #2
 8002230:	589b      	ldr	r3, [r3, r2]
 8002232:	1dfa      	adds	r2, r7, #7
 8002234:	7812      	ldrb	r2, [r2, #0]
 8002236:	0011      	movs	r1, r2
 8002238:	2203      	movs	r2, #3
 800223a:	400a      	ands	r2, r1
 800223c:	00d2      	lsls	r2, r2, #3
 800223e:	21ff      	movs	r1, #255	; 0xff
 8002240:	4091      	lsls	r1, r2
 8002242:	000a      	movs	r2, r1
 8002244:	43d2      	mvns	r2, r2
 8002246:	401a      	ands	r2, r3
 8002248:	0011      	movs	r1, r2
 800224a:	683b      	ldr	r3, [r7, #0]
 800224c:	019b      	lsls	r3, r3, #6
 800224e:	22ff      	movs	r2, #255	; 0xff
 8002250:	401a      	ands	r2, r3
 8002252:	1dfb      	adds	r3, r7, #7
 8002254:	781b      	ldrb	r3, [r3, #0]
 8002256:	0018      	movs	r0, r3
 8002258:	2303      	movs	r3, #3
 800225a:	4003      	ands	r3, r0
 800225c:	00db      	lsls	r3, r3, #3
 800225e:	409a      	lsls	r2, r3
 8002260:	481f      	ldr	r0, [pc, #124]	; (80022e0 <__NVIC_SetPriority+0xd4>)
 8002262:	1dfb      	adds	r3, r7, #7
 8002264:	781b      	ldrb	r3, [r3, #0]
 8002266:	b25b      	sxtb	r3, r3
 8002268:	089b      	lsrs	r3, r3, #2
 800226a:	430a      	orrs	r2, r1
 800226c:	33c0      	adds	r3, #192	; 0xc0
 800226e:	009b      	lsls	r3, r3, #2
 8002270:	501a      	str	r2, [r3, r0]
 8002272:	e031      	b.n	80022d8 <__NVIC_SetPriority+0xcc>
 8002274:	4a1b      	ldr	r2, [pc, #108]	; (80022e4 <__NVIC_SetPriority+0xd8>)
 8002276:	1dfb      	adds	r3, r7, #7
 8002278:	781b      	ldrb	r3, [r3, #0]
 800227a:	0019      	movs	r1, r3
 800227c:	230f      	movs	r3, #15
 800227e:	400b      	ands	r3, r1
 8002280:	3b08      	subs	r3, #8
 8002282:	089b      	lsrs	r3, r3, #2
 8002284:	3306      	adds	r3, #6
 8002286:	009b      	lsls	r3, r3, #2
 8002288:	18d3      	adds	r3, r2, r3
 800228a:	3304      	adds	r3, #4
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	1dfa      	adds	r2, r7, #7
 8002290:	7812      	ldrb	r2, [r2, #0]
 8002292:	0011      	movs	r1, r2
 8002294:	2203      	movs	r2, #3
 8002296:	400a      	ands	r2, r1
 8002298:	00d2      	lsls	r2, r2, #3
 800229a:	21ff      	movs	r1, #255	; 0xff
 800229c:	4091      	lsls	r1, r2
 800229e:	000a      	movs	r2, r1
 80022a0:	43d2      	mvns	r2, r2
 80022a2:	401a      	ands	r2, r3
 80022a4:	0011      	movs	r1, r2
 80022a6:	683b      	ldr	r3, [r7, #0]
 80022a8:	019b      	lsls	r3, r3, #6
 80022aa:	22ff      	movs	r2, #255	; 0xff
 80022ac:	401a      	ands	r2, r3
 80022ae:	1dfb      	adds	r3, r7, #7
 80022b0:	781b      	ldrb	r3, [r3, #0]
 80022b2:	0018      	movs	r0, r3
 80022b4:	2303      	movs	r3, #3
 80022b6:	4003      	ands	r3, r0
 80022b8:	00db      	lsls	r3, r3, #3
 80022ba:	409a      	lsls	r2, r3
 80022bc:	4809      	ldr	r0, [pc, #36]	; (80022e4 <__NVIC_SetPriority+0xd8>)
 80022be:	1dfb      	adds	r3, r7, #7
 80022c0:	781b      	ldrb	r3, [r3, #0]
 80022c2:	001c      	movs	r4, r3
 80022c4:	230f      	movs	r3, #15
 80022c6:	4023      	ands	r3, r4
 80022c8:	3b08      	subs	r3, #8
 80022ca:	089b      	lsrs	r3, r3, #2
 80022cc:	430a      	orrs	r2, r1
 80022ce:	3306      	adds	r3, #6
 80022d0:	009b      	lsls	r3, r3, #2
 80022d2:	18c3      	adds	r3, r0, r3
 80022d4:	3304      	adds	r3, #4
 80022d6:	601a      	str	r2, [r3, #0]
 80022d8:	46c0      	nop			; (mov r8, r8)
 80022da:	46bd      	mov	sp, r7
 80022dc:	b003      	add	sp, #12
 80022de:	bd90      	pop	{r4, r7, pc}
 80022e0:	e000e100 	.word	0xe000e100
 80022e4:	e000ed00 	.word	0xe000ed00

080022e8 <SysTick_Config>:
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b082      	sub	sp, #8
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	1e5a      	subs	r2, r3, #1
 80022f4:	2380      	movs	r3, #128	; 0x80
 80022f6:	045b      	lsls	r3, r3, #17
 80022f8:	429a      	cmp	r2, r3
 80022fa:	d301      	bcc.n	8002300 <SysTick_Config+0x18>
 80022fc:	2301      	movs	r3, #1
 80022fe:	e010      	b.n	8002322 <SysTick_Config+0x3a>
 8002300:	4b0a      	ldr	r3, [pc, #40]	; (800232c <SysTick_Config+0x44>)
 8002302:	687a      	ldr	r2, [r7, #4]
 8002304:	3a01      	subs	r2, #1
 8002306:	605a      	str	r2, [r3, #4]
 8002308:	2301      	movs	r3, #1
 800230a:	425b      	negs	r3, r3
 800230c:	2103      	movs	r1, #3
 800230e:	0018      	movs	r0, r3
 8002310:	f7ff ff7c 	bl	800220c <__NVIC_SetPriority>
 8002314:	4b05      	ldr	r3, [pc, #20]	; (800232c <SysTick_Config+0x44>)
 8002316:	2200      	movs	r2, #0
 8002318:	609a      	str	r2, [r3, #8]
 800231a:	4b04      	ldr	r3, [pc, #16]	; (800232c <SysTick_Config+0x44>)
 800231c:	2207      	movs	r2, #7
 800231e:	601a      	str	r2, [r3, #0]
 8002320:	2300      	movs	r3, #0
 8002322:	0018      	movs	r0, r3
 8002324:	46bd      	mov	sp, r7
 8002326:	b002      	add	sp, #8
 8002328:	bd80      	pop	{r7, pc}
 800232a:	46c0      	nop			; (mov r8, r8)
 800232c:	e000e010 	.word	0xe000e010

08002330 <HAL_NVIC_SetPriority>:
 8002330:	b580      	push	{r7, lr}
 8002332:	b084      	sub	sp, #16
 8002334:	af00      	add	r7, sp, #0
 8002336:	60b9      	str	r1, [r7, #8]
 8002338:	607a      	str	r2, [r7, #4]
 800233a:	210f      	movs	r1, #15
 800233c:	187b      	adds	r3, r7, r1
 800233e:	1c02      	adds	r2, r0, #0
 8002340:	701a      	strb	r2, [r3, #0]
 8002342:	68ba      	ldr	r2, [r7, #8]
 8002344:	187b      	adds	r3, r7, r1
 8002346:	781b      	ldrb	r3, [r3, #0]
 8002348:	b25b      	sxtb	r3, r3
 800234a:	0011      	movs	r1, r2
 800234c:	0018      	movs	r0, r3
 800234e:	f7ff ff5d 	bl	800220c <__NVIC_SetPriority>
 8002352:	46c0      	nop			; (mov r8, r8)
 8002354:	46bd      	mov	sp, r7
 8002356:	b004      	add	sp, #16
 8002358:	bd80      	pop	{r7, pc}

0800235a <HAL_NVIC_EnableIRQ>:
 800235a:	b580      	push	{r7, lr}
 800235c:	b082      	sub	sp, #8
 800235e:	af00      	add	r7, sp, #0
 8002360:	0002      	movs	r2, r0
 8002362:	1dfb      	adds	r3, r7, #7
 8002364:	701a      	strb	r2, [r3, #0]
 8002366:	1dfb      	adds	r3, r7, #7
 8002368:	781b      	ldrb	r3, [r3, #0]
 800236a:	b25b      	sxtb	r3, r3
 800236c:	0018      	movs	r0, r3
 800236e:	f7ff ff33 	bl	80021d8 <__NVIC_EnableIRQ>
 8002372:	46c0      	nop			; (mov r8, r8)
 8002374:	46bd      	mov	sp, r7
 8002376:	b002      	add	sp, #8
 8002378:	bd80      	pop	{r7, pc}

0800237a <HAL_SYSTICK_Config>:
 800237a:	b580      	push	{r7, lr}
 800237c:	b082      	sub	sp, #8
 800237e:	af00      	add	r7, sp, #0
 8002380:	6078      	str	r0, [r7, #4]
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	0018      	movs	r0, r3
 8002386:	f7ff ffaf 	bl	80022e8 <SysTick_Config>
 800238a:	0003      	movs	r3, r0
 800238c:	0018      	movs	r0, r3
 800238e:	46bd      	mov	sp, r7
 8002390:	b002      	add	sp, #8
 8002392:	bd80      	pop	{r7, pc}

08002394 <HAL_DMA_Init>:
 8002394:	b580      	push	{r7, lr}
 8002396:	b082      	sub	sp, #8
 8002398:	af00      	add	r7, sp, #0
 800239a:	6078      	str	r0, [r7, #4]
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d101      	bne.n	80023a6 <HAL_DMA_Init+0x12>
 80023a2:	2301      	movs	r3, #1
 80023a4:	e077      	b.n	8002496 <HAL_DMA_Init+0x102>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	4a3d      	ldr	r2, [pc, #244]	; (80024a0 <HAL_DMA_Init+0x10c>)
 80023ac:	4694      	mov	ip, r2
 80023ae:	4463      	add	r3, ip
 80023b0:	2114      	movs	r1, #20
 80023b2:	0018      	movs	r0, r3
 80023b4:	f7fd fea6 	bl	8000104 <__udivsi3>
 80023b8:	0003      	movs	r3, r0
 80023ba:	009a      	lsls	r2, r3, #2
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	641a      	str	r2, [r3, #64]	; 0x40
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	2225      	movs	r2, #37	; 0x25
 80023c4:	2102      	movs	r1, #2
 80023c6:	5499      	strb	r1, [r3, r2]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	681a      	ldr	r2, [r3, #0]
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	4934      	ldr	r1, [pc, #208]	; (80024a4 <HAL_DMA_Init+0x110>)
 80023d4:	400a      	ands	r2, r1
 80023d6:	601a      	str	r2, [r3, #0]
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	6819      	ldr	r1, [r3, #0]
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	689a      	ldr	r2, [r3, #8]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	68db      	ldr	r3, [r3, #12]
 80023e6:	431a      	orrs	r2, r3
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	691b      	ldr	r3, [r3, #16]
 80023ec:	431a      	orrs	r2, r3
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	695b      	ldr	r3, [r3, #20]
 80023f2:	431a      	orrs	r2, r3
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	699b      	ldr	r3, [r3, #24]
 80023f8:	431a      	orrs	r2, r3
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	69db      	ldr	r3, [r3, #28]
 80023fe:	431a      	orrs	r2, r3
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	6a1b      	ldr	r3, [r3, #32]
 8002404:	431a      	orrs	r2, r3
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	430a      	orrs	r2, r1
 800240c:	601a      	str	r2, [r3, #0]
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	0018      	movs	r0, r3
 8002412:	f000 f9cd 	bl	80027b0 <DMA_CalcDMAMUXChannelBaseAndMask>
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	689a      	ldr	r2, [r3, #8]
 800241a:	2380      	movs	r3, #128	; 0x80
 800241c:	01db      	lsls	r3, r3, #7
 800241e:	429a      	cmp	r2, r3
 8002420:	d102      	bne.n	8002428 <HAL_DMA_Init+0x94>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	2200      	movs	r2, #0
 8002426:	605a      	str	r2, [r3, #4]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	685a      	ldr	r2, [r3, #4]
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002430:	213f      	movs	r1, #63	; 0x3f
 8002432:	400a      	ands	r2, r1
 8002434:	601a      	str	r2, [r3, #0]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800243a:	687a      	ldr	r2, [r7, #4]
 800243c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800243e:	605a      	str	r2, [r3, #4]
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	685b      	ldr	r3, [r3, #4]
 8002444:	2b00      	cmp	r3, #0
 8002446:	d011      	beq.n	800246c <HAL_DMA_Init+0xd8>
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	685b      	ldr	r3, [r3, #4]
 800244c:	2b04      	cmp	r3, #4
 800244e:	d80d      	bhi.n	800246c <HAL_DMA_Init+0xd8>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	0018      	movs	r0, r3
 8002454:	f000 f9d8 	bl	8002808 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800245c:	2200      	movs	r2, #0
 800245e:	601a      	str	r2, [r3, #0]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002464:	687a      	ldr	r2, [r7, #4]
 8002466:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8002468:	605a      	str	r2, [r3, #4]
 800246a:	e008      	b.n	800247e <HAL_DMA_Init+0xea>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	2200      	movs	r2, #0
 8002470:	651a      	str	r2, [r3, #80]	; 0x50
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	2200      	movs	r2, #0
 8002476:	655a      	str	r2, [r3, #84]	; 0x54
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	2200      	movs	r2, #0
 800247c:	659a      	str	r2, [r3, #88]	; 0x58
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	2200      	movs	r2, #0
 8002482:	63da      	str	r2, [r3, #60]	; 0x3c
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	2225      	movs	r2, #37	; 0x25
 8002488:	2101      	movs	r1, #1
 800248a:	5499      	strb	r1, [r3, r2]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	2224      	movs	r2, #36	; 0x24
 8002490:	2100      	movs	r1, #0
 8002492:	5499      	strb	r1, [r3, r2]
 8002494:	2300      	movs	r3, #0
 8002496:	0018      	movs	r0, r3
 8002498:	46bd      	mov	sp, r7
 800249a:	b002      	add	sp, #8
 800249c:	bd80      	pop	{r7, pc}
 800249e:	46c0      	nop			; (mov r8, r8)
 80024a0:	bffdfff8 	.word	0xbffdfff8
 80024a4:	ffff800f 	.word	0xffff800f

080024a8 <HAL_DMA_Start_IT>:
 80024a8:	b580      	push	{r7, lr}
 80024aa:	b086      	sub	sp, #24
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	60f8      	str	r0, [r7, #12]
 80024b0:	60b9      	str	r1, [r7, #8]
 80024b2:	607a      	str	r2, [r7, #4]
 80024b4:	603b      	str	r3, [r7, #0]
 80024b6:	2317      	movs	r3, #23
 80024b8:	18fb      	adds	r3, r7, r3
 80024ba:	2200      	movs	r2, #0
 80024bc:	701a      	strb	r2, [r3, #0]
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	2224      	movs	r2, #36	; 0x24
 80024c2:	5c9b      	ldrb	r3, [r3, r2]
 80024c4:	2b01      	cmp	r3, #1
 80024c6:	d101      	bne.n	80024cc <HAL_DMA_Start_IT+0x24>
 80024c8:	2302      	movs	r3, #2
 80024ca:	e06f      	b.n	80025ac <HAL_DMA_Start_IT+0x104>
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	2224      	movs	r2, #36	; 0x24
 80024d0:	2101      	movs	r1, #1
 80024d2:	5499      	strb	r1, [r3, r2]
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	2225      	movs	r2, #37	; 0x25
 80024d8:	5c9b      	ldrb	r3, [r3, r2]
 80024da:	b2db      	uxtb	r3, r3
 80024dc:	2b01      	cmp	r3, #1
 80024de:	d157      	bne.n	8002590 <HAL_DMA_Start_IT+0xe8>
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	2225      	movs	r2, #37	; 0x25
 80024e4:	2102      	movs	r1, #2
 80024e6:	5499      	strb	r1, [r3, r2]
 80024e8:	68fb      	ldr	r3, [r7, #12]
 80024ea:	2200      	movs	r2, #0
 80024ec:	63da      	str	r2, [r3, #60]	; 0x3c
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	681a      	ldr	r2, [r3, #0]
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	2101      	movs	r1, #1
 80024fa:	438a      	bics	r2, r1
 80024fc:	601a      	str	r2, [r3, #0]
 80024fe:	683b      	ldr	r3, [r7, #0]
 8002500:	687a      	ldr	r2, [r7, #4]
 8002502:	68b9      	ldr	r1, [r7, #8]
 8002504:	68f8      	ldr	r0, [r7, #12]
 8002506:	f000 f913 	bl	8002730 <DMA_SetConfig>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800250e:	2b00      	cmp	r3, #0
 8002510:	d008      	beq.n	8002524 <HAL_DMA_Start_IT+0x7c>
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	210e      	movs	r1, #14
 800251e:	430a      	orrs	r2, r1
 8002520:	601a      	str	r2, [r3, #0]
 8002522:	e00f      	b.n	8002544 <HAL_DMA_Start_IT+0x9c>
 8002524:	68fb      	ldr	r3, [r7, #12]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	681a      	ldr	r2, [r3, #0]
 800252a:	68fb      	ldr	r3, [r7, #12]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	2104      	movs	r1, #4
 8002530:	438a      	bics	r2, r1
 8002532:	601a      	str	r2, [r3, #0]
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	681a      	ldr	r2, [r3, #0]
 800253a:	68fb      	ldr	r3, [r7, #12]
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	210a      	movs	r1, #10
 8002540:	430a      	orrs	r2, r1
 8002542:	601a      	str	r2, [r3, #0]
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002548:	681a      	ldr	r2, [r3, #0]
 800254a:	2380      	movs	r3, #128	; 0x80
 800254c:	025b      	lsls	r3, r3, #9
 800254e:	4013      	ands	r3, r2
 8002550:	d008      	beq.n	8002564 <HAL_DMA_Start_IT+0xbc>
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002556:	681a      	ldr	r2, [r3, #0]
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800255c:	2180      	movs	r1, #128	; 0x80
 800255e:	0049      	lsls	r1, r1, #1
 8002560:	430a      	orrs	r2, r1
 8002562:	601a      	str	r2, [r3, #0]
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002568:	2b00      	cmp	r3, #0
 800256a:	d008      	beq.n	800257e <HAL_DMA_Start_IT+0xd6>
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002570:	681a      	ldr	r2, [r3, #0]
 8002572:	68fb      	ldr	r3, [r7, #12]
 8002574:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002576:	2180      	movs	r1, #128	; 0x80
 8002578:	0049      	lsls	r1, r1, #1
 800257a:	430a      	orrs	r2, r1
 800257c:	601a      	str	r2, [r3, #0]
 800257e:	68fb      	ldr	r3, [r7, #12]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	681a      	ldr	r2, [r3, #0]
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	2101      	movs	r1, #1
 800258a:	430a      	orrs	r2, r1
 800258c:	601a      	str	r2, [r3, #0]
 800258e:	e00a      	b.n	80025a6 <HAL_DMA_Start_IT+0xfe>
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	2280      	movs	r2, #128	; 0x80
 8002594:	63da      	str	r2, [r3, #60]	; 0x3c
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	2224      	movs	r2, #36	; 0x24
 800259a:	2100      	movs	r1, #0
 800259c:	5499      	strb	r1, [r3, r2]
 800259e:	2317      	movs	r3, #23
 80025a0:	18fb      	adds	r3, r7, r3
 80025a2:	2201      	movs	r2, #1
 80025a4:	701a      	strb	r2, [r3, #0]
 80025a6:	2317      	movs	r3, #23
 80025a8:	18fb      	adds	r3, r7, r3
 80025aa:	781b      	ldrb	r3, [r3, #0]
 80025ac:	0018      	movs	r0, r3
 80025ae:	46bd      	mov	sp, r7
 80025b0:	b006      	add	sp, #24
 80025b2:	bd80      	pop	{r7, pc}

080025b4 <HAL_DMA_IRQHandler>:
 80025b4:	b580      	push	{r7, lr}
 80025b6:	b084      	sub	sp, #16
 80025b8:	af00      	add	r7, sp, #0
 80025ba:	6078      	str	r0, [r7, #4]
 80025bc:	4b55      	ldr	r3, [pc, #340]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	60fb      	str	r3, [r7, #12]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	60bb      	str	r3, [r7, #8]
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ce:	221c      	movs	r2, #28
 80025d0:	4013      	ands	r3, r2
 80025d2:	2204      	movs	r2, #4
 80025d4:	409a      	lsls	r2, r3
 80025d6:	0013      	movs	r3, r2
 80025d8:	68fa      	ldr	r2, [r7, #12]
 80025da:	4013      	ands	r3, r2
 80025dc:	d027      	beq.n	800262e <HAL_DMA_IRQHandler+0x7a>
 80025de:	68bb      	ldr	r3, [r7, #8]
 80025e0:	2204      	movs	r2, #4
 80025e2:	4013      	ands	r3, r2
 80025e4:	d023      	beq.n	800262e <HAL_DMA_IRQHandler+0x7a>
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	681b      	ldr	r3, [r3, #0]
 80025ec:	2220      	movs	r2, #32
 80025ee:	4013      	ands	r3, r2
 80025f0:	d107      	bne.n	8002602 <HAL_DMA_IRQHandler+0x4e>
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	681a      	ldr	r2, [r3, #0]
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	2104      	movs	r1, #4
 80025fe:	438a      	bics	r2, r1
 8002600:	601a      	str	r2, [r3, #0]
 8002602:	4b44      	ldr	r3, [pc, #272]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 8002604:	6859      	ldr	r1, [r3, #4]
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800260a:	221c      	movs	r2, #28
 800260c:	4013      	ands	r3, r2
 800260e:	2204      	movs	r2, #4
 8002610:	409a      	lsls	r2, r3
 8002612:	4b40      	ldr	r3, [pc, #256]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 8002614:	430a      	orrs	r2, r1
 8002616:	605a      	str	r2, [r3, #4]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800261c:	2b00      	cmp	r3, #0
 800261e:	d100      	bne.n	8002622 <HAL_DMA_IRQHandler+0x6e>
 8002620:	e073      	b.n	800270a <HAL_DMA_IRQHandler+0x156>
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002626:	687a      	ldr	r2, [r7, #4]
 8002628:	0010      	movs	r0, r2
 800262a:	4798      	blx	r3
 800262c:	e06d      	b.n	800270a <HAL_DMA_IRQHandler+0x156>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002632:	221c      	movs	r2, #28
 8002634:	4013      	ands	r3, r2
 8002636:	2202      	movs	r2, #2
 8002638:	409a      	lsls	r2, r3
 800263a:	0013      	movs	r3, r2
 800263c:	68fa      	ldr	r2, [r7, #12]
 800263e:	4013      	ands	r3, r2
 8002640:	d02e      	beq.n	80026a0 <HAL_DMA_IRQHandler+0xec>
 8002642:	68bb      	ldr	r3, [r7, #8]
 8002644:	2202      	movs	r2, #2
 8002646:	4013      	ands	r3, r2
 8002648:	d02a      	beq.n	80026a0 <HAL_DMA_IRQHandler+0xec>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	2220      	movs	r2, #32
 8002652:	4013      	ands	r3, r2
 8002654:	d10b      	bne.n	800266e <HAL_DMA_IRQHandler+0xba>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	681a      	ldr	r2, [r3, #0]
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	210a      	movs	r1, #10
 8002662:	438a      	bics	r2, r1
 8002664:	601a      	str	r2, [r3, #0]
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	2225      	movs	r2, #37	; 0x25
 800266a:	2101      	movs	r1, #1
 800266c:	5499      	strb	r1, [r3, r2]
 800266e:	4b29      	ldr	r3, [pc, #164]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 8002670:	6859      	ldr	r1, [r3, #4]
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002676:	221c      	movs	r2, #28
 8002678:	4013      	ands	r3, r2
 800267a:	2202      	movs	r2, #2
 800267c:	409a      	lsls	r2, r3
 800267e:	4b25      	ldr	r3, [pc, #148]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 8002680:	430a      	orrs	r2, r1
 8002682:	605a      	str	r2, [r3, #4]
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	2224      	movs	r2, #36	; 0x24
 8002688:	2100      	movs	r1, #0
 800268a:	5499      	strb	r1, [r3, r2]
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002690:	2b00      	cmp	r3, #0
 8002692:	d03a      	beq.n	800270a <HAL_DMA_IRQHandler+0x156>
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002698:	687a      	ldr	r2, [r7, #4]
 800269a:	0010      	movs	r0, r2
 800269c:	4798      	blx	r3
 800269e:	e034      	b.n	800270a <HAL_DMA_IRQHandler+0x156>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026a4:	221c      	movs	r2, #28
 80026a6:	4013      	ands	r3, r2
 80026a8:	2208      	movs	r2, #8
 80026aa:	409a      	lsls	r2, r3
 80026ac:	0013      	movs	r3, r2
 80026ae:	68fa      	ldr	r2, [r7, #12]
 80026b0:	4013      	ands	r3, r2
 80026b2:	d02b      	beq.n	800270c <HAL_DMA_IRQHandler+0x158>
 80026b4:	68bb      	ldr	r3, [r7, #8]
 80026b6:	2208      	movs	r2, #8
 80026b8:	4013      	ands	r3, r2
 80026ba:	d027      	beq.n	800270c <HAL_DMA_IRQHandler+0x158>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	681a      	ldr	r2, [r3, #0]
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	210e      	movs	r1, #14
 80026c8:	438a      	bics	r2, r1
 80026ca:	601a      	str	r2, [r3, #0]
 80026cc:	4b11      	ldr	r3, [pc, #68]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 80026ce:	6859      	ldr	r1, [r3, #4]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026d4:	221c      	movs	r2, #28
 80026d6:	4013      	ands	r3, r2
 80026d8:	2201      	movs	r2, #1
 80026da:	409a      	lsls	r2, r3
 80026dc:	4b0d      	ldr	r3, [pc, #52]	; (8002714 <HAL_DMA_IRQHandler+0x160>)
 80026de:	430a      	orrs	r2, r1
 80026e0:	605a      	str	r2, [r3, #4]
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	2201      	movs	r2, #1
 80026e6:	63da      	str	r2, [r3, #60]	; 0x3c
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	2225      	movs	r2, #37	; 0x25
 80026ec:	2101      	movs	r1, #1
 80026ee:	5499      	strb	r1, [r3, r2]
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	2224      	movs	r2, #36	; 0x24
 80026f4:	2100      	movs	r1, #0
 80026f6:	5499      	strb	r1, [r3, r2]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d005      	beq.n	800270c <HAL_DMA_IRQHandler+0x158>
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002704:	687a      	ldr	r2, [r7, #4]
 8002706:	0010      	movs	r0, r2
 8002708:	4798      	blx	r3
 800270a:	46c0      	nop			; (mov r8, r8)
 800270c:	46c0      	nop			; (mov r8, r8)
 800270e:	46bd      	mov	sp, r7
 8002710:	b004      	add	sp, #16
 8002712:	bd80      	pop	{r7, pc}
 8002714:	40020000 	.word	0x40020000

08002718 <HAL_DMA_GetState>:
 8002718:	b580      	push	{r7, lr}
 800271a:	b082      	sub	sp, #8
 800271c:	af00      	add	r7, sp, #0
 800271e:	6078      	str	r0, [r7, #4]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	2225      	movs	r2, #37	; 0x25
 8002724:	5c9b      	ldrb	r3, [r3, r2]
 8002726:	b2db      	uxtb	r3, r3
 8002728:	0018      	movs	r0, r3
 800272a:	46bd      	mov	sp, r7
 800272c:	b002      	add	sp, #8
 800272e:	bd80      	pop	{r7, pc}

08002730 <DMA_SetConfig>:
 8002730:	b580      	push	{r7, lr}
 8002732:	b084      	sub	sp, #16
 8002734:	af00      	add	r7, sp, #0
 8002736:	60f8      	str	r0, [r7, #12]
 8002738:	60b9      	str	r1, [r7, #8]
 800273a:	607a      	str	r2, [r7, #4]
 800273c:	603b      	str	r3, [r7, #0]
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002742:	68fa      	ldr	r2, [r7, #12]
 8002744:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8002746:	605a      	str	r2, [r3, #4]
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800274c:	2b00      	cmp	r3, #0
 800274e:	d004      	beq.n	800275a <DMA_SetConfig+0x2a>
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002754:	68fa      	ldr	r2, [r7, #12]
 8002756:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8002758:	605a      	str	r2, [r3, #4]
 800275a:	4b14      	ldr	r3, [pc, #80]	; (80027ac <DMA_SetConfig+0x7c>)
 800275c:	6859      	ldr	r1, [r3, #4]
 800275e:	68fb      	ldr	r3, [r7, #12]
 8002760:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002762:	221c      	movs	r2, #28
 8002764:	4013      	ands	r3, r2
 8002766:	2201      	movs	r2, #1
 8002768:	409a      	lsls	r2, r3
 800276a:	4b10      	ldr	r3, [pc, #64]	; (80027ac <DMA_SetConfig+0x7c>)
 800276c:	430a      	orrs	r2, r1
 800276e:	605a      	str	r2, [r3, #4]
 8002770:	68fb      	ldr	r3, [r7, #12]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	683a      	ldr	r2, [r7, #0]
 8002776:	605a      	str	r2, [r3, #4]
 8002778:	68fb      	ldr	r3, [r7, #12]
 800277a:	689b      	ldr	r3, [r3, #8]
 800277c:	2b10      	cmp	r3, #16
 800277e:	d108      	bne.n	8002792 <DMA_SetConfig+0x62>
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	687a      	ldr	r2, [r7, #4]
 8002786:	609a      	str	r2, [r3, #8]
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	68ba      	ldr	r2, [r7, #8]
 800278e:	60da      	str	r2, [r3, #12]
 8002790:	e007      	b.n	80027a2 <DMA_SetConfig+0x72>
 8002792:	68fb      	ldr	r3, [r7, #12]
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	68ba      	ldr	r2, [r7, #8]
 8002798:	609a      	str	r2, [r3, #8]
 800279a:	68fb      	ldr	r3, [r7, #12]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	687a      	ldr	r2, [r7, #4]
 80027a0:	60da      	str	r2, [r3, #12]
 80027a2:	46c0      	nop			; (mov r8, r8)
 80027a4:	46bd      	mov	sp, r7
 80027a6:	b004      	add	sp, #16
 80027a8:	bd80      	pop	{r7, pc}
 80027aa:	46c0      	nop			; (mov r8, r8)
 80027ac:	40020000 	.word	0x40020000

080027b0 <DMA_CalcDMAMUXChannelBaseAndMask>:
 80027b0:	b580      	push	{r7, lr}
 80027b2:	b084      	sub	sp, #16
 80027b4:	af00      	add	r7, sp, #0
 80027b6:	6078      	str	r0, [r7, #4]
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027bc:	089b      	lsrs	r3, r3, #2
 80027be:	4a10      	ldr	r2, [pc, #64]	; (8002800 <DMA_CalcDMAMUXChannelBaseAndMask+0x50>)
 80027c0:	4694      	mov	ip, r2
 80027c2:	4463      	add	r3, ip
 80027c4:	009b      	lsls	r3, r3, #2
 80027c6:	001a      	movs	r2, r3
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	645a      	str	r2, [r3, #68]	; 0x44
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	001a      	movs	r2, r3
 80027d2:	23ff      	movs	r3, #255	; 0xff
 80027d4:	4013      	ands	r3, r2
 80027d6:	3b08      	subs	r3, #8
 80027d8:	2114      	movs	r1, #20
 80027da:	0018      	movs	r0, r3
 80027dc:	f7fd fc92 	bl	8000104 <__udivsi3>
 80027e0:	0003      	movs	r3, r0
 80027e2:	60fb      	str	r3, [r7, #12]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	4a07      	ldr	r2, [pc, #28]	; (8002804 <DMA_CalcDMAMUXChannelBaseAndMask+0x54>)
 80027e8:	649a      	str	r2, [r3, #72]	; 0x48
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	221f      	movs	r2, #31
 80027ee:	4013      	ands	r3, r2
 80027f0:	2201      	movs	r2, #1
 80027f2:	409a      	lsls	r2, r3
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	64da      	str	r2, [r3, #76]	; 0x4c
 80027f8:	46c0      	nop			; (mov r8, r8)
 80027fa:	46bd      	mov	sp, r7
 80027fc:	b004      	add	sp, #16
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	10008200 	.word	0x10008200
 8002804:	40020880 	.word	0x40020880

08002808 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8002808:	b580      	push	{r7, lr}
 800280a:	b084      	sub	sp, #16
 800280c:	af00      	add	r7, sp, #0
 800280e:	6078      	str	r0, [r7, #4]
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	685b      	ldr	r3, [r3, #4]
 8002814:	223f      	movs	r2, #63	; 0x3f
 8002816:	4013      	ands	r3, r2
 8002818:	60fb      	str	r3, [r7, #12]
 800281a:	68fb      	ldr	r3, [r7, #12]
 800281c:	4a0a      	ldr	r2, [pc, #40]	; (8002848 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 800281e:	4694      	mov	ip, r2
 8002820:	4463      	add	r3, ip
 8002822:	009b      	lsls	r3, r3, #2
 8002824:	001a      	movs	r2, r3
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	651a      	str	r2, [r3, #80]	; 0x50
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	4a07      	ldr	r2, [pc, #28]	; (800284c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 800282e:	655a      	str	r2, [r3, #84]	; 0x54
 8002830:	68fb      	ldr	r3, [r7, #12]
 8002832:	3b01      	subs	r3, #1
 8002834:	2203      	movs	r2, #3
 8002836:	4013      	ands	r3, r2
 8002838:	2201      	movs	r2, #1
 800283a:	409a      	lsls	r2, r3
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	659a      	str	r2, [r3, #88]	; 0x58
 8002840:	46c0      	nop			; (mov r8, r8)
 8002842:	46bd      	mov	sp, r7
 8002844:	b004      	add	sp, #16
 8002846:	bd80      	pop	{r7, pc}
 8002848:	1000823f 	.word	0x1000823f
 800284c:	40020940 	.word	0x40020940

08002850 <HAL_GPIO_Init>:
 8002850:	b580      	push	{r7, lr}
 8002852:	b086      	sub	sp, #24
 8002854:	af00      	add	r7, sp, #0
 8002856:	6078      	str	r0, [r7, #4]
 8002858:	6039      	str	r1, [r7, #0]
 800285a:	2300      	movs	r3, #0
 800285c:	617b      	str	r3, [r7, #20]
 800285e:	e147      	b.n	8002af0 <HAL_GPIO_Init+0x2a0>
 8002860:	683b      	ldr	r3, [r7, #0]
 8002862:	681b      	ldr	r3, [r3, #0]
 8002864:	2101      	movs	r1, #1
 8002866:	697a      	ldr	r2, [r7, #20]
 8002868:	4091      	lsls	r1, r2
 800286a:	000a      	movs	r2, r1
 800286c:	4013      	ands	r3, r2
 800286e:	60fb      	str	r3, [r7, #12]
 8002870:	68fb      	ldr	r3, [r7, #12]
 8002872:	2b00      	cmp	r3, #0
 8002874:	d100      	bne.n	8002878 <HAL_GPIO_Init+0x28>
 8002876:	e138      	b.n	8002aea <HAL_GPIO_Init+0x29a>
 8002878:	683b      	ldr	r3, [r7, #0]
 800287a:	685b      	ldr	r3, [r3, #4]
 800287c:	2203      	movs	r2, #3
 800287e:	4013      	ands	r3, r2
 8002880:	2b01      	cmp	r3, #1
 8002882:	d005      	beq.n	8002890 <HAL_GPIO_Init+0x40>
 8002884:	683b      	ldr	r3, [r7, #0]
 8002886:	685b      	ldr	r3, [r3, #4]
 8002888:	2203      	movs	r2, #3
 800288a:	4013      	ands	r3, r2
 800288c:	2b02      	cmp	r3, #2
 800288e:	d130      	bne.n	80028f2 <HAL_GPIO_Init+0xa2>
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	689b      	ldr	r3, [r3, #8]
 8002894:	613b      	str	r3, [r7, #16]
 8002896:	697b      	ldr	r3, [r7, #20]
 8002898:	005b      	lsls	r3, r3, #1
 800289a:	2203      	movs	r2, #3
 800289c:	409a      	lsls	r2, r3
 800289e:	0013      	movs	r3, r2
 80028a0:	43da      	mvns	r2, r3
 80028a2:	693b      	ldr	r3, [r7, #16]
 80028a4:	4013      	ands	r3, r2
 80028a6:	613b      	str	r3, [r7, #16]
 80028a8:	683b      	ldr	r3, [r7, #0]
 80028aa:	68da      	ldr	r2, [r3, #12]
 80028ac:	697b      	ldr	r3, [r7, #20]
 80028ae:	005b      	lsls	r3, r3, #1
 80028b0:	409a      	lsls	r2, r3
 80028b2:	0013      	movs	r3, r2
 80028b4:	693a      	ldr	r2, [r7, #16]
 80028b6:	4313      	orrs	r3, r2
 80028b8:	613b      	str	r3, [r7, #16]
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	693a      	ldr	r2, [r7, #16]
 80028be:	609a      	str	r2, [r3, #8]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	685b      	ldr	r3, [r3, #4]
 80028c4:	613b      	str	r3, [r7, #16]
 80028c6:	2201      	movs	r2, #1
 80028c8:	697b      	ldr	r3, [r7, #20]
 80028ca:	409a      	lsls	r2, r3
 80028cc:	0013      	movs	r3, r2
 80028ce:	43da      	mvns	r2, r3
 80028d0:	693b      	ldr	r3, [r7, #16]
 80028d2:	4013      	ands	r3, r2
 80028d4:	613b      	str	r3, [r7, #16]
 80028d6:	683b      	ldr	r3, [r7, #0]
 80028d8:	685b      	ldr	r3, [r3, #4]
 80028da:	091b      	lsrs	r3, r3, #4
 80028dc:	2201      	movs	r2, #1
 80028de:	401a      	ands	r2, r3
 80028e0:	697b      	ldr	r3, [r7, #20]
 80028e2:	409a      	lsls	r2, r3
 80028e4:	0013      	movs	r3, r2
 80028e6:	693a      	ldr	r2, [r7, #16]
 80028e8:	4313      	orrs	r3, r2
 80028ea:	613b      	str	r3, [r7, #16]
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	693a      	ldr	r2, [r7, #16]
 80028f0:	605a      	str	r2, [r3, #4]
 80028f2:	683b      	ldr	r3, [r7, #0]
 80028f4:	685b      	ldr	r3, [r3, #4]
 80028f6:	2203      	movs	r2, #3
 80028f8:	4013      	ands	r3, r2
 80028fa:	2b03      	cmp	r3, #3
 80028fc:	d017      	beq.n	800292e <HAL_GPIO_Init+0xde>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	68db      	ldr	r3, [r3, #12]
 8002902:	613b      	str	r3, [r7, #16]
 8002904:	697b      	ldr	r3, [r7, #20]
 8002906:	005b      	lsls	r3, r3, #1
 8002908:	2203      	movs	r2, #3
 800290a:	409a      	lsls	r2, r3
 800290c:	0013      	movs	r3, r2
 800290e:	43da      	mvns	r2, r3
 8002910:	693b      	ldr	r3, [r7, #16]
 8002912:	4013      	ands	r3, r2
 8002914:	613b      	str	r3, [r7, #16]
 8002916:	683b      	ldr	r3, [r7, #0]
 8002918:	689a      	ldr	r2, [r3, #8]
 800291a:	697b      	ldr	r3, [r7, #20]
 800291c:	005b      	lsls	r3, r3, #1
 800291e:	409a      	lsls	r2, r3
 8002920:	0013      	movs	r3, r2
 8002922:	693a      	ldr	r2, [r7, #16]
 8002924:	4313      	orrs	r3, r2
 8002926:	613b      	str	r3, [r7, #16]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	693a      	ldr	r2, [r7, #16]
 800292c:	60da      	str	r2, [r3, #12]
 800292e:	683b      	ldr	r3, [r7, #0]
 8002930:	685b      	ldr	r3, [r3, #4]
 8002932:	2203      	movs	r2, #3
 8002934:	4013      	ands	r3, r2
 8002936:	2b02      	cmp	r3, #2
 8002938:	d123      	bne.n	8002982 <HAL_GPIO_Init+0x132>
 800293a:	697b      	ldr	r3, [r7, #20]
 800293c:	08da      	lsrs	r2, r3, #3
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	3208      	adds	r2, #8
 8002942:	0092      	lsls	r2, r2, #2
 8002944:	58d3      	ldr	r3, [r2, r3]
 8002946:	613b      	str	r3, [r7, #16]
 8002948:	697b      	ldr	r3, [r7, #20]
 800294a:	2207      	movs	r2, #7
 800294c:	4013      	ands	r3, r2
 800294e:	009b      	lsls	r3, r3, #2
 8002950:	220f      	movs	r2, #15
 8002952:	409a      	lsls	r2, r3
 8002954:	0013      	movs	r3, r2
 8002956:	43da      	mvns	r2, r3
 8002958:	693b      	ldr	r3, [r7, #16]
 800295a:	4013      	ands	r3, r2
 800295c:	613b      	str	r3, [r7, #16]
 800295e:	683b      	ldr	r3, [r7, #0]
 8002960:	691a      	ldr	r2, [r3, #16]
 8002962:	697b      	ldr	r3, [r7, #20]
 8002964:	2107      	movs	r1, #7
 8002966:	400b      	ands	r3, r1
 8002968:	009b      	lsls	r3, r3, #2
 800296a:	409a      	lsls	r2, r3
 800296c:	0013      	movs	r3, r2
 800296e:	693a      	ldr	r2, [r7, #16]
 8002970:	4313      	orrs	r3, r2
 8002972:	613b      	str	r3, [r7, #16]
 8002974:	697b      	ldr	r3, [r7, #20]
 8002976:	08da      	lsrs	r2, r3, #3
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	3208      	adds	r2, #8
 800297c:	0092      	lsls	r2, r2, #2
 800297e:	6939      	ldr	r1, [r7, #16]
 8002980:	50d1      	str	r1, [r2, r3]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	613b      	str	r3, [r7, #16]
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	005b      	lsls	r3, r3, #1
 800298c:	2203      	movs	r2, #3
 800298e:	409a      	lsls	r2, r3
 8002990:	0013      	movs	r3, r2
 8002992:	43da      	mvns	r2, r3
 8002994:	693b      	ldr	r3, [r7, #16]
 8002996:	4013      	ands	r3, r2
 8002998:	613b      	str	r3, [r7, #16]
 800299a:	683b      	ldr	r3, [r7, #0]
 800299c:	685b      	ldr	r3, [r3, #4]
 800299e:	2203      	movs	r2, #3
 80029a0:	401a      	ands	r2, r3
 80029a2:	697b      	ldr	r3, [r7, #20]
 80029a4:	005b      	lsls	r3, r3, #1
 80029a6:	409a      	lsls	r2, r3
 80029a8:	0013      	movs	r3, r2
 80029aa:	693a      	ldr	r2, [r7, #16]
 80029ac:	4313      	orrs	r3, r2
 80029ae:	613b      	str	r3, [r7, #16]
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	693a      	ldr	r2, [r7, #16]
 80029b4:	601a      	str	r2, [r3, #0]
 80029b6:	683b      	ldr	r3, [r7, #0]
 80029b8:	685a      	ldr	r2, [r3, #4]
 80029ba:	23c0      	movs	r3, #192	; 0xc0
 80029bc:	029b      	lsls	r3, r3, #10
 80029be:	4013      	ands	r3, r2
 80029c0:	d100      	bne.n	80029c4 <HAL_GPIO_Init+0x174>
 80029c2:	e092      	b.n	8002aea <HAL_GPIO_Init+0x29a>
 80029c4:	4a50      	ldr	r2, [pc, #320]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 80029c6:	697b      	ldr	r3, [r7, #20]
 80029c8:	089b      	lsrs	r3, r3, #2
 80029ca:	3318      	adds	r3, #24
 80029cc:	009b      	lsls	r3, r3, #2
 80029ce:	589b      	ldr	r3, [r3, r2]
 80029d0:	613b      	str	r3, [r7, #16]
 80029d2:	697b      	ldr	r3, [r7, #20]
 80029d4:	2203      	movs	r2, #3
 80029d6:	4013      	ands	r3, r2
 80029d8:	00db      	lsls	r3, r3, #3
 80029da:	220f      	movs	r2, #15
 80029dc:	409a      	lsls	r2, r3
 80029de:	0013      	movs	r3, r2
 80029e0:	43da      	mvns	r2, r3
 80029e2:	693b      	ldr	r3, [r7, #16]
 80029e4:	4013      	ands	r3, r2
 80029e6:	613b      	str	r3, [r7, #16]
 80029e8:	687a      	ldr	r2, [r7, #4]
 80029ea:	23a0      	movs	r3, #160	; 0xa0
 80029ec:	05db      	lsls	r3, r3, #23
 80029ee:	429a      	cmp	r2, r3
 80029f0:	d013      	beq.n	8002a1a <HAL_GPIO_Init+0x1ca>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	4a45      	ldr	r2, [pc, #276]	; (8002b0c <HAL_GPIO_Init+0x2bc>)
 80029f6:	4293      	cmp	r3, r2
 80029f8:	d00d      	beq.n	8002a16 <HAL_GPIO_Init+0x1c6>
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	4a44      	ldr	r2, [pc, #272]	; (8002b10 <HAL_GPIO_Init+0x2c0>)
 80029fe:	4293      	cmp	r3, r2
 8002a00:	d007      	beq.n	8002a12 <HAL_GPIO_Init+0x1c2>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	4a43      	ldr	r2, [pc, #268]	; (8002b14 <HAL_GPIO_Init+0x2c4>)
 8002a06:	4293      	cmp	r3, r2
 8002a08:	d101      	bne.n	8002a0e <HAL_GPIO_Init+0x1be>
 8002a0a:	2303      	movs	r3, #3
 8002a0c:	e006      	b.n	8002a1c <HAL_GPIO_Init+0x1cc>
 8002a0e:	2305      	movs	r3, #5
 8002a10:	e004      	b.n	8002a1c <HAL_GPIO_Init+0x1cc>
 8002a12:	2302      	movs	r3, #2
 8002a14:	e002      	b.n	8002a1c <HAL_GPIO_Init+0x1cc>
 8002a16:	2301      	movs	r3, #1
 8002a18:	e000      	b.n	8002a1c <HAL_GPIO_Init+0x1cc>
 8002a1a:	2300      	movs	r3, #0
 8002a1c:	697a      	ldr	r2, [r7, #20]
 8002a1e:	2103      	movs	r1, #3
 8002a20:	400a      	ands	r2, r1
 8002a22:	00d2      	lsls	r2, r2, #3
 8002a24:	4093      	lsls	r3, r2
 8002a26:	693a      	ldr	r2, [r7, #16]
 8002a28:	4313      	orrs	r3, r2
 8002a2a:	613b      	str	r3, [r7, #16]
 8002a2c:	4936      	ldr	r1, [pc, #216]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a2e:	697b      	ldr	r3, [r7, #20]
 8002a30:	089b      	lsrs	r3, r3, #2
 8002a32:	3318      	adds	r3, #24
 8002a34:	009b      	lsls	r3, r3, #2
 8002a36:	693a      	ldr	r2, [r7, #16]
 8002a38:	505a      	str	r2, [r3, r1]
 8002a3a:	4b33      	ldr	r3, [pc, #204]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	613b      	str	r3, [r7, #16]
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	43da      	mvns	r2, r3
 8002a44:	693b      	ldr	r3, [r7, #16]
 8002a46:	4013      	ands	r3, r2
 8002a48:	613b      	str	r3, [r7, #16]
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	685a      	ldr	r2, [r3, #4]
 8002a4e:	2380      	movs	r3, #128	; 0x80
 8002a50:	035b      	lsls	r3, r3, #13
 8002a52:	4013      	ands	r3, r2
 8002a54:	d003      	beq.n	8002a5e <HAL_GPIO_Init+0x20e>
 8002a56:	693a      	ldr	r2, [r7, #16]
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	4313      	orrs	r3, r2
 8002a5c:	613b      	str	r3, [r7, #16]
 8002a5e:	4b2a      	ldr	r3, [pc, #168]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a60:	693a      	ldr	r2, [r7, #16]
 8002a62:	601a      	str	r2, [r3, #0]
 8002a64:	4b28      	ldr	r3, [pc, #160]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a66:	685b      	ldr	r3, [r3, #4]
 8002a68:	613b      	str	r3, [r7, #16]
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	43da      	mvns	r2, r3
 8002a6e:	693b      	ldr	r3, [r7, #16]
 8002a70:	4013      	ands	r3, r2
 8002a72:	613b      	str	r3, [r7, #16]
 8002a74:	683b      	ldr	r3, [r7, #0]
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	2380      	movs	r3, #128	; 0x80
 8002a7a:	039b      	lsls	r3, r3, #14
 8002a7c:	4013      	ands	r3, r2
 8002a7e:	d003      	beq.n	8002a88 <HAL_GPIO_Init+0x238>
 8002a80:	693a      	ldr	r2, [r7, #16]
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	4313      	orrs	r3, r2
 8002a86:	613b      	str	r3, [r7, #16]
 8002a88:	4b1f      	ldr	r3, [pc, #124]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a8a:	693a      	ldr	r2, [r7, #16]
 8002a8c:	605a      	str	r2, [r3, #4]
 8002a8e:	4a1e      	ldr	r2, [pc, #120]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002a90:	2384      	movs	r3, #132	; 0x84
 8002a92:	58d3      	ldr	r3, [r2, r3]
 8002a94:	613b      	str	r3, [r7, #16]
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	43da      	mvns	r2, r3
 8002a9a:	693b      	ldr	r3, [r7, #16]
 8002a9c:	4013      	ands	r3, r2
 8002a9e:	613b      	str	r3, [r7, #16]
 8002aa0:	683b      	ldr	r3, [r7, #0]
 8002aa2:	685a      	ldr	r2, [r3, #4]
 8002aa4:	2380      	movs	r3, #128	; 0x80
 8002aa6:	029b      	lsls	r3, r3, #10
 8002aa8:	4013      	ands	r3, r2
 8002aaa:	d003      	beq.n	8002ab4 <HAL_GPIO_Init+0x264>
 8002aac:	693a      	ldr	r2, [r7, #16]
 8002aae:	68fb      	ldr	r3, [r7, #12]
 8002ab0:	4313      	orrs	r3, r2
 8002ab2:	613b      	str	r3, [r7, #16]
 8002ab4:	4914      	ldr	r1, [pc, #80]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002ab6:	2284      	movs	r2, #132	; 0x84
 8002ab8:	693b      	ldr	r3, [r7, #16]
 8002aba:	508b      	str	r3, [r1, r2]
 8002abc:	4a12      	ldr	r2, [pc, #72]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002abe:	2380      	movs	r3, #128	; 0x80
 8002ac0:	58d3      	ldr	r3, [r2, r3]
 8002ac2:	613b      	str	r3, [r7, #16]
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	43da      	mvns	r2, r3
 8002ac8:	693b      	ldr	r3, [r7, #16]
 8002aca:	4013      	ands	r3, r2
 8002acc:	613b      	str	r3, [r7, #16]
 8002ace:	683b      	ldr	r3, [r7, #0]
 8002ad0:	685a      	ldr	r2, [r3, #4]
 8002ad2:	2380      	movs	r3, #128	; 0x80
 8002ad4:	025b      	lsls	r3, r3, #9
 8002ad6:	4013      	ands	r3, r2
 8002ad8:	d003      	beq.n	8002ae2 <HAL_GPIO_Init+0x292>
 8002ada:	693a      	ldr	r2, [r7, #16]
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	4313      	orrs	r3, r2
 8002ae0:	613b      	str	r3, [r7, #16]
 8002ae2:	4909      	ldr	r1, [pc, #36]	; (8002b08 <HAL_GPIO_Init+0x2b8>)
 8002ae4:	2280      	movs	r2, #128	; 0x80
 8002ae6:	693b      	ldr	r3, [r7, #16]
 8002ae8:	508b      	str	r3, [r1, r2]
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	3301      	adds	r3, #1
 8002aee:	617b      	str	r3, [r7, #20]
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	681a      	ldr	r2, [r3, #0]
 8002af4:	697b      	ldr	r3, [r7, #20]
 8002af6:	40da      	lsrs	r2, r3
 8002af8:	1e13      	subs	r3, r2, #0
 8002afa:	d000      	beq.n	8002afe <HAL_GPIO_Init+0x2ae>
 8002afc:	e6b0      	b.n	8002860 <HAL_GPIO_Init+0x10>
 8002afe:	46c0      	nop			; (mov r8, r8)
 8002b00:	46c0      	nop			; (mov r8, r8)
 8002b02:	46bd      	mov	sp, r7
 8002b04:	b006      	add	sp, #24
 8002b06:	bd80      	pop	{r7, pc}
 8002b08:	40021800 	.word	0x40021800
 8002b0c:	50000400 	.word	0x50000400
 8002b10:	50000800 	.word	0x50000800
 8002b14:	50000c00 	.word	0x50000c00

08002b18 <HAL_GPIO_ReadPin>:
 8002b18:	b580      	push	{r7, lr}
 8002b1a:	b084      	sub	sp, #16
 8002b1c:	af00      	add	r7, sp, #0
 8002b1e:	6078      	str	r0, [r7, #4]
 8002b20:	000a      	movs	r2, r1
 8002b22:	1cbb      	adds	r3, r7, #2
 8002b24:	801a      	strh	r2, [r3, #0]
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	691b      	ldr	r3, [r3, #16]
 8002b2a:	1cba      	adds	r2, r7, #2
 8002b2c:	8812      	ldrh	r2, [r2, #0]
 8002b2e:	4013      	ands	r3, r2
 8002b30:	d004      	beq.n	8002b3c <HAL_GPIO_ReadPin+0x24>
 8002b32:	230f      	movs	r3, #15
 8002b34:	18fb      	adds	r3, r7, r3
 8002b36:	2201      	movs	r2, #1
 8002b38:	701a      	strb	r2, [r3, #0]
 8002b3a:	e003      	b.n	8002b44 <HAL_GPIO_ReadPin+0x2c>
 8002b3c:	230f      	movs	r3, #15
 8002b3e:	18fb      	adds	r3, r7, r3
 8002b40:	2200      	movs	r2, #0
 8002b42:	701a      	strb	r2, [r3, #0]
 8002b44:	230f      	movs	r3, #15
 8002b46:	18fb      	adds	r3, r7, r3
 8002b48:	781b      	ldrb	r3, [r3, #0]
 8002b4a:	0018      	movs	r0, r3
 8002b4c:	46bd      	mov	sp, r7
 8002b4e:	b004      	add	sp, #16
 8002b50:	bd80      	pop	{r7, pc}

08002b52 <HAL_GPIO_WritePin>:
 8002b52:	b580      	push	{r7, lr}
 8002b54:	b082      	sub	sp, #8
 8002b56:	af00      	add	r7, sp, #0
 8002b58:	6078      	str	r0, [r7, #4]
 8002b5a:	0008      	movs	r0, r1
 8002b5c:	0011      	movs	r1, r2
 8002b5e:	1cbb      	adds	r3, r7, #2
 8002b60:	1c02      	adds	r2, r0, #0
 8002b62:	801a      	strh	r2, [r3, #0]
 8002b64:	1c7b      	adds	r3, r7, #1
 8002b66:	1c0a      	adds	r2, r1, #0
 8002b68:	701a      	strb	r2, [r3, #0]
 8002b6a:	1c7b      	adds	r3, r7, #1
 8002b6c:	781b      	ldrb	r3, [r3, #0]
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d004      	beq.n	8002b7c <HAL_GPIO_WritePin+0x2a>
 8002b72:	1cbb      	adds	r3, r7, #2
 8002b74:	881a      	ldrh	r2, [r3, #0]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	619a      	str	r2, [r3, #24]
 8002b7a:	e003      	b.n	8002b84 <HAL_GPIO_WritePin+0x32>
 8002b7c:	1cbb      	adds	r3, r7, #2
 8002b7e:	881a      	ldrh	r2, [r3, #0]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	629a      	str	r2, [r3, #40]	; 0x28
 8002b84:	46c0      	nop			; (mov r8, r8)
 8002b86:	46bd      	mov	sp, r7
 8002b88:	b002      	add	sp, #8
 8002b8a:	bd80      	pop	{r7, pc}

08002b8c <HAL_GPIO_EXTI_IRQHandler>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b082      	sub	sp, #8
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	0002      	movs	r2, r0
 8002b94:	1dbb      	adds	r3, r7, #6
 8002b96:	801a      	strh	r2, [r3, #0]
 8002b98:	4b10      	ldr	r3, [pc, #64]	; (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8002b9a:	68db      	ldr	r3, [r3, #12]
 8002b9c:	1dba      	adds	r2, r7, #6
 8002b9e:	8812      	ldrh	r2, [r2, #0]
 8002ba0:	4013      	ands	r3, r2
 8002ba2:	d008      	beq.n	8002bb6 <HAL_GPIO_EXTI_IRQHandler+0x2a>
 8002ba4:	4b0d      	ldr	r3, [pc, #52]	; (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8002ba6:	1dba      	adds	r2, r7, #6
 8002ba8:	8812      	ldrh	r2, [r2, #0]
 8002baa:	60da      	str	r2, [r3, #12]
 8002bac:	1dbb      	adds	r3, r7, #6
 8002bae:	881b      	ldrh	r3, [r3, #0]
 8002bb0:	0018      	movs	r0, r3
 8002bb2:	f001 fbfd 	bl	80043b0 <HAL_GPIO_EXTI_Rising_Callback>
 8002bb6:	4b09      	ldr	r3, [pc, #36]	; (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8002bb8:	691b      	ldr	r3, [r3, #16]
 8002bba:	1dba      	adds	r2, r7, #6
 8002bbc:	8812      	ldrh	r2, [r2, #0]
 8002bbe:	4013      	ands	r3, r2
 8002bc0:	d008      	beq.n	8002bd4 <HAL_GPIO_EXTI_IRQHandler+0x48>
 8002bc2:	4b06      	ldr	r3, [pc, #24]	; (8002bdc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8002bc4:	1dba      	adds	r2, r7, #6
 8002bc6:	8812      	ldrh	r2, [r2, #0]
 8002bc8:	611a      	str	r2, [r3, #16]
 8002bca:	1dbb      	adds	r3, r7, #6
 8002bcc:	881b      	ldrh	r3, [r3, #0]
 8002bce:	0018      	movs	r0, r3
 8002bd0:	f001 fc02 	bl	80043d8 <HAL_GPIO_EXTI_Falling_Callback>
 8002bd4:	46c0      	nop			; (mov r8, r8)
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	b002      	add	sp, #8
 8002bda:	bd80      	pop	{r7, pc}
 8002bdc:	40021800 	.word	0x40021800

08002be0 <HAL_PWREx_ControlVoltageScaling>:
 8002be0:	b580      	push	{r7, lr}
 8002be2:	b084      	sub	sp, #16
 8002be4:	af00      	add	r7, sp, #0
 8002be6:	6078      	str	r0, [r7, #4]
 8002be8:	4b19      	ldr	r3, [pc, #100]	; (8002c50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	4a19      	ldr	r2, [pc, #100]	; (8002c54 <HAL_PWREx_ControlVoltageScaling+0x74>)
 8002bee:	4013      	ands	r3, r2
 8002bf0:	0019      	movs	r1, r3
 8002bf2:	4b17      	ldr	r3, [pc, #92]	; (8002c50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002bf4:	687a      	ldr	r2, [r7, #4]
 8002bf6:	430a      	orrs	r2, r1
 8002bf8:	601a      	str	r2, [r3, #0]
 8002bfa:	687a      	ldr	r2, [r7, #4]
 8002bfc:	2380      	movs	r3, #128	; 0x80
 8002bfe:	009b      	lsls	r3, r3, #2
 8002c00:	429a      	cmp	r2, r3
 8002c02:	d11f      	bne.n	8002c44 <HAL_PWREx_ControlVoltageScaling+0x64>
 8002c04:	4b14      	ldr	r3, [pc, #80]	; (8002c58 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8002c06:	681a      	ldr	r2, [r3, #0]
 8002c08:	0013      	movs	r3, r2
 8002c0a:	005b      	lsls	r3, r3, #1
 8002c0c:	189b      	adds	r3, r3, r2
 8002c0e:	005b      	lsls	r3, r3, #1
 8002c10:	4912      	ldr	r1, [pc, #72]	; (8002c5c <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8002c12:	0018      	movs	r0, r3
 8002c14:	f7fd fa76 	bl	8000104 <__udivsi3>
 8002c18:	0003      	movs	r3, r0
 8002c1a:	3301      	adds	r3, #1
 8002c1c:	60fb      	str	r3, [r7, #12]
 8002c1e:	e008      	b.n	8002c32 <HAL_PWREx_ControlVoltageScaling+0x52>
 8002c20:	68fb      	ldr	r3, [r7, #12]
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d003      	beq.n	8002c2e <HAL_PWREx_ControlVoltageScaling+0x4e>
 8002c26:	68fb      	ldr	r3, [r7, #12]
 8002c28:	3b01      	subs	r3, #1
 8002c2a:	60fb      	str	r3, [r7, #12]
 8002c2c:	e001      	b.n	8002c32 <HAL_PWREx_ControlVoltageScaling+0x52>
 8002c2e:	2303      	movs	r3, #3
 8002c30:	e009      	b.n	8002c46 <HAL_PWREx_ControlVoltageScaling+0x66>
 8002c32:	4b07      	ldr	r3, [pc, #28]	; (8002c50 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002c34:	695a      	ldr	r2, [r3, #20]
 8002c36:	2380      	movs	r3, #128	; 0x80
 8002c38:	00db      	lsls	r3, r3, #3
 8002c3a:	401a      	ands	r2, r3
 8002c3c:	2380      	movs	r3, #128	; 0x80
 8002c3e:	00db      	lsls	r3, r3, #3
 8002c40:	429a      	cmp	r2, r3
 8002c42:	d0ed      	beq.n	8002c20 <HAL_PWREx_ControlVoltageScaling+0x40>
 8002c44:	2300      	movs	r3, #0
 8002c46:	0018      	movs	r0, r3
 8002c48:	46bd      	mov	sp, r7
 8002c4a:	b004      	add	sp, #16
 8002c4c:	bd80      	pop	{r7, pc}
 8002c4e:	46c0      	nop			; (mov r8, r8)
 8002c50:	40007000 	.word	0x40007000
 8002c54:	fffff9ff 	.word	0xfffff9ff
 8002c58:	20000008 	.word	0x20000008
 8002c5c:	000f4240 	.word	0x000f4240

08002c60 <HAL_RCC_OscConfig>:
 8002c60:	b580      	push	{r7, lr}
 8002c62:	b088      	sub	sp, #32
 8002c64:	af00      	add	r7, sp, #0
 8002c66:	6078      	str	r0, [r7, #4]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d101      	bne.n	8002c72 <HAL_RCC_OscConfig+0x12>
 8002c6e:	2301      	movs	r3, #1
 8002c70:	e2fe      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	2201      	movs	r2, #1
 8002c78:	4013      	ands	r3, r2
 8002c7a:	d100      	bne.n	8002c7e <HAL_RCC_OscConfig+0x1e>
 8002c7c:	e07c      	b.n	8002d78 <HAL_RCC_OscConfig+0x118>
 8002c7e:	4bc3      	ldr	r3, [pc, #780]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002c80:	689b      	ldr	r3, [r3, #8]
 8002c82:	2238      	movs	r2, #56	; 0x38
 8002c84:	4013      	ands	r3, r2
 8002c86:	61bb      	str	r3, [r7, #24]
 8002c88:	4bc0      	ldr	r3, [pc, #768]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002c8a:	68db      	ldr	r3, [r3, #12]
 8002c8c:	2203      	movs	r2, #3
 8002c8e:	4013      	ands	r3, r2
 8002c90:	617b      	str	r3, [r7, #20]
 8002c92:	69bb      	ldr	r3, [r7, #24]
 8002c94:	2b10      	cmp	r3, #16
 8002c96:	d102      	bne.n	8002c9e <HAL_RCC_OscConfig+0x3e>
 8002c98:	697b      	ldr	r3, [r7, #20]
 8002c9a:	2b03      	cmp	r3, #3
 8002c9c:	d002      	beq.n	8002ca4 <HAL_RCC_OscConfig+0x44>
 8002c9e:	69bb      	ldr	r3, [r7, #24]
 8002ca0:	2b08      	cmp	r3, #8
 8002ca2:	d10b      	bne.n	8002cbc <HAL_RCC_OscConfig+0x5c>
 8002ca4:	4bb9      	ldr	r3, [pc, #740]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002ca6:	681a      	ldr	r2, [r3, #0]
 8002ca8:	2380      	movs	r3, #128	; 0x80
 8002caa:	029b      	lsls	r3, r3, #10
 8002cac:	4013      	ands	r3, r2
 8002cae:	d062      	beq.n	8002d76 <HAL_RCC_OscConfig+0x116>
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	685b      	ldr	r3, [r3, #4]
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d15e      	bne.n	8002d76 <HAL_RCC_OscConfig+0x116>
 8002cb8:	2301      	movs	r3, #1
 8002cba:	e2d9      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	685a      	ldr	r2, [r3, #4]
 8002cc0:	2380      	movs	r3, #128	; 0x80
 8002cc2:	025b      	lsls	r3, r3, #9
 8002cc4:	429a      	cmp	r2, r3
 8002cc6:	d107      	bne.n	8002cd8 <HAL_RCC_OscConfig+0x78>
 8002cc8:	4bb0      	ldr	r3, [pc, #704]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002cca:	681a      	ldr	r2, [r3, #0]
 8002ccc:	4baf      	ldr	r3, [pc, #700]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002cce:	2180      	movs	r1, #128	; 0x80
 8002cd0:	0249      	lsls	r1, r1, #9
 8002cd2:	430a      	orrs	r2, r1
 8002cd4:	601a      	str	r2, [r3, #0]
 8002cd6:	e020      	b.n	8002d1a <HAL_RCC_OscConfig+0xba>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	685a      	ldr	r2, [r3, #4]
 8002cdc:	23a0      	movs	r3, #160	; 0xa0
 8002cde:	02db      	lsls	r3, r3, #11
 8002ce0:	429a      	cmp	r2, r3
 8002ce2:	d10e      	bne.n	8002d02 <HAL_RCC_OscConfig+0xa2>
 8002ce4:	4ba9      	ldr	r3, [pc, #676]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002ce6:	681a      	ldr	r2, [r3, #0]
 8002ce8:	4ba8      	ldr	r3, [pc, #672]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002cea:	2180      	movs	r1, #128	; 0x80
 8002cec:	02c9      	lsls	r1, r1, #11
 8002cee:	430a      	orrs	r2, r1
 8002cf0:	601a      	str	r2, [r3, #0]
 8002cf2:	4ba6      	ldr	r3, [pc, #664]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002cf4:	681a      	ldr	r2, [r3, #0]
 8002cf6:	4ba5      	ldr	r3, [pc, #660]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002cf8:	2180      	movs	r1, #128	; 0x80
 8002cfa:	0249      	lsls	r1, r1, #9
 8002cfc:	430a      	orrs	r2, r1
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	e00b      	b.n	8002d1a <HAL_RCC_OscConfig+0xba>
 8002d02:	4ba2      	ldr	r3, [pc, #648]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d04:	681a      	ldr	r2, [r3, #0]
 8002d06:	4ba1      	ldr	r3, [pc, #644]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d08:	49a1      	ldr	r1, [pc, #644]	; (8002f90 <HAL_RCC_OscConfig+0x330>)
 8002d0a:	400a      	ands	r2, r1
 8002d0c:	601a      	str	r2, [r3, #0]
 8002d0e:	4b9f      	ldr	r3, [pc, #636]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d10:	681a      	ldr	r2, [r3, #0]
 8002d12:	4b9e      	ldr	r3, [pc, #632]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d14:	499f      	ldr	r1, [pc, #636]	; (8002f94 <HAL_RCC_OscConfig+0x334>)
 8002d16:	400a      	ands	r2, r1
 8002d18:	601a      	str	r2, [r3, #0]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	685b      	ldr	r3, [r3, #4]
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d014      	beq.n	8002d4c <HAL_RCC_OscConfig+0xec>
 8002d22:	f7ff fa39 	bl	8002198 <HAL_GetTick>
 8002d26:	0003      	movs	r3, r0
 8002d28:	613b      	str	r3, [r7, #16]
 8002d2a:	e008      	b.n	8002d3e <HAL_RCC_OscConfig+0xde>
 8002d2c:	f7ff fa34 	bl	8002198 <HAL_GetTick>
 8002d30:	0002      	movs	r2, r0
 8002d32:	693b      	ldr	r3, [r7, #16]
 8002d34:	1ad3      	subs	r3, r2, r3
 8002d36:	2b64      	cmp	r3, #100	; 0x64
 8002d38:	d901      	bls.n	8002d3e <HAL_RCC_OscConfig+0xde>
 8002d3a:	2303      	movs	r3, #3
 8002d3c:	e298      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002d3e:	4b93      	ldr	r3, [pc, #588]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d40:	681a      	ldr	r2, [r3, #0]
 8002d42:	2380      	movs	r3, #128	; 0x80
 8002d44:	029b      	lsls	r3, r3, #10
 8002d46:	4013      	ands	r3, r2
 8002d48:	d0f0      	beq.n	8002d2c <HAL_RCC_OscConfig+0xcc>
 8002d4a:	e015      	b.n	8002d78 <HAL_RCC_OscConfig+0x118>
 8002d4c:	f7ff fa24 	bl	8002198 <HAL_GetTick>
 8002d50:	0003      	movs	r3, r0
 8002d52:	613b      	str	r3, [r7, #16]
 8002d54:	e008      	b.n	8002d68 <HAL_RCC_OscConfig+0x108>
 8002d56:	f7ff fa1f 	bl	8002198 <HAL_GetTick>
 8002d5a:	0002      	movs	r2, r0
 8002d5c:	693b      	ldr	r3, [r7, #16]
 8002d5e:	1ad3      	subs	r3, r2, r3
 8002d60:	2b64      	cmp	r3, #100	; 0x64
 8002d62:	d901      	bls.n	8002d68 <HAL_RCC_OscConfig+0x108>
 8002d64:	2303      	movs	r3, #3
 8002d66:	e283      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002d68:	4b88      	ldr	r3, [pc, #544]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d6a:	681a      	ldr	r2, [r3, #0]
 8002d6c:	2380      	movs	r3, #128	; 0x80
 8002d6e:	029b      	lsls	r3, r3, #10
 8002d70:	4013      	ands	r3, r2
 8002d72:	d1f0      	bne.n	8002d56 <HAL_RCC_OscConfig+0xf6>
 8002d74:	e000      	b.n	8002d78 <HAL_RCC_OscConfig+0x118>
 8002d76:	46c0      	nop			; (mov r8, r8)
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	2202      	movs	r2, #2
 8002d7e:	4013      	ands	r3, r2
 8002d80:	d100      	bne.n	8002d84 <HAL_RCC_OscConfig+0x124>
 8002d82:	e099      	b.n	8002eb8 <HAL_RCC_OscConfig+0x258>
 8002d84:	4b81      	ldr	r3, [pc, #516]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	2238      	movs	r2, #56	; 0x38
 8002d8a:	4013      	ands	r3, r2
 8002d8c:	61bb      	str	r3, [r7, #24]
 8002d8e:	4b7f      	ldr	r3, [pc, #508]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002d90:	68db      	ldr	r3, [r3, #12]
 8002d92:	2203      	movs	r2, #3
 8002d94:	4013      	ands	r3, r2
 8002d96:	617b      	str	r3, [r7, #20]
 8002d98:	69bb      	ldr	r3, [r7, #24]
 8002d9a:	2b10      	cmp	r3, #16
 8002d9c:	d102      	bne.n	8002da4 <HAL_RCC_OscConfig+0x144>
 8002d9e:	697b      	ldr	r3, [r7, #20]
 8002da0:	2b02      	cmp	r3, #2
 8002da2:	d002      	beq.n	8002daa <HAL_RCC_OscConfig+0x14a>
 8002da4:	69bb      	ldr	r3, [r7, #24]
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d135      	bne.n	8002e16 <HAL_RCC_OscConfig+0x1b6>
 8002daa:	4b78      	ldr	r3, [pc, #480]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002dac:	681a      	ldr	r2, [r3, #0]
 8002dae:	2380      	movs	r3, #128	; 0x80
 8002db0:	00db      	lsls	r3, r3, #3
 8002db2:	4013      	ands	r3, r2
 8002db4:	d005      	beq.n	8002dc2 <HAL_RCC_OscConfig+0x162>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	68db      	ldr	r3, [r3, #12]
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d101      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x162>
 8002dbe:	2301      	movs	r3, #1
 8002dc0:	e256      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002dc2:	4b72      	ldr	r3, [pc, #456]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002dc4:	685b      	ldr	r3, [r3, #4]
 8002dc6:	4a74      	ldr	r2, [pc, #464]	; (8002f98 <HAL_RCC_OscConfig+0x338>)
 8002dc8:	4013      	ands	r3, r2
 8002dca:	0019      	movs	r1, r3
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	695b      	ldr	r3, [r3, #20]
 8002dd0:	021a      	lsls	r2, r3, #8
 8002dd2:	4b6e      	ldr	r3, [pc, #440]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002dd4:	430a      	orrs	r2, r1
 8002dd6:	605a      	str	r2, [r3, #4]
 8002dd8:	69bb      	ldr	r3, [r7, #24]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d112      	bne.n	8002e04 <HAL_RCC_OscConfig+0x1a4>
 8002dde:	4b6b      	ldr	r3, [pc, #428]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	4a6e      	ldr	r2, [pc, #440]	; (8002f9c <HAL_RCC_OscConfig+0x33c>)
 8002de4:	4013      	ands	r3, r2
 8002de6:	0019      	movs	r1, r3
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	691a      	ldr	r2, [r3, #16]
 8002dec:	4b67      	ldr	r3, [pc, #412]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002dee:	430a      	orrs	r2, r1
 8002df0:	601a      	str	r2, [r3, #0]
 8002df2:	4b66      	ldr	r3, [pc, #408]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	0adb      	lsrs	r3, r3, #11
 8002df8:	2207      	movs	r2, #7
 8002dfa:	4013      	ands	r3, r2
 8002dfc:	4a68      	ldr	r2, [pc, #416]	; (8002fa0 <HAL_RCC_OscConfig+0x340>)
 8002dfe:	40da      	lsrs	r2, r3
 8002e00:	4b68      	ldr	r3, [pc, #416]	; (8002fa4 <HAL_RCC_OscConfig+0x344>)
 8002e02:	601a      	str	r2, [r3, #0]
 8002e04:	4b68      	ldr	r3, [pc, #416]	; (8002fa8 <HAL_RCC_OscConfig+0x348>)
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	0018      	movs	r0, r3
 8002e0a:	f7ff f969 	bl	80020e0 <HAL_InitTick>
 8002e0e:	1e03      	subs	r3, r0, #0
 8002e10:	d051      	beq.n	8002eb6 <HAL_RCC_OscConfig+0x256>
 8002e12:	2301      	movs	r3, #1
 8002e14:	e22c      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	68db      	ldr	r3, [r3, #12]
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d030      	beq.n	8002e80 <HAL_RCC_OscConfig+0x220>
 8002e1e:	4b5b      	ldr	r3, [pc, #364]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	4a5e      	ldr	r2, [pc, #376]	; (8002f9c <HAL_RCC_OscConfig+0x33c>)
 8002e24:	4013      	ands	r3, r2
 8002e26:	0019      	movs	r1, r3
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	691a      	ldr	r2, [r3, #16]
 8002e2c:	4b57      	ldr	r3, [pc, #348]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e2e:	430a      	orrs	r2, r1
 8002e30:	601a      	str	r2, [r3, #0]
 8002e32:	4b56      	ldr	r3, [pc, #344]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e34:	681a      	ldr	r2, [r3, #0]
 8002e36:	4b55      	ldr	r3, [pc, #340]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e38:	2180      	movs	r1, #128	; 0x80
 8002e3a:	0049      	lsls	r1, r1, #1
 8002e3c:	430a      	orrs	r2, r1
 8002e3e:	601a      	str	r2, [r3, #0]
 8002e40:	f7ff f9aa 	bl	8002198 <HAL_GetTick>
 8002e44:	0003      	movs	r3, r0
 8002e46:	613b      	str	r3, [r7, #16]
 8002e48:	e008      	b.n	8002e5c <HAL_RCC_OscConfig+0x1fc>
 8002e4a:	f7ff f9a5 	bl	8002198 <HAL_GetTick>
 8002e4e:	0002      	movs	r2, r0
 8002e50:	693b      	ldr	r3, [r7, #16]
 8002e52:	1ad3      	subs	r3, r2, r3
 8002e54:	2b02      	cmp	r3, #2
 8002e56:	d901      	bls.n	8002e5c <HAL_RCC_OscConfig+0x1fc>
 8002e58:	2303      	movs	r3, #3
 8002e5a:	e209      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002e5c:	4b4b      	ldr	r3, [pc, #300]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e5e:	681a      	ldr	r2, [r3, #0]
 8002e60:	2380      	movs	r3, #128	; 0x80
 8002e62:	00db      	lsls	r3, r3, #3
 8002e64:	4013      	ands	r3, r2
 8002e66:	d0f0      	beq.n	8002e4a <HAL_RCC_OscConfig+0x1ea>
 8002e68:	4b48      	ldr	r3, [pc, #288]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e6a:	685b      	ldr	r3, [r3, #4]
 8002e6c:	4a4a      	ldr	r2, [pc, #296]	; (8002f98 <HAL_RCC_OscConfig+0x338>)
 8002e6e:	4013      	ands	r3, r2
 8002e70:	0019      	movs	r1, r3
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	695b      	ldr	r3, [r3, #20]
 8002e76:	021a      	lsls	r2, r3, #8
 8002e78:	4b44      	ldr	r3, [pc, #272]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e7a:	430a      	orrs	r2, r1
 8002e7c:	605a      	str	r2, [r3, #4]
 8002e7e:	e01b      	b.n	8002eb8 <HAL_RCC_OscConfig+0x258>
 8002e80:	4b42      	ldr	r3, [pc, #264]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e82:	681a      	ldr	r2, [r3, #0]
 8002e84:	4b41      	ldr	r3, [pc, #260]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002e86:	4949      	ldr	r1, [pc, #292]	; (8002fac <HAL_RCC_OscConfig+0x34c>)
 8002e88:	400a      	ands	r2, r1
 8002e8a:	601a      	str	r2, [r3, #0]
 8002e8c:	f7ff f984 	bl	8002198 <HAL_GetTick>
 8002e90:	0003      	movs	r3, r0
 8002e92:	613b      	str	r3, [r7, #16]
 8002e94:	e008      	b.n	8002ea8 <HAL_RCC_OscConfig+0x248>
 8002e96:	f7ff f97f 	bl	8002198 <HAL_GetTick>
 8002e9a:	0002      	movs	r2, r0
 8002e9c:	693b      	ldr	r3, [r7, #16]
 8002e9e:	1ad3      	subs	r3, r2, r3
 8002ea0:	2b02      	cmp	r3, #2
 8002ea2:	d901      	bls.n	8002ea8 <HAL_RCC_OscConfig+0x248>
 8002ea4:	2303      	movs	r3, #3
 8002ea6:	e1e3      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002ea8:	4b38      	ldr	r3, [pc, #224]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002eaa:	681a      	ldr	r2, [r3, #0]
 8002eac:	2380      	movs	r3, #128	; 0x80
 8002eae:	00db      	lsls	r3, r3, #3
 8002eb0:	4013      	ands	r3, r2
 8002eb2:	d1f0      	bne.n	8002e96 <HAL_RCC_OscConfig+0x236>
 8002eb4:	e000      	b.n	8002eb8 <HAL_RCC_OscConfig+0x258>
 8002eb6:	46c0      	nop			; (mov r8, r8)
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	2208      	movs	r2, #8
 8002ebe:	4013      	ands	r3, r2
 8002ec0:	d047      	beq.n	8002f52 <HAL_RCC_OscConfig+0x2f2>
 8002ec2:	4b32      	ldr	r3, [pc, #200]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002ec4:	689b      	ldr	r3, [r3, #8]
 8002ec6:	2238      	movs	r2, #56	; 0x38
 8002ec8:	4013      	ands	r3, r2
 8002eca:	2b18      	cmp	r3, #24
 8002ecc:	d10a      	bne.n	8002ee4 <HAL_RCC_OscConfig+0x284>
 8002ece:	4b2f      	ldr	r3, [pc, #188]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002ed0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002ed2:	2202      	movs	r2, #2
 8002ed4:	4013      	ands	r3, r2
 8002ed6:	d03c      	beq.n	8002f52 <HAL_RCC_OscConfig+0x2f2>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	699b      	ldr	r3, [r3, #24]
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d138      	bne.n	8002f52 <HAL_RCC_OscConfig+0x2f2>
 8002ee0:	2301      	movs	r3, #1
 8002ee2:	e1c5      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	699b      	ldr	r3, [r3, #24]
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d019      	beq.n	8002f20 <HAL_RCC_OscConfig+0x2c0>
 8002eec:	4b27      	ldr	r3, [pc, #156]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002eee:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002ef0:	4b26      	ldr	r3, [pc, #152]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002ef2:	2101      	movs	r1, #1
 8002ef4:	430a      	orrs	r2, r1
 8002ef6:	661a      	str	r2, [r3, #96]	; 0x60
 8002ef8:	f7ff f94e 	bl	8002198 <HAL_GetTick>
 8002efc:	0003      	movs	r3, r0
 8002efe:	613b      	str	r3, [r7, #16]
 8002f00:	e008      	b.n	8002f14 <HAL_RCC_OscConfig+0x2b4>
 8002f02:	f7ff f949 	bl	8002198 <HAL_GetTick>
 8002f06:	0002      	movs	r2, r0
 8002f08:	693b      	ldr	r3, [r7, #16]
 8002f0a:	1ad3      	subs	r3, r2, r3
 8002f0c:	2b02      	cmp	r3, #2
 8002f0e:	d901      	bls.n	8002f14 <HAL_RCC_OscConfig+0x2b4>
 8002f10:	2303      	movs	r3, #3
 8002f12:	e1ad      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002f14:	4b1d      	ldr	r3, [pc, #116]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f18:	2202      	movs	r2, #2
 8002f1a:	4013      	ands	r3, r2
 8002f1c:	d0f1      	beq.n	8002f02 <HAL_RCC_OscConfig+0x2a2>
 8002f1e:	e018      	b.n	8002f52 <HAL_RCC_OscConfig+0x2f2>
 8002f20:	4b1a      	ldr	r3, [pc, #104]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f22:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002f24:	4b19      	ldr	r3, [pc, #100]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f26:	2101      	movs	r1, #1
 8002f28:	438a      	bics	r2, r1
 8002f2a:	661a      	str	r2, [r3, #96]	; 0x60
 8002f2c:	f7ff f934 	bl	8002198 <HAL_GetTick>
 8002f30:	0003      	movs	r3, r0
 8002f32:	613b      	str	r3, [r7, #16]
 8002f34:	e008      	b.n	8002f48 <HAL_RCC_OscConfig+0x2e8>
 8002f36:	f7ff f92f 	bl	8002198 <HAL_GetTick>
 8002f3a:	0002      	movs	r2, r0
 8002f3c:	693b      	ldr	r3, [r7, #16]
 8002f3e:	1ad3      	subs	r3, r2, r3
 8002f40:	2b02      	cmp	r3, #2
 8002f42:	d901      	bls.n	8002f48 <HAL_RCC_OscConfig+0x2e8>
 8002f44:	2303      	movs	r3, #3
 8002f46:	e193      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002f48:	4b10      	ldr	r3, [pc, #64]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f4a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f4c:	2202      	movs	r2, #2
 8002f4e:	4013      	ands	r3, r2
 8002f50:	d1f1      	bne.n	8002f36 <HAL_RCC_OscConfig+0x2d6>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	2204      	movs	r2, #4
 8002f58:	4013      	ands	r3, r2
 8002f5a:	d100      	bne.n	8002f5e <HAL_RCC_OscConfig+0x2fe>
 8002f5c:	e0c6      	b.n	80030ec <HAL_RCC_OscConfig+0x48c>
 8002f5e:	231f      	movs	r3, #31
 8002f60:	18fb      	adds	r3, r7, r3
 8002f62:	2200      	movs	r2, #0
 8002f64:	701a      	strb	r2, [r3, #0]
 8002f66:	4b09      	ldr	r3, [pc, #36]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f68:	689b      	ldr	r3, [r3, #8]
 8002f6a:	2238      	movs	r2, #56	; 0x38
 8002f6c:	4013      	ands	r3, r2
 8002f6e:	2b20      	cmp	r3, #32
 8002f70:	d11e      	bne.n	8002fb0 <HAL_RCC_OscConfig+0x350>
 8002f72:	4b06      	ldr	r3, [pc, #24]	; (8002f8c <HAL_RCC_OscConfig+0x32c>)
 8002f74:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f76:	2202      	movs	r2, #2
 8002f78:	4013      	ands	r3, r2
 8002f7a:	d100      	bne.n	8002f7e <HAL_RCC_OscConfig+0x31e>
 8002f7c:	e0b6      	b.n	80030ec <HAL_RCC_OscConfig+0x48c>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	689b      	ldr	r3, [r3, #8]
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	d000      	beq.n	8002f88 <HAL_RCC_OscConfig+0x328>
 8002f86:	e0b1      	b.n	80030ec <HAL_RCC_OscConfig+0x48c>
 8002f88:	2301      	movs	r3, #1
 8002f8a:	e171      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8002f8c:	40021000 	.word	0x40021000
 8002f90:	fffeffff 	.word	0xfffeffff
 8002f94:	fffbffff 	.word	0xfffbffff
 8002f98:	ffff80ff 	.word	0xffff80ff
 8002f9c:	ffffc7ff 	.word	0xffffc7ff
 8002fa0:	00f42400 	.word	0x00f42400
 8002fa4:	20000008 	.word	0x20000008
 8002fa8:	20000000 	.word	0x20000000
 8002fac:	fffffeff 	.word	0xfffffeff
 8002fb0:	4bb1      	ldr	r3, [pc, #708]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8002fb2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002fb4:	2380      	movs	r3, #128	; 0x80
 8002fb6:	055b      	lsls	r3, r3, #21
 8002fb8:	4013      	ands	r3, r2
 8002fba:	d101      	bne.n	8002fc0 <HAL_RCC_OscConfig+0x360>
 8002fbc:	2301      	movs	r3, #1
 8002fbe:	e000      	b.n	8002fc2 <HAL_RCC_OscConfig+0x362>
 8002fc0:	2300      	movs	r3, #0
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d011      	beq.n	8002fea <HAL_RCC_OscConfig+0x38a>
 8002fc6:	4bac      	ldr	r3, [pc, #688]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8002fc8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002fca:	4bab      	ldr	r3, [pc, #684]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8002fcc:	2180      	movs	r1, #128	; 0x80
 8002fce:	0549      	lsls	r1, r1, #21
 8002fd0:	430a      	orrs	r2, r1
 8002fd2:	63da      	str	r2, [r3, #60]	; 0x3c
 8002fd4:	4ba8      	ldr	r3, [pc, #672]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8002fd6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002fd8:	2380      	movs	r3, #128	; 0x80
 8002fda:	055b      	lsls	r3, r3, #21
 8002fdc:	4013      	ands	r3, r2
 8002fde:	60fb      	str	r3, [r7, #12]
 8002fe0:	68fb      	ldr	r3, [r7, #12]
 8002fe2:	231f      	movs	r3, #31
 8002fe4:	18fb      	adds	r3, r7, r3
 8002fe6:	2201      	movs	r2, #1
 8002fe8:	701a      	strb	r2, [r3, #0]
 8002fea:	4ba4      	ldr	r3, [pc, #656]	; (800327c <HAL_RCC_OscConfig+0x61c>)
 8002fec:	681a      	ldr	r2, [r3, #0]
 8002fee:	2380      	movs	r3, #128	; 0x80
 8002ff0:	005b      	lsls	r3, r3, #1
 8002ff2:	4013      	ands	r3, r2
 8002ff4:	d11a      	bne.n	800302c <HAL_RCC_OscConfig+0x3cc>
 8002ff6:	4ba1      	ldr	r3, [pc, #644]	; (800327c <HAL_RCC_OscConfig+0x61c>)
 8002ff8:	681a      	ldr	r2, [r3, #0]
 8002ffa:	4ba0      	ldr	r3, [pc, #640]	; (800327c <HAL_RCC_OscConfig+0x61c>)
 8002ffc:	2180      	movs	r1, #128	; 0x80
 8002ffe:	0049      	lsls	r1, r1, #1
 8003000:	430a      	orrs	r2, r1
 8003002:	601a      	str	r2, [r3, #0]
 8003004:	f7ff f8c8 	bl	8002198 <HAL_GetTick>
 8003008:	0003      	movs	r3, r0
 800300a:	613b      	str	r3, [r7, #16]
 800300c:	e008      	b.n	8003020 <HAL_RCC_OscConfig+0x3c0>
 800300e:	f7ff f8c3 	bl	8002198 <HAL_GetTick>
 8003012:	0002      	movs	r2, r0
 8003014:	693b      	ldr	r3, [r7, #16]
 8003016:	1ad3      	subs	r3, r2, r3
 8003018:	2b02      	cmp	r3, #2
 800301a:	d901      	bls.n	8003020 <HAL_RCC_OscConfig+0x3c0>
 800301c:	2303      	movs	r3, #3
 800301e:	e127      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8003020:	4b96      	ldr	r3, [pc, #600]	; (800327c <HAL_RCC_OscConfig+0x61c>)
 8003022:	681a      	ldr	r2, [r3, #0]
 8003024:	2380      	movs	r3, #128	; 0x80
 8003026:	005b      	lsls	r3, r3, #1
 8003028:	4013      	ands	r3, r2
 800302a:	d0f0      	beq.n	800300e <HAL_RCC_OscConfig+0x3ae>
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	689b      	ldr	r3, [r3, #8]
 8003030:	2b01      	cmp	r3, #1
 8003032:	d106      	bne.n	8003042 <HAL_RCC_OscConfig+0x3e2>
 8003034:	4b90      	ldr	r3, [pc, #576]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003036:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003038:	4b8f      	ldr	r3, [pc, #572]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800303a:	2101      	movs	r1, #1
 800303c:	430a      	orrs	r2, r1
 800303e:	65da      	str	r2, [r3, #92]	; 0x5c
 8003040:	e01c      	b.n	800307c <HAL_RCC_OscConfig+0x41c>
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	689b      	ldr	r3, [r3, #8]
 8003046:	2b05      	cmp	r3, #5
 8003048:	d10c      	bne.n	8003064 <HAL_RCC_OscConfig+0x404>
 800304a:	4b8b      	ldr	r3, [pc, #556]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800304c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800304e:	4b8a      	ldr	r3, [pc, #552]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003050:	2104      	movs	r1, #4
 8003052:	430a      	orrs	r2, r1
 8003054:	65da      	str	r2, [r3, #92]	; 0x5c
 8003056:	4b88      	ldr	r3, [pc, #544]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003058:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800305a:	4b87      	ldr	r3, [pc, #540]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800305c:	2101      	movs	r1, #1
 800305e:	430a      	orrs	r2, r1
 8003060:	65da      	str	r2, [r3, #92]	; 0x5c
 8003062:	e00b      	b.n	800307c <HAL_RCC_OscConfig+0x41c>
 8003064:	4b84      	ldr	r3, [pc, #528]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003066:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003068:	4b83      	ldr	r3, [pc, #524]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800306a:	2101      	movs	r1, #1
 800306c:	438a      	bics	r2, r1
 800306e:	65da      	str	r2, [r3, #92]	; 0x5c
 8003070:	4b81      	ldr	r3, [pc, #516]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003072:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003074:	4b80      	ldr	r3, [pc, #512]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003076:	2104      	movs	r1, #4
 8003078:	438a      	bics	r2, r1
 800307a:	65da      	str	r2, [r3, #92]	; 0x5c
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	689b      	ldr	r3, [r3, #8]
 8003080:	2b00      	cmp	r3, #0
 8003082:	d014      	beq.n	80030ae <HAL_RCC_OscConfig+0x44e>
 8003084:	f7ff f888 	bl	8002198 <HAL_GetTick>
 8003088:	0003      	movs	r3, r0
 800308a:	613b      	str	r3, [r7, #16]
 800308c:	e009      	b.n	80030a2 <HAL_RCC_OscConfig+0x442>
 800308e:	f7ff f883 	bl	8002198 <HAL_GetTick>
 8003092:	0002      	movs	r2, r0
 8003094:	693b      	ldr	r3, [r7, #16]
 8003096:	1ad3      	subs	r3, r2, r3
 8003098:	4a79      	ldr	r2, [pc, #484]	; (8003280 <HAL_RCC_OscConfig+0x620>)
 800309a:	4293      	cmp	r3, r2
 800309c:	d901      	bls.n	80030a2 <HAL_RCC_OscConfig+0x442>
 800309e:	2303      	movs	r3, #3
 80030a0:	e0e6      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 80030a2:	4b75      	ldr	r3, [pc, #468]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80030a4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030a6:	2202      	movs	r2, #2
 80030a8:	4013      	ands	r3, r2
 80030aa:	d0f0      	beq.n	800308e <HAL_RCC_OscConfig+0x42e>
 80030ac:	e013      	b.n	80030d6 <HAL_RCC_OscConfig+0x476>
 80030ae:	f7ff f873 	bl	8002198 <HAL_GetTick>
 80030b2:	0003      	movs	r3, r0
 80030b4:	613b      	str	r3, [r7, #16]
 80030b6:	e009      	b.n	80030cc <HAL_RCC_OscConfig+0x46c>
 80030b8:	f7ff f86e 	bl	8002198 <HAL_GetTick>
 80030bc:	0002      	movs	r2, r0
 80030be:	693b      	ldr	r3, [r7, #16]
 80030c0:	1ad3      	subs	r3, r2, r3
 80030c2:	4a6f      	ldr	r2, [pc, #444]	; (8003280 <HAL_RCC_OscConfig+0x620>)
 80030c4:	4293      	cmp	r3, r2
 80030c6:	d901      	bls.n	80030cc <HAL_RCC_OscConfig+0x46c>
 80030c8:	2303      	movs	r3, #3
 80030ca:	e0d1      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 80030cc:	4b6a      	ldr	r3, [pc, #424]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80030ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030d0:	2202      	movs	r2, #2
 80030d2:	4013      	ands	r3, r2
 80030d4:	d1f0      	bne.n	80030b8 <HAL_RCC_OscConfig+0x458>
 80030d6:	231f      	movs	r3, #31
 80030d8:	18fb      	adds	r3, r7, r3
 80030da:	781b      	ldrb	r3, [r3, #0]
 80030dc:	2b01      	cmp	r3, #1
 80030de:	d105      	bne.n	80030ec <HAL_RCC_OscConfig+0x48c>
 80030e0:	4b65      	ldr	r3, [pc, #404]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80030e2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80030e4:	4b64      	ldr	r3, [pc, #400]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80030e6:	4967      	ldr	r1, [pc, #412]	; (8003284 <HAL_RCC_OscConfig+0x624>)
 80030e8:	400a      	ands	r2, r1
 80030ea:	63da      	str	r2, [r3, #60]	; 0x3c
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	69db      	ldr	r3, [r3, #28]
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d100      	bne.n	80030f6 <HAL_RCC_OscConfig+0x496>
 80030f4:	e0bb      	b.n	800326e <HAL_RCC_OscConfig+0x60e>
 80030f6:	4b60      	ldr	r3, [pc, #384]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80030f8:	689b      	ldr	r3, [r3, #8]
 80030fa:	2238      	movs	r2, #56	; 0x38
 80030fc:	4013      	ands	r3, r2
 80030fe:	2b10      	cmp	r3, #16
 8003100:	d100      	bne.n	8003104 <HAL_RCC_OscConfig+0x4a4>
 8003102:	e07b      	b.n	80031fc <HAL_RCC_OscConfig+0x59c>
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	69db      	ldr	r3, [r3, #28]
 8003108:	2b02      	cmp	r3, #2
 800310a:	d156      	bne.n	80031ba <HAL_RCC_OscConfig+0x55a>
 800310c:	4b5a      	ldr	r3, [pc, #360]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800310e:	681a      	ldr	r2, [r3, #0]
 8003110:	4b59      	ldr	r3, [pc, #356]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003112:	495d      	ldr	r1, [pc, #372]	; (8003288 <HAL_RCC_OscConfig+0x628>)
 8003114:	400a      	ands	r2, r1
 8003116:	601a      	str	r2, [r3, #0]
 8003118:	f7ff f83e 	bl	8002198 <HAL_GetTick>
 800311c:	0003      	movs	r3, r0
 800311e:	613b      	str	r3, [r7, #16]
 8003120:	e008      	b.n	8003134 <HAL_RCC_OscConfig+0x4d4>
 8003122:	f7ff f839 	bl	8002198 <HAL_GetTick>
 8003126:	0002      	movs	r2, r0
 8003128:	693b      	ldr	r3, [r7, #16]
 800312a:	1ad3      	subs	r3, r2, r3
 800312c:	2b02      	cmp	r3, #2
 800312e:	d901      	bls.n	8003134 <HAL_RCC_OscConfig+0x4d4>
 8003130:	2303      	movs	r3, #3
 8003132:	e09d      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8003134:	4b50      	ldr	r3, [pc, #320]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003136:	681a      	ldr	r2, [r3, #0]
 8003138:	2380      	movs	r3, #128	; 0x80
 800313a:	049b      	lsls	r3, r3, #18
 800313c:	4013      	ands	r3, r2
 800313e:	d1f0      	bne.n	8003122 <HAL_RCC_OscConfig+0x4c2>
 8003140:	4b4d      	ldr	r3, [pc, #308]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003142:	68db      	ldr	r3, [r3, #12]
 8003144:	4a51      	ldr	r2, [pc, #324]	; (800328c <HAL_RCC_OscConfig+0x62c>)
 8003146:	4013      	ands	r3, r2
 8003148:	0019      	movs	r1, r3
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	6a1a      	ldr	r2, [r3, #32]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003152:	431a      	orrs	r2, r3
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003158:	021b      	lsls	r3, r3, #8
 800315a:	431a      	orrs	r2, r3
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003160:	431a      	orrs	r2, r3
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003166:	431a      	orrs	r2, r3
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800316c:	431a      	orrs	r2, r3
 800316e:	4b42      	ldr	r3, [pc, #264]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003170:	430a      	orrs	r2, r1
 8003172:	60da      	str	r2, [r3, #12]
 8003174:	4b40      	ldr	r3, [pc, #256]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003176:	681a      	ldr	r2, [r3, #0]
 8003178:	4b3f      	ldr	r3, [pc, #252]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800317a:	2180      	movs	r1, #128	; 0x80
 800317c:	0449      	lsls	r1, r1, #17
 800317e:	430a      	orrs	r2, r1
 8003180:	601a      	str	r2, [r3, #0]
 8003182:	4b3d      	ldr	r3, [pc, #244]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003184:	68da      	ldr	r2, [r3, #12]
 8003186:	4b3c      	ldr	r3, [pc, #240]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 8003188:	2180      	movs	r1, #128	; 0x80
 800318a:	0549      	lsls	r1, r1, #21
 800318c:	430a      	orrs	r2, r1
 800318e:	60da      	str	r2, [r3, #12]
 8003190:	f7ff f802 	bl	8002198 <HAL_GetTick>
 8003194:	0003      	movs	r3, r0
 8003196:	613b      	str	r3, [r7, #16]
 8003198:	e008      	b.n	80031ac <HAL_RCC_OscConfig+0x54c>
 800319a:	f7fe fffd 	bl	8002198 <HAL_GetTick>
 800319e:	0002      	movs	r2, r0
 80031a0:	693b      	ldr	r3, [r7, #16]
 80031a2:	1ad3      	subs	r3, r2, r3
 80031a4:	2b02      	cmp	r3, #2
 80031a6:	d901      	bls.n	80031ac <HAL_RCC_OscConfig+0x54c>
 80031a8:	2303      	movs	r3, #3
 80031aa:	e061      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 80031ac:	4b32      	ldr	r3, [pc, #200]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031ae:	681a      	ldr	r2, [r3, #0]
 80031b0:	2380      	movs	r3, #128	; 0x80
 80031b2:	049b      	lsls	r3, r3, #18
 80031b4:	4013      	ands	r3, r2
 80031b6:	d0f0      	beq.n	800319a <HAL_RCC_OscConfig+0x53a>
 80031b8:	e059      	b.n	800326e <HAL_RCC_OscConfig+0x60e>
 80031ba:	4b2f      	ldr	r3, [pc, #188]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031bc:	681a      	ldr	r2, [r3, #0]
 80031be:	4b2e      	ldr	r3, [pc, #184]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031c0:	4931      	ldr	r1, [pc, #196]	; (8003288 <HAL_RCC_OscConfig+0x628>)
 80031c2:	400a      	ands	r2, r1
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	f7fe ffe7 	bl	8002198 <HAL_GetTick>
 80031ca:	0003      	movs	r3, r0
 80031cc:	613b      	str	r3, [r7, #16]
 80031ce:	e008      	b.n	80031e2 <HAL_RCC_OscConfig+0x582>
 80031d0:	f7fe ffe2 	bl	8002198 <HAL_GetTick>
 80031d4:	0002      	movs	r2, r0
 80031d6:	693b      	ldr	r3, [r7, #16]
 80031d8:	1ad3      	subs	r3, r2, r3
 80031da:	2b02      	cmp	r3, #2
 80031dc:	d901      	bls.n	80031e2 <HAL_RCC_OscConfig+0x582>
 80031de:	2303      	movs	r3, #3
 80031e0:	e046      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 80031e2:	4b25      	ldr	r3, [pc, #148]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031e4:	681a      	ldr	r2, [r3, #0]
 80031e6:	2380      	movs	r3, #128	; 0x80
 80031e8:	049b      	lsls	r3, r3, #18
 80031ea:	4013      	ands	r3, r2
 80031ec:	d1f0      	bne.n	80031d0 <HAL_RCC_OscConfig+0x570>
 80031ee:	4b22      	ldr	r3, [pc, #136]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031f0:	68da      	ldr	r2, [r3, #12]
 80031f2:	4b21      	ldr	r3, [pc, #132]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 80031f4:	4926      	ldr	r1, [pc, #152]	; (8003290 <HAL_RCC_OscConfig+0x630>)
 80031f6:	400a      	ands	r2, r1
 80031f8:	60da      	str	r2, [r3, #12]
 80031fa:	e038      	b.n	800326e <HAL_RCC_OscConfig+0x60e>
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	69db      	ldr	r3, [r3, #28]
 8003200:	2b01      	cmp	r3, #1
 8003202:	d101      	bne.n	8003208 <HAL_RCC_OscConfig+0x5a8>
 8003204:	2301      	movs	r3, #1
 8003206:	e033      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 8003208:	4b1b      	ldr	r3, [pc, #108]	; (8003278 <HAL_RCC_OscConfig+0x618>)
 800320a:	68db      	ldr	r3, [r3, #12]
 800320c:	617b      	str	r3, [r7, #20]
 800320e:	697b      	ldr	r3, [r7, #20]
 8003210:	2203      	movs	r2, #3
 8003212:	401a      	ands	r2, r3
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	6a1b      	ldr	r3, [r3, #32]
 8003218:	429a      	cmp	r2, r3
 800321a:	d126      	bne.n	800326a <HAL_RCC_OscConfig+0x60a>
 800321c:	697b      	ldr	r3, [r7, #20]
 800321e:	2270      	movs	r2, #112	; 0x70
 8003220:	401a      	ands	r2, r3
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003226:	429a      	cmp	r2, r3
 8003228:	d11f      	bne.n	800326a <HAL_RCC_OscConfig+0x60a>
 800322a:	697a      	ldr	r2, [r7, #20]
 800322c:	23fe      	movs	r3, #254	; 0xfe
 800322e:	01db      	lsls	r3, r3, #7
 8003230:	401a      	ands	r2, r3
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003236:	021b      	lsls	r3, r3, #8
 8003238:	429a      	cmp	r2, r3
 800323a:	d116      	bne.n	800326a <HAL_RCC_OscConfig+0x60a>
 800323c:	697a      	ldr	r2, [r7, #20]
 800323e:	23f8      	movs	r3, #248	; 0xf8
 8003240:	039b      	lsls	r3, r3, #14
 8003242:	401a      	ands	r2, r3
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003248:	429a      	cmp	r2, r3
 800324a:	d10e      	bne.n	800326a <HAL_RCC_OscConfig+0x60a>
 800324c:	697a      	ldr	r2, [r7, #20]
 800324e:	23e0      	movs	r3, #224	; 0xe0
 8003250:	051b      	lsls	r3, r3, #20
 8003252:	401a      	ands	r2, r3
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003258:	429a      	cmp	r2, r3
 800325a:	d106      	bne.n	800326a <HAL_RCC_OscConfig+0x60a>
 800325c:	697b      	ldr	r3, [r7, #20]
 800325e:	0f5b      	lsrs	r3, r3, #29
 8003260:	075a      	lsls	r2, r3, #29
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003266:	429a      	cmp	r2, r3
 8003268:	d001      	beq.n	800326e <HAL_RCC_OscConfig+0x60e>
 800326a:	2301      	movs	r3, #1
 800326c:	e000      	b.n	8003270 <HAL_RCC_OscConfig+0x610>
 800326e:	2300      	movs	r3, #0
 8003270:	0018      	movs	r0, r3
 8003272:	46bd      	mov	sp, r7
 8003274:	b008      	add	sp, #32
 8003276:	bd80      	pop	{r7, pc}
 8003278:	40021000 	.word	0x40021000
 800327c:	40007000 	.word	0x40007000
 8003280:	00001388 	.word	0x00001388
 8003284:	efffffff 	.word	0xefffffff
 8003288:	feffffff 	.word	0xfeffffff
 800328c:	11c1808c 	.word	0x11c1808c
 8003290:	eefefffc 	.word	0xeefefffc

08003294 <HAL_RCC_ClockConfig>:
 8003294:	b580      	push	{r7, lr}
 8003296:	b084      	sub	sp, #16
 8003298:	af00      	add	r7, sp, #0
 800329a:	6078      	str	r0, [r7, #4]
 800329c:	6039      	str	r1, [r7, #0]
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d101      	bne.n	80032a8 <HAL_RCC_ClockConfig+0x14>
 80032a4:	2301      	movs	r3, #1
 80032a6:	e0e9      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 80032a8:	4b76      	ldr	r3, [pc, #472]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	2207      	movs	r2, #7
 80032ae:	4013      	ands	r3, r2
 80032b0:	683a      	ldr	r2, [r7, #0]
 80032b2:	429a      	cmp	r2, r3
 80032b4:	d91e      	bls.n	80032f4 <HAL_RCC_ClockConfig+0x60>
 80032b6:	4b73      	ldr	r3, [pc, #460]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	2207      	movs	r2, #7
 80032bc:	4393      	bics	r3, r2
 80032be:	0019      	movs	r1, r3
 80032c0:	4b70      	ldr	r3, [pc, #448]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80032c2:	683a      	ldr	r2, [r7, #0]
 80032c4:	430a      	orrs	r2, r1
 80032c6:	601a      	str	r2, [r3, #0]
 80032c8:	f7fe ff66 	bl	8002198 <HAL_GetTick>
 80032cc:	0003      	movs	r3, r0
 80032ce:	60fb      	str	r3, [r7, #12]
 80032d0:	e009      	b.n	80032e6 <HAL_RCC_ClockConfig+0x52>
 80032d2:	f7fe ff61 	bl	8002198 <HAL_GetTick>
 80032d6:	0002      	movs	r2, r0
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	1ad3      	subs	r3, r2, r3
 80032dc:	4a6a      	ldr	r2, [pc, #424]	; (8003488 <HAL_RCC_ClockConfig+0x1f4>)
 80032de:	4293      	cmp	r3, r2
 80032e0:	d901      	bls.n	80032e6 <HAL_RCC_ClockConfig+0x52>
 80032e2:	2303      	movs	r3, #3
 80032e4:	e0ca      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 80032e6:	4b67      	ldr	r3, [pc, #412]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	2207      	movs	r2, #7
 80032ec:	4013      	ands	r3, r2
 80032ee:	683a      	ldr	r2, [r7, #0]
 80032f0:	429a      	cmp	r2, r3
 80032f2:	d1ee      	bne.n	80032d2 <HAL_RCC_ClockConfig+0x3e>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	2202      	movs	r2, #2
 80032fa:	4013      	ands	r3, r2
 80032fc:	d015      	beq.n	800332a <HAL_RCC_ClockConfig+0x96>
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	2204      	movs	r2, #4
 8003304:	4013      	ands	r3, r2
 8003306:	d006      	beq.n	8003316 <HAL_RCC_ClockConfig+0x82>
 8003308:	4b60      	ldr	r3, [pc, #384]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800330a:	689a      	ldr	r2, [r3, #8]
 800330c:	4b5f      	ldr	r3, [pc, #380]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800330e:	21e0      	movs	r1, #224	; 0xe0
 8003310:	01c9      	lsls	r1, r1, #7
 8003312:	430a      	orrs	r2, r1
 8003314:	609a      	str	r2, [r3, #8]
 8003316:	4b5d      	ldr	r3, [pc, #372]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003318:	689b      	ldr	r3, [r3, #8]
 800331a:	4a5d      	ldr	r2, [pc, #372]	; (8003490 <HAL_RCC_ClockConfig+0x1fc>)
 800331c:	4013      	ands	r3, r2
 800331e:	0019      	movs	r1, r3
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	689a      	ldr	r2, [r3, #8]
 8003324:	4b59      	ldr	r3, [pc, #356]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003326:	430a      	orrs	r2, r1
 8003328:	609a      	str	r2, [r3, #8]
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	2201      	movs	r2, #1
 8003330:	4013      	ands	r3, r2
 8003332:	d057      	beq.n	80033e4 <HAL_RCC_ClockConfig+0x150>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	685b      	ldr	r3, [r3, #4]
 8003338:	2b01      	cmp	r3, #1
 800333a:	d107      	bne.n	800334c <HAL_RCC_ClockConfig+0xb8>
 800333c:	4b53      	ldr	r3, [pc, #332]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800333e:	681a      	ldr	r2, [r3, #0]
 8003340:	2380      	movs	r3, #128	; 0x80
 8003342:	029b      	lsls	r3, r3, #10
 8003344:	4013      	ands	r3, r2
 8003346:	d12b      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x10c>
 8003348:	2301      	movs	r3, #1
 800334a:	e097      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	2b02      	cmp	r3, #2
 8003352:	d107      	bne.n	8003364 <HAL_RCC_ClockConfig+0xd0>
 8003354:	4b4d      	ldr	r3, [pc, #308]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003356:	681a      	ldr	r2, [r3, #0]
 8003358:	2380      	movs	r3, #128	; 0x80
 800335a:	049b      	lsls	r3, r3, #18
 800335c:	4013      	ands	r3, r2
 800335e:	d11f      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x10c>
 8003360:	2301      	movs	r3, #1
 8003362:	e08b      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	685b      	ldr	r3, [r3, #4]
 8003368:	2b00      	cmp	r3, #0
 800336a:	d107      	bne.n	800337c <HAL_RCC_ClockConfig+0xe8>
 800336c:	4b47      	ldr	r3, [pc, #284]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800336e:	681a      	ldr	r2, [r3, #0]
 8003370:	2380      	movs	r3, #128	; 0x80
 8003372:	00db      	lsls	r3, r3, #3
 8003374:	4013      	ands	r3, r2
 8003376:	d113      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x10c>
 8003378:	2301      	movs	r3, #1
 800337a:	e07f      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	685b      	ldr	r3, [r3, #4]
 8003380:	2b03      	cmp	r3, #3
 8003382:	d106      	bne.n	8003392 <HAL_RCC_ClockConfig+0xfe>
 8003384:	4b41      	ldr	r3, [pc, #260]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003386:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003388:	2202      	movs	r2, #2
 800338a:	4013      	ands	r3, r2
 800338c:	d108      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x10c>
 800338e:	2301      	movs	r3, #1
 8003390:	e074      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 8003392:	4b3e      	ldr	r3, [pc, #248]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003394:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003396:	2202      	movs	r2, #2
 8003398:	4013      	ands	r3, r2
 800339a:	d101      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x10c>
 800339c:	2301      	movs	r3, #1
 800339e:	e06d      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 80033a0:	4b3a      	ldr	r3, [pc, #232]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 80033a2:	689b      	ldr	r3, [r3, #8]
 80033a4:	2207      	movs	r2, #7
 80033a6:	4393      	bics	r3, r2
 80033a8:	0019      	movs	r1, r3
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	685a      	ldr	r2, [r3, #4]
 80033ae:	4b37      	ldr	r3, [pc, #220]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 80033b0:	430a      	orrs	r2, r1
 80033b2:	609a      	str	r2, [r3, #8]
 80033b4:	f7fe fef0 	bl	8002198 <HAL_GetTick>
 80033b8:	0003      	movs	r3, r0
 80033ba:	60fb      	str	r3, [r7, #12]
 80033bc:	e009      	b.n	80033d2 <HAL_RCC_ClockConfig+0x13e>
 80033be:	f7fe feeb 	bl	8002198 <HAL_GetTick>
 80033c2:	0002      	movs	r2, r0
 80033c4:	68fb      	ldr	r3, [r7, #12]
 80033c6:	1ad3      	subs	r3, r2, r3
 80033c8:	4a2f      	ldr	r2, [pc, #188]	; (8003488 <HAL_RCC_ClockConfig+0x1f4>)
 80033ca:	4293      	cmp	r3, r2
 80033cc:	d901      	bls.n	80033d2 <HAL_RCC_ClockConfig+0x13e>
 80033ce:	2303      	movs	r3, #3
 80033d0:	e054      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 80033d2:	4b2e      	ldr	r3, [pc, #184]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 80033d4:	689b      	ldr	r3, [r3, #8]
 80033d6:	2238      	movs	r2, #56	; 0x38
 80033d8:	401a      	ands	r2, r3
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	685b      	ldr	r3, [r3, #4]
 80033de:	00db      	lsls	r3, r3, #3
 80033e0:	429a      	cmp	r2, r3
 80033e2:	d1ec      	bne.n	80033be <HAL_RCC_ClockConfig+0x12a>
 80033e4:	4b27      	ldr	r3, [pc, #156]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	2207      	movs	r2, #7
 80033ea:	4013      	ands	r3, r2
 80033ec:	683a      	ldr	r2, [r7, #0]
 80033ee:	429a      	cmp	r2, r3
 80033f0:	d21e      	bcs.n	8003430 <HAL_RCC_ClockConfig+0x19c>
 80033f2:	4b24      	ldr	r3, [pc, #144]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	2207      	movs	r2, #7
 80033f8:	4393      	bics	r3, r2
 80033fa:	0019      	movs	r1, r3
 80033fc:	4b21      	ldr	r3, [pc, #132]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 80033fe:	683a      	ldr	r2, [r7, #0]
 8003400:	430a      	orrs	r2, r1
 8003402:	601a      	str	r2, [r3, #0]
 8003404:	f7fe fec8 	bl	8002198 <HAL_GetTick>
 8003408:	0003      	movs	r3, r0
 800340a:	60fb      	str	r3, [r7, #12]
 800340c:	e009      	b.n	8003422 <HAL_RCC_ClockConfig+0x18e>
 800340e:	f7fe fec3 	bl	8002198 <HAL_GetTick>
 8003412:	0002      	movs	r2, r0
 8003414:	68fb      	ldr	r3, [r7, #12]
 8003416:	1ad3      	subs	r3, r2, r3
 8003418:	4a1b      	ldr	r2, [pc, #108]	; (8003488 <HAL_RCC_ClockConfig+0x1f4>)
 800341a:	4293      	cmp	r3, r2
 800341c:	d901      	bls.n	8003422 <HAL_RCC_ClockConfig+0x18e>
 800341e:	2303      	movs	r3, #3
 8003420:	e02c      	b.n	800347c <HAL_RCC_ClockConfig+0x1e8>
 8003422:	4b18      	ldr	r3, [pc, #96]	; (8003484 <HAL_RCC_ClockConfig+0x1f0>)
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	2207      	movs	r2, #7
 8003428:	4013      	ands	r3, r2
 800342a:	683a      	ldr	r2, [r7, #0]
 800342c:	429a      	cmp	r2, r3
 800342e:	d1ee      	bne.n	800340e <HAL_RCC_ClockConfig+0x17a>
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	2204      	movs	r2, #4
 8003436:	4013      	ands	r3, r2
 8003438:	d009      	beq.n	800344e <HAL_RCC_ClockConfig+0x1ba>
 800343a:	4b14      	ldr	r3, [pc, #80]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800343c:	689b      	ldr	r3, [r3, #8]
 800343e:	4a15      	ldr	r2, [pc, #84]	; (8003494 <HAL_RCC_ClockConfig+0x200>)
 8003440:	4013      	ands	r3, r2
 8003442:	0019      	movs	r1, r3
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	68da      	ldr	r2, [r3, #12]
 8003448:	4b10      	ldr	r3, [pc, #64]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 800344a:	430a      	orrs	r2, r1
 800344c:	609a      	str	r2, [r3, #8]
 800344e:	f000 f829 	bl	80034a4 <HAL_RCC_GetSysClockFreq>
 8003452:	0001      	movs	r1, r0
 8003454:	4b0d      	ldr	r3, [pc, #52]	; (800348c <HAL_RCC_ClockConfig+0x1f8>)
 8003456:	689b      	ldr	r3, [r3, #8]
 8003458:	0a1b      	lsrs	r3, r3, #8
 800345a:	220f      	movs	r2, #15
 800345c:	401a      	ands	r2, r3
 800345e:	4b0e      	ldr	r3, [pc, #56]	; (8003498 <HAL_RCC_ClockConfig+0x204>)
 8003460:	0092      	lsls	r2, r2, #2
 8003462:	58d3      	ldr	r3, [r2, r3]
 8003464:	221f      	movs	r2, #31
 8003466:	4013      	ands	r3, r2
 8003468:	000a      	movs	r2, r1
 800346a:	40da      	lsrs	r2, r3
 800346c:	4b0b      	ldr	r3, [pc, #44]	; (800349c <HAL_RCC_ClockConfig+0x208>)
 800346e:	601a      	str	r2, [r3, #0]
 8003470:	4b0b      	ldr	r3, [pc, #44]	; (80034a0 <HAL_RCC_ClockConfig+0x20c>)
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	0018      	movs	r0, r3
 8003476:	f7fe fe33 	bl	80020e0 <HAL_InitTick>
 800347a:	0003      	movs	r3, r0
 800347c:	0018      	movs	r0, r3
 800347e:	46bd      	mov	sp, r7
 8003480:	b004      	add	sp, #16
 8003482:	bd80      	pop	{r7, pc}
 8003484:	40022000 	.word	0x40022000
 8003488:	00001388 	.word	0x00001388
 800348c:	40021000 	.word	0x40021000
 8003490:	fffff0ff 	.word	0xfffff0ff
 8003494:	ffff8fff 	.word	0xffff8fff
 8003498:	08005fb8 	.word	0x08005fb8
 800349c:	20000008 	.word	0x20000008
 80034a0:	20000000 	.word	0x20000000

080034a4 <HAL_RCC_GetSysClockFreq>:
 80034a4:	b580      	push	{r7, lr}
 80034a6:	b086      	sub	sp, #24
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	4b3c      	ldr	r3, [pc, #240]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034ac:	689b      	ldr	r3, [r3, #8]
 80034ae:	2238      	movs	r2, #56	; 0x38
 80034b0:	4013      	ands	r3, r2
 80034b2:	d10f      	bne.n	80034d4 <HAL_RCC_GetSysClockFreq+0x30>
 80034b4:	4b39      	ldr	r3, [pc, #228]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	0adb      	lsrs	r3, r3, #11
 80034ba:	2207      	movs	r2, #7
 80034bc:	4013      	ands	r3, r2
 80034be:	2201      	movs	r2, #1
 80034c0:	409a      	lsls	r2, r3
 80034c2:	0013      	movs	r3, r2
 80034c4:	603b      	str	r3, [r7, #0]
 80034c6:	6839      	ldr	r1, [r7, #0]
 80034c8:	4835      	ldr	r0, [pc, #212]	; (80035a0 <HAL_RCC_GetSysClockFreq+0xfc>)
 80034ca:	f7fc fe1b 	bl	8000104 <__udivsi3>
 80034ce:	0003      	movs	r3, r0
 80034d0:	613b      	str	r3, [r7, #16]
 80034d2:	e05d      	b.n	8003590 <HAL_RCC_GetSysClockFreq+0xec>
 80034d4:	4b31      	ldr	r3, [pc, #196]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034d6:	689b      	ldr	r3, [r3, #8]
 80034d8:	2238      	movs	r2, #56	; 0x38
 80034da:	4013      	ands	r3, r2
 80034dc:	2b08      	cmp	r3, #8
 80034de:	d102      	bne.n	80034e6 <HAL_RCC_GetSysClockFreq+0x42>
 80034e0:	4b30      	ldr	r3, [pc, #192]	; (80035a4 <HAL_RCC_GetSysClockFreq+0x100>)
 80034e2:	613b      	str	r3, [r7, #16]
 80034e4:	e054      	b.n	8003590 <HAL_RCC_GetSysClockFreq+0xec>
 80034e6:	4b2d      	ldr	r3, [pc, #180]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034e8:	689b      	ldr	r3, [r3, #8]
 80034ea:	2238      	movs	r2, #56	; 0x38
 80034ec:	4013      	ands	r3, r2
 80034ee:	2b10      	cmp	r3, #16
 80034f0:	d138      	bne.n	8003564 <HAL_RCC_GetSysClockFreq+0xc0>
 80034f2:	4b2a      	ldr	r3, [pc, #168]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034f4:	68db      	ldr	r3, [r3, #12]
 80034f6:	2203      	movs	r2, #3
 80034f8:	4013      	ands	r3, r2
 80034fa:	60fb      	str	r3, [r7, #12]
 80034fc:	4b27      	ldr	r3, [pc, #156]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 80034fe:	68db      	ldr	r3, [r3, #12]
 8003500:	091b      	lsrs	r3, r3, #4
 8003502:	2207      	movs	r2, #7
 8003504:	4013      	ands	r3, r2
 8003506:	3301      	adds	r3, #1
 8003508:	60bb      	str	r3, [r7, #8]
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	2b03      	cmp	r3, #3
 800350e:	d10d      	bne.n	800352c <HAL_RCC_GetSysClockFreq+0x88>
 8003510:	68b9      	ldr	r1, [r7, #8]
 8003512:	4824      	ldr	r0, [pc, #144]	; (80035a4 <HAL_RCC_GetSysClockFreq+0x100>)
 8003514:	f7fc fdf6 	bl	8000104 <__udivsi3>
 8003518:	0003      	movs	r3, r0
 800351a:	0019      	movs	r1, r3
 800351c:	4b1f      	ldr	r3, [pc, #124]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 800351e:	68db      	ldr	r3, [r3, #12]
 8003520:	0a1b      	lsrs	r3, r3, #8
 8003522:	227f      	movs	r2, #127	; 0x7f
 8003524:	4013      	ands	r3, r2
 8003526:	434b      	muls	r3, r1
 8003528:	617b      	str	r3, [r7, #20]
 800352a:	e00d      	b.n	8003548 <HAL_RCC_GetSysClockFreq+0xa4>
 800352c:	68b9      	ldr	r1, [r7, #8]
 800352e:	481c      	ldr	r0, [pc, #112]	; (80035a0 <HAL_RCC_GetSysClockFreq+0xfc>)
 8003530:	f7fc fde8 	bl	8000104 <__udivsi3>
 8003534:	0003      	movs	r3, r0
 8003536:	0019      	movs	r1, r3
 8003538:	4b18      	ldr	r3, [pc, #96]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 800353a:	68db      	ldr	r3, [r3, #12]
 800353c:	0a1b      	lsrs	r3, r3, #8
 800353e:	227f      	movs	r2, #127	; 0x7f
 8003540:	4013      	ands	r3, r2
 8003542:	434b      	muls	r3, r1
 8003544:	617b      	str	r3, [r7, #20]
 8003546:	46c0      	nop			; (mov r8, r8)
 8003548:	4b14      	ldr	r3, [pc, #80]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 800354a:	68db      	ldr	r3, [r3, #12]
 800354c:	0f5b      	lsrs	r3, r3, #29
 800354e:	2207      	movs	r2, #7
 8003550:	4013      	ands	r3, r2
 8003552:	3301      	adds	r3, #1
 8003554:	607b      	str	r3, [r7, #4]
 8003556:	6879      	ldr	r1, [r7, #4]
 8003558:	6978      	ldr	r0, [r7, #20]
 800355a:	f7fc fdd3 	bl	8000104 <__udivsi3>
 800355e:	0003      	movs	r3, r0
 8003560:	613b      	str	r3, [r7, #16]
 8003562:	e015      	b.n	8003590 <HAL_RCC_GetSysClockFreq+0xec>
 8003564:	4b0d      	ldr	r3, [pc, #52]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 8003566:	689b      	ldr	r3, [r3, #8]
 8003568:	2238      	movs	r2, #56	; 0x38
 800356a:	4013      	ands	r3, r2
 800356c:	2b20      	cmp	r3, #32
 800356e:	d103      	bne.n	8003578 <HAL_RCC_GetSysClockFreq+0xd4>
 8003570:	2380      	movs	r3, #128	; 0x80
 8003572:	021b      	lsls	r3, r3, #8
 8003574:	613b      	str	r3, [r7, #16]
 8003576:	e00b      	b.n	8003590 <HAL_RCC_GetSysClockFreq+0xec>
 8003578:	4b08      	ldr	r3, [pc, #32]	; (800359c <HAL_RCC_GetSysClockFreq+0xf8>)
 800357a:	689b      	ldr	r3, [r3, #8]
 800357c:	2238      	movs	r2, #56	; 0x38
 800357e:	4013      	ands	r3, r2
 8003580:	2b18      	cmp	r3, #24
 8003582:	d103      	bne.n	800358c <HAL_RCC_GetSysClockFreq+0xe8>
 8003584:	23fa      	movs	r3, #250	; 0xfa
 8003586:	01db      	lsls	r3, r3, #7
 8003588:	613b      	str	r3, [r7, #16]
 800358a:	e001      	b.n	8003590 <HAL_RCC_GetSysClockFreq+0xec>
 800358c:	2300      	movs	r3, #0
 800358e:	613b      	str	r3, [r7, #16]
 8003590:	693b      	ldr	r3, [r7, #16]
 8003592:	0018      	movs	r0, r3
 8003594:	46bd      	mov	sp, r7
 8003596:	b006      	add	sp, #24
 8003598:	bd80      	pop	{r7, pc}
 800359a:	46c0      	nop			; (mov r8, r8)
 800359c:	40021000 	.word	0x40021000
 80035a0:	00f42400 	.word	0x00f42400
 80035a4:	007a1200 	.word	0x007a1200

080035a8 <HAL_SPI_Init>:
 80035a8:	b580      	push	{r7, lr}
 80035aa:	b084      	sub	sp, #16
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	6078      	str	r0, [r7, #4]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	2b00      	cmp	r3, #0
 80035b4:	d101      	bne.n	80035ba <HAL_SPI_Init+0x12>
 80035b6:	2301      	movs	r3, #1
 80035b8:	e0a8      	b.n	800370c <HAL_SPI_Init+0x164>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d109      	bne.n	80035d6 <HAL_SPI_Init+0x2e>
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	685a      	ldr	r2, [r3, #4]
 80035c6:	2382      	movs	r3, #130	; 0x82
 80035c8:	005b      	lsls	r3, r3, #1
 80035ca:	429a      	cmp	r2, r3
 80035cc:	d009      	beq.n	80035e2 <HAL_SPI_Init+0x3a>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	2200      	movs	r2, #0
 80035d2:	61da      	str	r2, [r3, #28]
 80035d4:	e005      	b.n	80035e2 <HAL_SPI_Init+0x3a>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	2200      	movs	r2, #0
 80035da:	611a      	str	r2, [r3, #16]
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	2200      	movs	r2, #0
 80035e0:	615a      	str	r2, [r3, #20]
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	2200      	movs	r2, #0
 80035e6:	629a      	str	r2, [r3, #40]	; 0x28
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	225d      	movs	r2, #93	; 0x5d
 80035ec:	5c9b      	ldrb	r3, [r3, r2]
 80035ee:	b2db      	uxtb	r3, r3
 80035f0:	2b00      	cmp	r3, #0
 80035f2:	d107      	bne.n	8003604 <HAL_SPI_Init+0x5c>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	225c      	movs	r2, #92	; 0x5c
 80035f8:	2100      	movs	r1, #0
 80035fa:	5499      	strb	r1, [r3, r2]
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	0018      	movs	r0, r3
 8003600:	f001 f9a4 	bl	800494c <HAL_SPI_MspInit>
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	225d      	movs	r2, #93	; 0x5d
 8003608:	2102      	movs	r1, #2
 800360a:	5499      	strb	r1, [r3, r2]
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	681a      	ldr	r2, [r3, #0]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	2140      	movs	r1, #64	; 0x40
 8003618:	438a      	bics	r2, r1
 800361a:	601a      	str	r2, [r3, #0]
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	68da      	ldr	r2, [r3, #12]
 8003620:	23e0      	movs	r3, #224	; 0xe0
 8003622:	00db      	lsls	r3, r3, #3
 8003624:	429a      	cmp	r2, r3
 8003626:	d902      	bls.n	800362e <HAL_SPI_Init+0x86>
 8003628:	2300      	movs	r3, #0
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	e002      	b.n	8003634 <HAL_SPI_Init+0x8c>
 800362e:	2380      	movs	r3, #128	; 0x80
 8003630:	015b      	lsls	r3, r3, #5
 8003632:	60fb      	str	r3, [r7, #12]
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	68da      	ldr	r2, [r3, #12]
 8003638:	23f0      	movs	r3, #240	; 0xf0
 800363a:	011b      	lsls	r3, r3, #4
 800363c:	429a      	cmp	r2, r3
 800363e:	d008      	beq.n	8003652 <HAL_SPI_Init+0xaa>
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	68da      	ldr	r2, [r3, #12]
 8003644:	23e0      	movs	r3, #224	; 0xe0
 8003646:	00db      	lsls	r3, r3, #3
 8003648:	429a      	cmp	r2, r3
 800364a:	d002      	beq.n	8003652 <HAL_SPI_Init+0xaa>
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	2200      	movs	r2, #0
 8003650:	629a      	str	r2, [r3, #40]	; 0x28
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	685a      	ldr	r2, [r3, #4]
 8003656:	2382      	movs	r3, #130	; 0x82
 8003658:	005b      	lsls	r3, r3, #1
 800365a:	401a      	ands	r2, r3
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	6899      	ldr	r1, [r3, #8]
 8003660:	2384      	movs	r3, #132	; 0x84
 8003662:	021b      	lsls	r3, r3, #8
 8003664:	400b      	ands	r3, r1
 8003666:	431a      	orrs	r2, r3
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	691b      	ldr	r3, [r3, #16]
 800366c:	2102      	movs	r1, #2
 800366e:	400b      	ands	r3, r1
 8003670:	431a      	orrs	r2, r3
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	695b      	ldr	r3, [r3, #20]
 8003676:	2101      	movs	r1, #1
 8003678:	400b      	ands	r3, r1
 800367a:	431a      	orrs	r2, r3
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	6999      	ldr	r1, [r3, #24]
 8003680:	2380      	movs	r3, #128	; 0x80
 8003682:	009b      	lsls	r3, r3, #2
 8003684:	400b      	ands	r3, r1
 8003686:	431a      	orrs	r2, r3
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	69db      	ldr	r3, [r3, #28]
 800368c:	2138      	movs	r1, #56	; 0x38
 800368e:	400b      	ands	r3, r1
 8003690:	431a      	orrs	r2, r3
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	6a1b      	ldr	r3, [r3, #32]
 8003696:	2180      	movs	r1, #128	; 0x80
 8003698:	400b      	ands	r3, r1
 800369a:	431a      	orrs	r2, r3
 800369c:	0011      	movs	r1, r2
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80036a2:	2380      	movs	r3, #128	; 0x80
 80036a4:	019b      	lsls	r3, r3, #6
 80036a6:	401a      	ands	r2, r3
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	430a      	orrs	r2, r1
 80036ae:	601a      	str	r2, [r3, #0]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	699b      	ldr	r3, [r3, #24]
 80036b4:	0c1b      	lsrs	r3, r3, #16
 80036b6:	2204      	movs	r2, #4
 80036b8:	401a      	ands	r2, r3
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036be:	2110      	movs	r1, #16
 80036c0:	400b      	ands	r3, r1
 80036c2:	431a      	orrs	r2, r3
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80036c8:	2108      	movs	r1, #8
 80036ca:	400b      	ands	r3, r1
 80036cc:	431a      	orrs	r2, r3
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	68d9      	ldr	r1, [r3, #12]
 80036d2:	23f0      	movs	r3, #240	; 0xf0
 80036d4:	011b      	lsls	r3, r3, #4
 80036d6:	400b      	ands	r3, r1
 80036d8:	431a      	orrs	r2, r3
 80036da:	0011      	movs	r1, r2
 80036dc:	68fa      	ldr	r2, [r7, #12]
 80036de:	2380      	movs	r3, #128	; 0x80
 80036e0:	015b      	lsls	r3, r3, #5
 80036e2:	401a      	ands	r2, r3
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	430a      	orrs	r2, r1
 80036ea:	605a      	str	r2, [r3, #4]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	69da      	ldr	r2, [r3, #28]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	4907      	ldr	r1, [pc, #28]	; (8003714 <HAL_SPI_Init+0x16c>)
 80036f8:	400a      	ands	r2, r1
 80036fa:	61da      	str	r2, [r3, #28]
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	2200      	movs	r2, #0
 8003700:	661a      	str	r2, [r3, #96]	; 0x60
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	225d      	movs	r2, #93	; 0x5d
 8003706:	2101      	movs	r1, #1
 8003708:	5499      	strb	r1, [r3, r2]
 800370a:	2300      	movs	r3, #0
 800370c:	0018      	movs	r0, r3
 800370e:	46bd      	mov	sp, r7
 8003710:	b004      	add	sp, #16
 8003712:	bd80      	pop	{r7, pc}
 8003714:	fffff7ff 	.word	0xfffff7ff

08003718 <HAL_SPI_Transmit_DMA>:
 8003718:	b580      	push	{r7, lr}
 800371a:	b086      	sub	sp, #24
 800371c:	af00      	add	r7, sp, #0
 800371e:	60f8      	str	r0, [r7, #12]
 8003720:	60b9      	str	r1, [r7, #8]
 8003722:	1dbb      	adds	r3, r7, #6
 8003724:	801a      	strh	r2, [r3, #0]
 8003726:	2317      	movs	r3, #23
 8003728:	18fb      	adds	r3, r7, r3
 800372a:	2200      	movs	r2, #0
 800372c:	701a      	strb	r2, [r3, #0]
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	225c      	movs	r2, #92	; 0x5c
 8003732:	5c9b      	ldrb	r3, [r3, r2]
 8003734:	2b01      	cmp	r3, #1
 8003736:	d101      	bne.n	800373c <HAL_SPI_Transmit_DMA+0x24>
 8003738:	2302      	movs	r3, #2
 800373a:	e0e3      	b.n	8003904 <HAL_SPI_Transmit_DMA+0x1ec>
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	225c      	movs	r2, #92	; 0x5c
 8003740:	2101      	movs	r1, #1
 8003742:	5499      	strb	r1, [r3, r2]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	225d      	movs	r2, #93	; 0x5d
 8003748:	5c9b      	ldrb	r3, [r3, r2]
 800374a:	b2db      	uxtb	r3, r3
 800374c:	2b01      	cmp	r3, #1
 800374e:	d004      	beq.n	800375a <HAL_SPI_Transmit_DMA+0x42>
 8003750:	2317      	movs	r3, #23
 8003752:	18fb      	adds	r3, r7, r3
 8003754:	2202      	movs	r2, #2
 8003756:	701a      	strb	r2, [r3, #0]
 8003758:	e0cd      	b.n	80038f6 <HAL_SPI_Transmit_DMA+0x1de>
 800375a:	68bb      	ldr	r3, [r7, #8]
 800375c:	2b00      	cmp	r3, #0
 800375e:	d003      	beq.n	8003768 <HAL_SPI_Transmit_DMA+0x50>
 8003760:	1dbb      	adds	r3, r7, #6
 8003762:	881b      	ldrh	r3, [r3, #0]
 8003764:	2b00      	cmp	r3, #0
 8003766:	d104      	bne.n	8003772 <HAL_SPI_Transmit_DMA+0x5a>
 8003768:	2317      	movs	r3, #23
 800376a:	18fb      	adds	r3, r7, r3
 800376c:	2201      	movs	r2, #1
 800376e:	701a      	strb	r2, [r3, #0]
 8003770:	e0c1      	b.n	80038f6 <HAL_SPI_Transmit_DMA+0x1de>
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	225d      	movs	r2, #93	; 0x5d
 8003776:	2103      	movs	r1, #3
 8003778:	5499      	strb	r1, [r3, r2]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	2200      	movs	r2, #0
 800377e:	661a      	str	r2, [r3, #96]	; 0x60
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	68ba      	ldr	r2, [r7, #8]
 8003784:	639a      	str	r2, [r3, #56]	; 0x38
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	1dba      	adds	r2, r7, #6
 800378a:	8812      	ldrh	r2, [r2, #0]
 800378c:	879a      	strh	r2, [r3, #60]	; 0x3c
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	1dba      	adds	r2, r7, #6
 8003792:	8812      	ldrh	r2, [r2, #0]
 8003794:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	2200      	movs	r2, #0
 800379a:	641a      	str	r2, [r3, #64]	; 0x40
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	2200      	movs	r2, #0
 80037a0:	651a      	str	r2, [r3, #80]	; 0x50
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	2200      	movs	r2, #0
 80037a6:	64da      	str	r2, [r3, #76]	; 0x4c
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	2244      	movs	r2, #68	; 0x44
 80037ac:	2100      	movs	r1, #0
 80037ae:	5299      	strh	r1, [r3, r2]
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	2246      	movs	r2, #70	; 0x46
 80037b4:	2100      	movs	r1, #0
 80037b6:	5299      	strh	r1, [r3, r2]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	689a      	ldr	r2, [r3, #8]
 80037bc:	2380      	movs	r3, #128	; 0x80
 80037be:	021b      	lsls	r3, r3, #8
 80037c0:	429a      	cmp	r2, r3
 80037c2:	d110      	bne.n	80037e6 <HAL_SPI_Transmit_DMA+0xce>
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	681a      	ldr	r2, [r3, #0]
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	2140      	movs	r1, #64	; 0x40
 80037d0:	438a      	bics	r2, r1
 80037d2:	601a      	str	r2, [r3, #0]
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	681a      	ldr	r2, [r3, #0]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	2180      	movs	r1, #128	; 0x80
 80037e0:	01c9      	lsls	r1, r1, #7
 80037e2:	430a      	orrs	r2, r1
 80037e4:	601a      	str	r2, [r3, #0]
 80037e6:	68fb      	ldr	r3, [r7, #12]
 80037e8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80037ea:	4a48      	ldr	r2, [pc, #288]	; (800390c <HAL_SPI_Transmit_DMA+0x1f4>)
 80037ec:	631a      	str	r2, [r3, #48]	; 0x30
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80037f2:	4a47      	ldr	r2, [pc, #284]	; (8003910 <HAL_SPI_Transmit_DMA+0x1f8>)
 80037f4:	62da      	str	r2, [r3, #44]	; 0x2c
 80037f6:	68fb      	ldr	r3, [r7, #12]
 80037f8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80037fa:	4a46      	ldr	r2, [pc, #280]	; (8003914 <HAL_SPI_Transmit_DMA+0x1fc>)
 80037fc:	635a      	str	r2, [r3, #52]	; 0x34
 80037fe:	68fb      	ldr	r3, [r7, #12]
 8003800:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003802:	2200      	movs	r2, #0
 8003804:	639a      	str	r2, [r3, #56]	; 0x38
 8003806:	68fb      	ldr	r3, [r7, #12]
 8003808:	681b      	ldr	r3, [r3, #0]
 800380a:	685a      	ldr	r2, [r3, #4]
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	4941      	ldr	r1, [pc, #260]	; (8003918 <HAL_SPI_Transmit_DMA+0x200>)
 8003812:	400a      	ands	r2, r1
 8003814:	605a      	str	r2, [r3, #4]
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	68da      	ldr	r2, [r3, #12]
 800381a:	23e0      	movs	r3, #224	; 0xe0
 800381c:	00db      	lsls	r3, r3, #3
 800381e:	429a      	cmp	r2, r3
 8003820:	d82f      	bhi.n	8003882 <HAL_SPI_Transmit_DMA+0x16a>
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003826:	699a      	ldr	r2, [r3, #24]
 8003828:	2380      	movs	r3, #128	; 0x80
 800382a:	00db      	lsls	r3, r3, #3
 800382c:	429a      	cmp	r2, r3
 800382e:	d128      	bne.n	8003882 <HAL_SPI_Transmit_DMA+0x16a>
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003834:	b29b      	uxth	r3, r3
 8003836:	001a      	movs	r2, r3
 8003838:	2301      	movs	r3, #1
 800383a:	4013      	ands	r3, r2
 800383c:	d10f      	bne.n	800385e <HAL_SPI_Transmit_DMA+0x146>
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	685a      	ldr	r2, [r3, #4]
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	4933      	ldr	r1, [pc, #204]	; (8003918 <HAL_SPI_Transmit_DMA+0x200>)
 800384a:	400a      	ands	r2, r1
 800384c:	605a      	str	r2, [r3, #4]
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003852:	b29b      	uxth	r3, r3
 8003854:	085b      	lsrs	r3, r3, #1
 8003856:	b29a      	uxth	r2, r3
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800385c:	e011      	b.n	8003882 <HAL_SPI_Transmit_DMA+0x16a>
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	685a      	ldr	r2, [r3, #4]
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	2180      	movs	r1, #128	; 0x80
 800386a:	01c9      	lsls	r1, r1, #7
 800386c:	430a      	orrs	r2, r1
 800386e:	605a      	str	r2, [r3, #4]
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003874:	b29b      	uxth	r3, r3
 8003876:	085b      	lsrs	r3, r3, #1
 8003878:	b29b      	uxth	r3, r3
 800387a:	3301      	adds	r3, #1
 800387c:	b29a      	uxth	r2, r3
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800388a:	0019      	movs	r1, r3
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	330c      	adds	r3, #12
 8003892:	001a      	movs	r2, r3
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003898:	b29b      	uxth	r3, r3
 800389a:	f7fe fe05 	bl	80024a8 <HAL_DMA_Start_IT>
 800389e:	1e03      	subs	r3, r0, #0
 80038a0:	d00a      	beq.n	80038b8 <HAL_SPI_Transmit_DMA+0x1a0>
 80038a2:	68fb      	ldr	r3, [r7, #12]
 80038a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80038a6:	2210      	movs	r2, #16
 80038a8:	431a      	orrs	r2, r3
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	661a      	str	r2, [r3, #96]	; 0x60
 80038ae:	2317      	movs	r3, #23
 80038b0:	18fb      	adds	r3, r7, r3
 80038b2:	2201      	movs	r2, #1
 80038b4:	701a      	strb	r2, [r3, #0]
 80038b6:	e01e      	b.n	80038f6 <HAL_SPI_Transmit_DMA+0x1de>
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	2240      	movs	r2, #64	; 0x40
 80038c0:	4013      	ands	r3, r2
 80038c2:	2b40      	cmp	r3, #64	; 0x40
 80038c4:	d007      	beq.n	80038d6 <HAL_SPI_Transmit_DMA+0x1be>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	681a      	ldr	r2, [r3, #0]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	2140      	movs	r1, #64	; 0x40
 80038d2:	430a      	orrs	r2, r1
 80038d4:	601a      	str	r2, [r3, #0]
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	685a      	ldr	r2, [r3, #4]
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	2120      	movs	r1, #32
 80038e2:	430a      	orrs	r2, r1
 80038e4:	605a      	str	r2, [r3, #4]
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	685a      	ldr	r2, [r3, #4]
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	2102      	movs	r1, #2
 80038f2:	430a      	orrs	r2, r1
 80038f4:	605a      	str	r2, [r3, #4]
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	225c      	movs	r2, #92	; 0x5c
 80038fa:	2100      	movs	r1, #0
 80038fc:	5499      	strb	r1, [r3, r2]
 80038fe:	2317      	movs	r3, #23
 8003900:	18fb      	adds	r3, r7, r3
 8003902:	781b      	ldrb	r3, [r3, #0]
 8003904:	0018      	movs	r0, r3
 8003906:	46bd      	mov	sp, r7
 8003908:	b006      	add	sp, #24
 800390a:	bd80      	pop	{r7, pc}
 800390c:	080039f9 	.word	0x080039f9
 8003910:	0800394d 	.word	0x0800394d
 8003914:	08003a17 	.word	0x08003a17
 8003918:	ffffbfff 	.word	0xffffbfff

0800391c <HAL_SPI_TxCpltCallback>:
 800391c:	b580      	push	{r7, lr}
 800391e:	b082      	sub	sp, #8
 8003920:	af00      	add	r7, sp, #0
 8003922:	6078      	str	r0, [r7, #4]
 8003924:	46c0      	nop			; (mov r8, r8)
 8003926:	46bd      	mov	sp, r7
 8003928:	b002      	add	sp, #8
 800392a:	bd80      	pop	{r7, pc}

0800392c <HAL_SPI_TxHalfCpltCallback>:
 800392c:	b580      	push	{r7, lr}
 800392e:	b082      	sub	sp, #8
 8003930:	af00      	add	r7, sp, #0
 8003932:	6078      	str	r0, [r7, #4]
 8003934:	46c0      	nop			; (mov r8, r8)
 8003936:	46bd      	mov	sp, r7
 8003938:	b002      	add	sp, #8
 800393a:	bd80      	pop	{r7, pc}

0800393c <HAL_SPI_ErrorCallback>:
 800393c:	b580      	push	{r7, lr}
 800393e:	b082      	sub	sp, #8
 8003940:	af00      	add	r7, sp, #0
 8003942:	6078      	str	r0, [r7, #4]
 8003944:	46c0      	nop			; (mov r8, r8)
 8003946:	46bd      	mov	sp, r7
 8003948:	b002      	add	sp, #8
 800394a:	bd80      	pop	{r7, pc}

0800394c <SPI_DMATransmitCplt>:
 800394c:	b580      	push	{r7, lr}
 800394e:	b086      	sub	sp, #24
 8003950:	af00      	add	r7, sp, #0
 8003952:	6078      	str	r0, [r7, #4]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003958:	617b      	str	r3, [r7, #20]
 800395a:	f7fe fc1d 	bl	8002198 <HAL_GetTick>
 800395e:	0003      	movs	r3, r0
 8003960:	613b      	str	r3, [r7, #16]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	2220      	movs	r2, #32
 800396a:	4013      	ands	r3, r2
 800396c:	2b20      	cmp	r3, #32
 800396e:	d03c      	beq.n	80039ea <SPI_DMATransmitCplt+0x9e>
 8003970:	697b      	ldr	r3, [r7, #20]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	685a      	ldr	r2, [r3, #4]
 8003976:	697b      	ldr	r3, [r7, #20]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	2120      	movs	r1, #32
 800397c:	438a      	bics	r2, r1
 800397e:	605a      	str	r2, [r3, #4]
 8003980:	697b      	ldr	r3, [r7, #20]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	685a      	ldr	r2, [r3, #4]
 8003986:	697b      	ldr	r3, [r7, #20]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	2102      	movs	r1, #2
 800398c:	438a      	bics	r2, r1
 800398e:	605a      	str	r2, [r3, #4]
 8003990:	693a      	ldr	r2, [r7, #16]
 8003992:	697b      	ldr	r3, [r7, #20]
 8003994:	2164      	movs	r1, #100	; 0x64
 8003996:	0018      	movs	r0, r3
 8003998:	f000 f98e 	bl	8003cb8 <SPI_EndRxTxTransaction>
 800399c:	1e03      	subs	r3, r0, #0
 800399e:	d005      	beq.n	80039ac <SPI_DMATransmitCplt+0x60>
 80039a0:	697b      	ldr	r3, [r7, #20]
 80039a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80039a4:	2220      	movs	r2, #32
 80039a6:	431a      	orrs	r2, r3
 80039a8:	697b      	ldr	r3, [r7, #20]
 80039aa:	661a      	str	r2, [r3, #96]	; 0x60
 80039ac:	697b      	ldr	r3, [r7, #20]
 80039ae:	689b      	ldr	r3, [r3, #8]
 80039b0:	2b00      	cmp	r3, #0
 80039b2:	d10a      	bne.n	80039ca <SPI_DMATransmitCplt+0x7e>
 80039b4:	2300      	movs	r3, #0
 80039b6:	60fb      	str	r3, [r7, #12]
 80039b8:	697b      	ldr	r3, [r7, #20]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	68db      	ldr	r3, [r3, #12]
 80039be:	60fb      	str	r3, [r7, #12]
 80039c0:	697b      	ldr	r3, [r7, #20]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	689b      	ldr	r3, [r3, #8]
 80039c6:	60fb      	str	r3, [r7, #12]
 80039c8:	68fb      	ldr	r3, [r7, #12]
 80039ca:	697b      	ldr	r3, [r7, #20]
 80039cc:	2200      	movs	r2, #0
 80039ce:	87da      	strh	r2, [r3, #62]	; 0x3e
 80039d0:	697b      	ldr	r3, [r7, #20]
 80039d2:	225d      	movs	r2, #93	; 0x5d
 80039d4:	2101      	movs	r1, #1
 80039d6:	5499      	strb	r1, [r3, r2]
 80039d8:	697b      	ldr	r3, [r7, #20]
 80039da:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d004      	beq.n	80039ea <SPI_DMATransmitCplt+0x9e>
 80039e0:	697b      	ldr	r3, [r7, #20]
 80039e2:	0018      	movs	r0, r3
 80039e4:	f7ff ffaa 	bl	800393c <HAL_SPI_ErrorCallback>
 80039e8:	e003      	b.n	80039f2 <SPI_DMATransmitCplt+0xa6>
 80039ea:	697b      	ldr	r3, [r7, #20]
 80039ec:	0018      	movs	r0, r3
 80039ee:	f7ff ff95 	bl	800391c <HAL_SPI_TxCpltCallback>
 80039f2:	46bd      	mov	sp, r7
 80039f4:	b006      	add	sp, #24
 80039f6:	bd80      	pop	{r7, pc}

080039f8 <SPI_DMAHalfTransmitCplt>:
 80039f8:	b580      	push	{r7, lr}
 80039fa:	b084      	sub	sp, #16
 80039fc:	af00      	add	r7, sp, #0
 80039fe:	6078      	str	r0, [r7, #4]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a04:	60fb      	str	r3, [r7, #12]
 8003a06:	68fb      	ldr	r3, [r7, #12]
 8003a08:	0018      	movs	r0, r3
 8003a0a:	f7ff ff8f 	bl	800392c <HAL_SPI_TxHalfCpltCallback>
 8003a0e:	46c0      	nop			; (mov r8, r8)
 8003a10:	46bd      	mov	sp, r7
 8003a12:	b004      	add	sp, #16
 8003a14:	bd80      	pop	{r7, pc}

08003a16 <SPI_DMAError>:
 8003a16:	b580      	push	{r7, lr}
 8003a18:	b084      	sub	sp, #16
 8003a1a:	af00      	add	r7, sp, #0
 8003a1c:	6078      	str	r0, [r7, #4]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a22:	60fb      	str	r3, [r7, #12]
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	685a      	ldr	r2, [r3, #4]
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	2103      	movs	r1, #3
 8003a30:	438a      	bics	r2, r1
 8003a32:	605a      	str	r2, [r3, #4]
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003a38:	2210      	movs	r2, #16
 8003a3a:	431a      	orrs	r2, r3
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	661a      	str	r2, [r3, #96]	; 0x60
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	225d      	movs	r2, #93	; 0x5d
 8003a44:	2101      	movs	r1, #1
 8003a46:	5499      	strb	r1, [r3, r2]
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	0018      	movs	r0, r3
 8003a4c:	f7ff ff76 	bl	800393c <HAL_SPI_ErrorCallback>
 8003a50:	46c0      	nop			; (mov r8, r8)
 8003a52:	46bd      	mov	sp, r7
 8003a54:	b004      	add	sp, #16
 8003a56:	bd80      	pop	{r7, pc}

08003a58 <SPI_WaitFlagStateUntilTimeout>:
 8003a58:	b580      	push	{r7, lr}
 8003a5a:	b088      	sub	sp, #32
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	60f8      	str	r0, [r7, #12]
 8003a60:	60b9      	str	r1, [r7, #8]
 8003a62:	603b      	str	r3, [r7, #0]
 8003a64:	1dfb      	adds	r3, r7, #7
 8003a66:	701a      	strb	r2, [r3, #0]
 8003a68:	f7fe fb96 	bl	8002198 <HAL_GetTick>
 8003a6c:	0002      	movs	r2, r0
 8003a6e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003a70:	1a9b      	subs	r3, r3, r2
 8003a72:	683a      	ldr	r2, [r7, #0]
 8003a74:	18d3      	adds	r3, r2, r3
 8003a76:	61fb      	str	r3, [r7, #28]
 8003a78:	f7fe fb8e 	bl	8002198 <HAL_GetTick>
 8003a7c:	0003      	movs	r3, r0
 8003a7e:	61bb      	str	r3, [r7, #24]
 8003a80:	4b3a      	ldr	r3, [pc, #232]	; (8003b6c <SPI_WaitFlagStateUntilTimeout+0x114>)
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	015b      	lsls	r3, r3, #5
 8003a86:	0d1b      	lsrs	r3, r3, #20
 8003a88:	69fa      	ldr	r2, [r7, #28]
 8003a8a:	4353      	muls	r3, r2
 8003a8c:	617b      	str	r3, [r7, #20]
 8003a8e:	e058      	b.n	8003b42 <SPI_WaitFlagStateUntilTimeout+0xea>
 8003a90:	683b      	ldr	r3, [r7, #0]
 8003a92:	3301      	adds	r3, #1
 8003a94:	d055      	beq.n	8003b42 <SPI_WaitFlagStateUntilTimeout+0xea>
 8003a96:	f7fe fb7f 	bl	8002198 <HAL_GetTick>
 8003a9a:	0002      	movs	r2, r0
 8003a9c:	69bb      	ldr	r3, [r7, #24]
 8003a9e:	1ad3      	subs	r3, r2, r3
 8003aa0:	69fa      	ldr	r2, [r7, #28]
 8003aa2:	429a      	cmp	r2, r3
 8003aa4:	d902      	bls.n	8003aac <SPI_WaitFlagStateUntilTimeout+0x54>
 8003aa6:	69fb      	ldr	r3, [r7, #28]
 8003aa8:	2b00      	cmp	r3, #0
 8003aaa:	d142      	bne.n	8003b32 <SPI_WaitFlagStateUntilTimeout+0xda>
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	685a      	ldr	r2, [r3, #4]
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	21e0      	movs	r1, #224	; 0xe0
 8003ab8:	438a      	bics	r2, r1
 8003aba:	605a      	str	r2, [r3, #4]
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	685a      	ldr	r2, [r3, #4]
 8003ac0:	2382      	movs	r3, #130	; 0x82
 8003ac2:	005b      	lsls	r3, r3, #1
 8003ac4:	429a      	cmp	r2, r3
 8003ac6:	d113      	bne.n	8003af0 <SPI_WaitFlagStateUntilTimeout+0x98>
 8003ac8:	68fb      	ldr	r3, [r7, #12]
 8003aca:	689a      	ldr	r2, [r3, #8]
 8003acc:	2380      	movs	r3, #128	; 0x80
 8003ace:	021b      	lsls	r3, r3, #8
 8003ad0:	429a      	cmp	r2, r3
 8003ad2:	d005      	beq.n	8003ae0 <SPI_WaitFlagStateUntilTimeout+0x88>
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	689a      	ldr	r2, [r3, #8]
 8003ad8:	2380      	movs	r3, #128	; 0x80
 8003ada:	00db      	lsls	r3, r3, #3
 8003adc:	429a      	cmp	r2, r3
 8003ade:	d107      	bne.n	8003af0 <SPI_WaitFlagStateUntilTimeout+0x98>
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	681a      	ldr	r2, [r3, #0]
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	2140      	movs	r1, #64	; 0x40
 8003aec:	438a      	bics	r2, r1
 8003aee:	601a      	str	r2, [r3, #0]
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003af4:	2380      	movs	r3, #128	; 0x80
 8003af6:	019b      	lsls	r3, r3, #6
 8003af8:	429a      	cmp	r2, r3
 8003afa:	d110      	bne.n	8003b1e <SPI_WaitFlagStateUntilTimeout+0xc6>
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	681a      	ldr	r2, [r3, #0]
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	491a      	ldr	r1, [pc, #104]	; (8003b70 <SPI_WaitFlagStateUntilTimeout+0x118>)
 8003b08:	400a      	ands	r2, r1
 8003b0a:	601a      	str	r2, [r3, #0]
 8003b0c:	68fb      	ldr	r3, [r7, #12]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	681a      	ldr	r2, [r3, #0]
 8003b12:	68fb      	ldr	r3, [r7, #12]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	2180      	movs	r1, #128	; 0x80
 8003b18:	0189      	lsls	r1, r1, #6
 8003b1a:	430a      	orrs	r2, r1
 8003b1c:	601a      	str	r2, [r3, #0]
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	225d      	movs	r2, #93	; 0x5d
 8003b22:	2101      	movs	r1, #1
 8003b24:	5499      	strb	r1, [r3, r2]
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	225c      	movs	r2, #92	; 0x5c
 8003b2a:	2100      	movs	r1, #0
 8003b2c:	5499      	strb	r1, [r3, r2]
 8003b2e:	2303      	movs	r3, #3
 8003b30:	e017      	b.n	8003b62 <SPI_WaitFlagStateUntilTimeout+0x10a>
 8003b32:	697b      	ldr	r3, [r7, #20]
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d101      	bne.n	8003b3c <SPI_WaitFlagStateUntilTimeout+0xe4>
 8003b38:	2300      	movs	r3, #0
 8003b3a:	61fb      	str	r3, [r7, #28]
 8003b3c:	697b      	ldr	r3, [r7, #20]
 8003b3e:	3b01      	subs	r3, #1
 8003b40:	617b      	str	r3, [r7, #20]
 8003b42:	68fb      	ldr	r3, [r7, #12]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	689b      	ldr	r3, [r3, #8]
 8003b48:	68ba      	ldr	r2, [r7, #8]
 8003b4a:	4013      	ands	r3, r2
 8003b4c:	68ba      	ldr	r2, [r7, #8]
 8003b4e:	1ad3      	subs	r3, r2, r3
 8003b50:	425a      	negs	r2, r3
 8003b52:	4153      	adcs	r3, r2
 8003b54:	b2db      	uxtb	r3, r3
 8003b56:	001a      	movs	r2, r3
 8003b58:	1dfb      	adds	r3, r7, #7
 8003b5a:	781b      	ldrb	r3, [r3, #0]
 8003b5c:	429a      	cmp	r2, r3
 8003b5e:	d197      	bne.n	8003a90 <SPI_WaitFlagStateUntilTimeout+0x38>
 8003b60:	2300      	movs	r3, #0
 8003b62:	0018      	movs	r0, r3
 8003b64:	46bd      	mov	sp, r7
 8003b66:	b008      	add	sp, #32
 8003b68:	bd80      	pop	{r7, pc}
 8003b6a:	46c0      	nop			; (mov r8, r8)
 8003b6c:	20000008 	.word	0x20000008
 8003b70:	ffffdfff 	.word	0xffffdfff

08003b74 <SPI_WaitFifoStateUntilTimeout>:
 8003b74:	b580      	push	{r7, lr}
 8003b76:	b08a      	sub	sp, #40	; 0x28
 8003b78:	af00      	add	r7, sp, #0
 8003b7a:	60f8      	str	r0, [r7, #12]
 8003b7c:	60b9      	str	r1, [r7, #8]
 8003b7e:	607a      	str	r2, [r7, #4]
 8003b80:	603b      	str	r3, [r7, #0]
 8003b82:	2317      	movs	r3, #23
 8003b84:	18fb      	adds	r3, r7, r3
 8003b86:	2200      	movs	r2, #0
 8003b88:	701a      	strb	r2, [r3, #0]
 8003b8a:	f7fe fb05 	bl	8002198 <HAL_GetTick>
 8003b8e:	0002      	movs	r2, r0
 8003b90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003b92:	1a9b      	subs	r3, r3, r2
 8003b94:	683a      	ldr	r2, [r7, #0]
 8003b96:	18d3      	adds	r3, r2, r3
 8003b98:	627b      	str	r3, [r7, #36]	; 0x24
 8003b9a:	f7fe fafd 	bl	8002198 <HAL_GetTick>
 8003b9e:	0003      	movs	r3, r0
 8003ba0:	623b      	str	r3, [r7, #32]
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	330c      	adds	r3, #12
 8003ba8:	61fb      	str	r3, [r7, #28]
 8003baa:	4b41      	ldr	r3, [pc, #260]	; (8003cb0 <SPI_WaitFifoStateUntilTimeout+0x13c>)
 8003bac:	681a      	ldr	r2, [r3, #0]
 8003bae:	0013      	movs	r3, r2
 8003bb0:	009b      	lsls	r3, r3, #2
 8003bb2:	189b      	adds	r3, r3, r2
 8003bb4:	00da      	lsls	r2, r3, #3
 8003bb6:	1ad3      	subs	r3, r2, r3
 8003bb8:	0d1b      	lsrs	r3, r3, #20
 8003bba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003bbc:	4353      	muls	r3, r2
 8003bbe:	61bb      	str	r3, [r7, #24]
 8003bc0:	e068      	b.n	8003c94 <SPI_WaitFifoStateUntilTimeout+0x120>
 8003bc2:	68ba      	ldr	r2, [r7, #8]
 8003bc4:	23c0      	movs	r3, #192	; 0xc0
 8003bc6:	00db      	lsls	r3, r3, #3
 8003bc8:	429a      	cmp	r2, r3
 8003bca:	d10a      	bne.n	8003be2 <SPI_WaitFifoStateUntilTimeout+0x6e>
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d107      	bne.n	8003be2 <SPI_WaitFifoStateUntilTimeout+0x6e>
 8003bd2:	69fb      	ldr	r3, [r7, #28]
 8003bd4:	781b      	ldrb	r3, [r3, #0]
 8003bd6:	b2da      	uxtb	r2, r3
 8003bd8:	2117      	movs	r1, #23
 8003bda:	187b      	adds	r3, r7, r1
 8003bdc:	701a      	strb	r2, [r3, #0]
 8003bde:	187b      	adds	r3, r7, r1
 8003be0:	781b      	ldrb	r3, [r3, #0]
 8003be2:	683b      	ldr	r3, [r7, #0]
 8003be4:	3301      	adds	r3, #1
 8003be6:	d055      	beq.n	8003c94 <SPI_WaitFifoStateUntilTimeout+0x120>
 8003be8:	f7fe fad6 	bl	8002198 <HAL_GetTick>
 8003bec:	0002      	movs	r2, r0
 8003bee:	6a3b      	ldr	r3, [r7, #32]
 8003bf0:	1ad3      	subs	r3, r2, r3
 8003bf2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003bf4:	429a      	cmp	r2, r3
 8003bf6:	d902      	bls.n	8003bfe <SPI_WaitFifoStateUntilTimeout+0x8a>
 8003bf8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d142      	bne.n	8003c84 <SPI_WaitFifoStateUntilTimeout+0x110>
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	685a      	ldr	r2, [r3, #4]
 8003c04:	68fb      	ldr	r3, [r7, #12]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	21e0      	movs	r1, #224	; 0xe0
 8003c0a:	438a      	bics	r2, r1
 8003c0c:	605a      	str	r2, [r3, #4]
 8003c0e:	68fb      	ldr	r3, [r7, #12]
 8003c10:	685a      	ldr	r2, [r3, #4]
 8003c12:	2382      	movs	r3, #130	; 0x82
 8003c14:	005b      	lsls	r3, r3, #1
 8003c16:	429a      	cmp	r2, r3
 8003c18:	d113      	bne.n	8003c42 <SPI_WaitFifoStateUntilTimeout+0xce>
 8003c1a:	68fb      	ldr	r3, [r7, #12]
 8003c1c:	689a      	ldr	r2, [r3, #8]
 8003c1e:	2380      	movs	r3, #128	; 0x80
 8003c20:	021b      	lsls	r3, r3, #8
 8003c22:	429a      	cmp	r2, r3
 8003c24:	d005      	beq.n	8003c32 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8003c26:	68fb      	ldr	r3, [r7, #12]
 8003c28:	689a      	ldr	r2, [r3, #8]
 8003c2a:	2380      	movs	r3, #128	; 0x80
 8003c2c:	00db      	lsls	r3, r3, #3
 8003c2e:	429a      	cmp	r2, r3
 8003c30:	d107      	bne.n	8003c42 <SPI_WaitFifoStateUntilTimeout+0xce>
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	681a      	ldr	r2, [r3, #0]
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	2140      	movs	r1, #64	; 0x40
 8003c3e:	438a      	bics	r2, r1
 8003c40:	601a      	str	r2, [r3, #0]
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003c46:	2380      	movs	r3, #128	; 0x80
 8003c48:	019b      	lsls	r3, r3, #6
 8003c4a:	429a      	cmp	r2, r3
 8003c4c:	d110      	bne.n	8003c70 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	681a      	ldr	r2, [r3, #0]
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	4916      	ldr	r1, [pc, #88]	; (8003cb4 <SPI_WaitFifoStateUntilTimeout+0x140>)
 8003c5a:	400a      	ands	r2, r1
 8003c5c:	601a      	str	r2, [r3, #0]
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	681a      	ldr	r2, [r3, #0]
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	2180      	movs	r1, #128	; 0x80
 8003c6a:	0189      	lsls	r1, r1, #6
 8003c6c:	430a      	orrs	r2, r1
 8003c6e:	601a      	str	r2, [r3, #0]
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	225d      	movs	r2, #93	; 0x5d
 8003c74:	2101      	movs	r1, #1
 8003c76:	5499      	strb	r1, [r3, r2]
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	225c      	movs	r2, #92	; 0x5c
 8003c7c:	2100      	movs	r1, #0
 8003c7e:	5499      	strb	r1, [r3, r2]
 8003c80:	2303      	movs	r3, #3
 8003c82:	e010      	b.n	8003ca6 <SPI_WaitFifoStateUntilTimeout+0x132>
 8003c84:	69bb      	ldr	r3, [r7, #24]
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d101      	bne.n	8003c8e <SPI_WaitFifoStateUntilTimeout+0x11a>
 8003c8a:	2300      	movs	r3, #0
 8003c8c:	627b      	str	r3, [r7, #36]	; 0x24
 8003c8e:	69bb      	ldr	r3, [r7, #24]
 8003c90:	3b01      	subs	r3, #1
 8003c92:	61bb      	str	r3, [r7, #24]
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	689b      	ldr	r3, [r3, #8]
 8003c9a:	68ba      	ldr	r2, [r7, #8]
 8003c9c:	4013      	ands	r3, r2
 8003c9e:	687a      	ldr	r2, [r7, #4]
 8003ca0:	429a      	cmp	r2, r3
 8003ca2:	d18e      	bne.n	8003bc2 <SPI_WaitFifoStateUntilTimeout+0x4e>
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	0018      	movs	r0, r3
 8003ca8:	46bd      	mov	sp, r7
 8003caa:	b00a      	add	sp, #40	; 0x28
 8003cac:	bd80      	pop	{r7, pc}
 8003cae:	46c0      	nop			; (mov r8, r8)
 8003cb0:	20000008 	.word	0x20000008
 8003cb4:	ffffdfff 	.word	0xffffdfff

08003cb8 <SPI_EndRxTxTransaction>:
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	b086      	sub	sp, #24
 8003cbc:	af02      	add	r7, sp, #8
 8003cbe:	60f8      	str	r0, [r7, #12]
 8003cc0:	60b9      	str	r1, [r7, #8]
 8003cc2:	607a      	str	r2, [r7, #4]
 8003cc4:	68ba      	ldr	r2, [r7, #8]
 8003cc6:	23c0      	movs	r3, #192	; 0xc0
 8003cc8:	0159      	lsls	r1, r3, #5
 8003cca:	68f8      	ldr	r0, [r7, #12]
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	9300      	str	r3, [sp, #0]
 8003cd0:	0013      	movs	r3, r2
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	f7ff ff4e 	bl	8003b74 <SPI_WaitFifoStateUntilTimeout>
 8003cd8:	1e03      	subs	r3, r0, #0
 8003cda:	d007      	beq.n	8003cec <SPI_EndRxTxTransaction+0x34>
 8003cdc:	68fb      	ldr	r3, [r7, #12]
 8003cde:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ce0:	2220      	movs	r2, #32
 8003ce2:	431a      	orrs	r2, r3
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	661a      	str	r2, [r3, #96]	; 0x60
 8003ce8:	2303      	movs	r3, #3
 8003cea:	e027      	b.n	8003d3c <SPI_EndRxTxTransaction+0x84>
 8003cec:	68ba      	ldr	r2, [r7, #8]
 8003cee:	68f8      	ldr	r0, [r7, #12]
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	9300      	str	r3, [sp, #0]
 8003cf4:	0013      	movs	r3, r2
 8003cf6:	2200      	movs	r2, #0
 8003cf8:	2180      	movs	r1, #128	; 0x80
 8003cfa:	f7ff fead 	bl	8003a58 <SPI_WaitFlagStateUntilTimeout>
 8003cfe:	1e03      	subs	r3, r0, #0
 8003d00:	d007      	beq.n	8003d12 <SPI_EndRxTxTransaction+0x5a>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003d06:	2220      	movs	r2, #32
 8003d08:	431a      	orrs	r2, r3
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	661a      	str	r2, [r3, #96]	; 0x60
 8003d0e:	2303      	movs	r3, #3
 8003d10:	e014      	b.n	8003d3c <SPI_EndRxTxTransaction+0x84>
 8003d12:	68ba      	ldr	r2, [r7, #8]
 8003d14:	23c0      	movs	r3, #192	; 0xc0
 8003d16:	00d9      	lsls	r1, r3, #3
 8003d18:	68f8      	ldr	r0, [r7, #12]
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	9300      	str	r3, [sp, #0]
 8003d1e:	0013      	movs	r3, r2
 8003d20:	2200      	movs	r2, #0
 8003d22:	f7ff ff27 	bl	8003b74 <SPI_WaitFifoStateUntilTimeout>
 8003d26:	1e03      	subs	r3, r0, #0
 8003d28:	d007      	beq.n	8003d3a <SPI_EndRxTxTransaction+0x82>
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003d2e:	2220      	movs	r2, #32
 8003d30:	431a      	orrs	r2, r3
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	661a      	str	r2, [r3, #96]	; 0x60
 8003d36:	2303      	movs	r3, #3
 8003d38:	e000      	b.n	8003d3c <SPI_EndRxTxTransaction+0x84>
 8003d3a:	2300      	movs	r3, #0
 8003d3c:	0018      	movs	r0, r3
 8003d3e:	46bd      	mov	sp, r7
 8003d40:	b004      	add	sp, #16
 8003d42:	bd80      	pop	{r7, pc}

08003d44 <HAL_TIM_Base_Init>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	b082      	sub	sp, #8
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	6078      	str	r0, [r7, #4]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d101      	bne.n	8003d56 <HAL_TIM_Base_Init+0x12>
 8003d52:	2301      	movs	r3, #1
 8003d54:	e04a      	b.n	8003dec <HAL_TIM_Base_Init+0xa8>
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	223d      	movs	r2, #61	; 0x3d
 8003d5a:	5c9b      	ldrb	r3, [r3, r2]
 8003d5c:	b2db      	uxtb	r3, r3
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d107      	bne.n	8003d72 <HAL_TIM_Base_Init+0x2e>
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	223c      	movs	r2, #60	; 0x3c
 8003d66:	2100      	movs	r1, #0
 8003d68:	5499      	strb	r1, [r3, r2]
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	0018      	movs	r0, r3
 8003d6e:	f000 ff4d 	bl	8004c0c <HAL_TIM_Base_MspInit>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	223d      	movs	r2, #61	; 0x3d
 8003d76:	2102      	movs	r1, #2
 8003d78:	5499      	strb	r1, [r3, r2]
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	681a      	ldr	r2, [r3, #0]
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	3304      	adds	r3, #4
 8003d82:	0019      	movs	r1, r3
 8003d84:	0010      	movs	r0, r2
 8003d86:	f000 f889 	bl	8003e9c <TIM_Base_SetConfig>
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2248      	movs	r2, #72	; 0x48
 8003d8e:	2101      	movs	r1, #1
 8003d90:	5499      	strb	r1, [r3, r2]
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	223e      	movs	r2, #62	; 0x3e
 8003d96:	2101      	movs	r1, #1
 8003d98:	5499      	strb	r1, [r3, r2]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	223f      	movs	r2, #63	; 0x3f
 8003d9e:	2101      	movs	r1, #1
 8003da0:	5499      	strb	r1, [r3, r2]
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	2240      	movs	r2, #64	; 0x40
 8003da6:	2101      	movs	r1, #1
 8003da8:	5499      	strb	r1, [r3, r2]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	2241      	movs	r2, #65	; 0x41
 8003dae:	2101      	movs	r1, #1
 8003db0:	5499      	strb	r1, [r3, r2]
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	2242      	movs	r2, #66	; 0x42
 8003db6:	2101      	movs	r1, #1
 8003db8:	5499      	strb	r1, [r3, r2]
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	2243      	movs	r2, #67	; 0x43
 8003dbe:	2101      	movs	r1, #1
 8003dc0:	5499      	strb	r1, [r3, r2]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	2244      	movs	r2, #68	; 0x44
 8003dc6:	2101      	movs	r1, #1
 8003dc8:	5499      	strb	r1, [r3, r2]
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	2245      	movs	r2, #69	; 0x45
 8003dce:	2101      	movs	r1, #1
 8003dd0:	5499      	strb	r1, [r3, r2]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	2246      	movs	r2, #70	; 0x46
 8003dd6:	2101      	movs	r1, #1
 8003dd8:	5499      	strb	r1, [r3, r2]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	2247      	movs	r2, #71	; 0x47
 8003dde:	2101      	movs	r1, #1
 8003de0:	5499      	strb	r1, [r3, r2]
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	223d      	movs	r2, #61	; 0x3d
 8003de6:	2101      	movs	r1, #1
 8003de8:	5499      	strb	r1, [r3, r2]
 8003dea:	2300      	movs	r3, #0
 8003dec:	0018      	movs	r0, r3
 8003dee:	46bd      	mov	sp, r7
 8003df0:	b002      	add	sp, #8
 8003df2:	bd80      	pop	{r7, pc}

08003df4 <HAL_TIM_Base_Start>:
 8003df4:	b580      	push	{r7, lr}
 8003df6:	b084      	sub	sp, #16
 8003df8:	af00      	add	r7, sp, #0
 8003dfa:	6078      	str	r0, [r7, #4]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	223d      	movs	r2, #61	; 0x3d
 8003e00:	5c9b      	ldrb	r3, [r3, r2]
 8003e02:	b2db      	uxtb	r3, r3
 8003e04:	2b01      	cmp	r3, #1
 8003e06:	d001      	beq.n	8003e0c <HAL_TIM_Base_Start+0x18>
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e03a      	b.n	8003e82 <HAL_TIM_Base_Start+0x8e>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	223d      	movs	r2, #61	; 0x3d
 8003e10:	2102      	movs	r1, #2
 8003e12:	5499      	strb	r1, [r3, r2]
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	4a1c      	ldr	r2, [pc, #112]	; (8003e8c <HAL_TIM_Base_Start+0x98>)
 8003e1a:	4293      	cmp	r3, r2
 8003e1c:	d00f      	beq.n	8003e3e <HAL_TIM_Base_Start+0x4a>
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681a      	ldr	r2, [r3, #0]
 8003e22:	2380      	movs	r3, #128	; 0x80
 8003e24:	05db      	lsls	r3, r3, #23
 8003e26:	429a      	cmp	r2, r3
 8003e28:	d009      	beq.n	8003e3e <HAL_TIM_Base_Start+0x4a>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	4a18      	ldr	r2, [pc, #96]	; (8003e90 <HAL_TIM_Base_Start+0x9c>)
 8003e30:	4293      	cmp	r3, r2
 8003e32:	d004      	beq.n	8003e3e <HAL_TIM_Base_Start+0x4a>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4a16      	ldr	r2, [pc, #88]	; (8003e94 <HAL_TIM_Base_Start+0xa0>)
 8003e3a:	4293      	cmp	r3, r2
 8003e3c:	d116      	bne.n	8003e6c <HAL_TIM_Base_Start+0x78>
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	689b      	ldr	r3, [r3, #8]
 8003e44:	4a14      	ldr	r2, [pc, #80]	; (8003e98 <HAL_TIM_Base_Start+0xa4>)
 8003e46:	4013      	ands	r3, r2
 8003e48:	60fb      	str	r3, [r7, #12]
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	2b06      	cmp	r3, #6
 8003e4e:	d016      	beq.n	8003e7e <HAL_TIM_Base_Start+0x8a>
 8003e50:	68fa      	ldr	r2, [r7, #12]
 8003e52:	2380      	movs	r3, #128	; 0x80
 8003e54:	025b      	lsls	r3, r3, #9
 8003e56:	429a      	cmp	r2, r3
 8003e58:	d011      	beq.n	8003e7e <HAL_TIM_Base_Start+0x8a>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	681a      	ldr	r2, [r3, #0]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	2101      	movs	r1, #1
 8003e66:	430a      	orrs	r2, r1
 8003e68:	601a      	str	r2, [r3, #0]
 8003e6a:	e008      	b.n	8003e7e <HAL_TIM_Base_Start+0x8a>
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	681a      	ldr	r2, [r3, #0]
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	2101      	movs	r1, #1
 8003e78:	430a      	orrs	r2, r1
 8003e7a:	601a      	str	r2, [r3, #0]
 8003e7c:	e000      	b.n	8003e80 <HAL_TIM_Base_Start+0x8c>
 8003e7e:	46c0      	nop			; (mov r8, r8)
 8003e80:	2300      	movs	r3, #0
 8003e82:	0018      	movs	r0, r3
 8003e84:	46bd      	mov	sp, r7
 8003e86:	b004      	add	sp, #16
 8003e88:	bd80      	pop	{r7, pc}
 8003e8a:	46c0      	nop			; (mov r8, r8)
 8003e8c:	40012c00 	.word	0x40012c00
 8003e90:	40000400 	.word	0x40000400
 8003e94:	40014000 	.word	0x40014000
 8003e98:	00010007 	.word	0x00010007

08003e9c <TIM_Base_SetConfig>:
 8003e9c:	b580      	push	{r7, lr}
 8003e9e:	b084      	sub	sp, #16
 8003ea0:	af00      	add	r7, sp, #0
 8003ea2:	6078      	str	r0, [r7, #4]
 8003ea4:	6039      	str	r1, [r7, #0]
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	60fb      	str	r3, [r7, #12]
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	4a3b      	ldr	r2, [pc, #236]	; (8003f9c <TIM_Base_SetConfig+0x100>)
 8003eb0:	4293      	cmp	r3, r2
 8003eb2:	d008      	beq.n	8003ec6 <TIM_Base_SetConfig+0x2a>
 8003eb4:	687a      	ldr	r2, [r7, #4]
 8003eb6:	2380      	movs	r3, #128	; 0x80
 8003eb8:	05db      	lsls	r3, r3, #23
 8003eba:	429a      	cmp	r2, r3
 8003ebc:	d003      	beq.n	8003ec6 <TIM_Base_SetConfig+0x2a>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	4a37      	ldr	r2, [pc, #220]	; (8003fa0 <TIM_Base_SetConfig+0x104>)
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	d108      	bne.n	8003ed8 <TIM_Base_SetConfig+0x3c>
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	2270      	movs	r2, #112	; 0x70
 8003eca:	4393      	bics	r3, r2
 8003ecc:	60fb      	str	r3, [r7, #12]
 8003ece:	683b      	ldr	r3, [r7, #0]
 8003ed0:	685b      	ldr	r3, [r3, #4]
 8003ed2:	68fa      	ldr	r2, [r7, #12]
 8003ed4:	4313      	orrs	r3, r2
 8003ed6:	60fb      	str	r3, [r7, #12]
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	4a30      	ldr	r2, [pc, #192]	; (8003f9c <TIM_Base_SetConfig+0x100>)
 8003edc:	4293      	cmp	r3, r2
 8003ede:	d018      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003ee0:	687a      	ldr	r2, [r7, #4]
 8003ee2:	2380      	movs	r3, #128	; 0x80
 8003ee4:	05db      	lsls	r3, r3, #23
 8003ee6:	429a      	cmp	r2, r3
 8003ee8:	d013      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	4a2c      	ldr	r2, [pc, #176]	; (8003fa0 <TIM_Base_SetConfig+0x104>)
 8003eee:	4293      	cmp	r3, r2
 8003ef0:	d00f      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	4a2b      	ldr	r2, [pc, #172]	; (8003fa4 <TIM_Base_SetConfig+0x108>)
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	d00b      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	4a2a      	ldr	r2, [pc, #168]	; (8003fa8 <TIM_Base_SetConfig+0x10c>)
 8003efe:	4293      	cmp	r3, r2
 8003f00:	d007      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4a29      	ldr	r2, [pc, #164]	; (8003fac <TIM_Base_SetConfig+0x110>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d003      	beq.n	8003f12 <TIM_Base_SetConfig+0x76>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	4a28      	ldr	r2, [pc, #160]	; (8003fb0 <TIM_Base_SetConfig+0x114>)
 8003f0e:	4293      	cmp	r3, r2
 8003f10:	d108      	bne.n	8003f24 <TIM_Base_SetConfig+0x88>
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	4a27      	ldr	r2, [pc, #156]	; (8003fb4 <TIM_Base_SetConfig+0x118>)
 8003f16:	4013      	ands	r3, r2
 8003f18:	60fb      	str	r3, [r7, #12]
 8003f1a:	683b      	ldr	r3, [r7, #0]
 8003f1c:	68db      	ldr	r3, [r3, #12]
 8003f1e:	68fa      	ldr	r2, [r7, #12]
 8003f20:	4313      	orrs	r3, r2
 8003f22:	60fb      	str	r3, [r7, #12]
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	2280      	movs	r2, #128	; 0x80
 8003f28:	4393      	bics	r3, r2
 8003f2a:	001a      	movs	r2, r3
 8003f2c:	683b      	ldr	r3, [r7, #0]
 8003f2e:	695b      	ldr	r3, [r3, #20]
 8003f30:	4313      	orrs	r3, r2
 8003f32:	60fb      	str	r3, [r7, #12]
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	68fa      	ldr	r2, [r7, #12]
 8003f38:	601a      	str	r2, [r3, #0]
 8003f3a:	683b      	ldr	r3, [r7, #0]
 8003f3c:	689a      	ldr	r2, [r3, #8]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	62da      	str	r2, [r3, #44]	; 0x2c
 8003f42:	683b      	ldr	r3, [r7, #0]
 8003f44:	681a      	ldr	r2, [r3, #0]
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	629a      	str	r2, [r3, #40]	; 0x28
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	4a13      	ldr	r2, [pc, #76]	; (8003f9c <TIM_Base_SetConfig+0x100>)
 8003f4e:	4293      	cmp	r3, r2
 8003f50:	d00b      	beq.n	8003f6a <TIM_Base_SetConfig+0xce>
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	4a14      	ldr	r2, [pc, #80]	; (8003fa8 <TIM_Base_SetConfig+0x10c>)
 8003f56:	4293      	cmp	r3, r2
 8003f58:	d007      	beq.n	8003f6a <TIM_Base_SetConfig+0xce>
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	4a13      	ldr	r2, [pc, #76]	; (8003fac <TIM_Base_SetConfig+0x110>)
 8003f5e:	4293      	cmp	r3, r2
 8003f60:	d003      	beq.n	8003f6a <TIM_Base_SetConfig+0xce>
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	4a12      	ldr	r2, [pc, #72]	; (8003fb0 <TIM_Base_SetConfig+0x114>)
 8003f66:	4293      	cmp	r3, r2
 8003f68:	d103      	bne.n	8003f72 <TIM_Base_SetConfig+0xd6>
 8003f6a:	683b      	ldr	r3, [r7, #0]
 8003f6c:	691a      	ldr	r2, [r3, #16]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	631a      	str	r2, [r3, #48]	; 0x30
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2201      	movs	r2, #1
 8003f76:	615a      	str	r2, [r3, #20]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	691b      	ldr	r3, [r3, #16]
 8003f7c:	2201      	movs	r2, #1
 8003f7e:	4013      	ands	r3, r2
 8003f80:	2b01      	cmp	r3, #1
 8003f82:	d106      	bne.n	8003f92 <TIM_Base_SetConfig+0xf6>
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	691b      	ldr	r3, [r3, #16]
 8003f88:	2201      	movs	r2, #1
 8003f8a:	4393      	bics	r3, r2
 8003f8c:	001a      	movs	r2, r3
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	611a      	str	r2, [r3, #16]
 8003f92:	46c0      	nop			; (mov r8, r8)
 8003f94:	46bd      	mov	sp, r7
 8003f96:	b004      	add	sp, #16
 8003f98:	bd80      	pop	{r7, pc}
 8003f9a:	46c0      	nop			; (mov r8, r8)
 8003f9c:	40012c00 	.word	0x40012c00
 8003fa0:	40000400 	.word	0x40000400
 8003fa4:	40002000 	.word	0x40002000
 8003fa8:	40014000 	.word	0x40014000
 8003fac:	40014400 	.word	0x40014400
 8003fb0:	40014800 	.word	0x40014800
 8003fb4:	fffffcff 	.word	0xfffffcff

08003fb8 <carStripe>:
wsfxEffect_TypeDef *carStripeCurrentFx;


void carStripeResetWaitingForCommand(void);

void carStripe(void) {
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	b084      	sub	sp, #16
 8003fbc:	af04      	add	r7, sp, #16

	//initialize LED stripe
	WS2812B_init(&stripe1, &hspi1, CAR_STRIPE_LAST_LED);
 8003fbe:	49de      	ldr	r1, [pc, #888]	; (8004338 <carStripe+0x380>)
 8003fc0:	4bde      	ldr	r3, [pc, #888]	; (800433c <carStripe+0x384>)
 8003fc2:	2260      	movs	r2, #96	; 0x60
 8003fc4:	0018      	movs	r0, r3
 8003fc6:	f000 fe57 	bl	8004c78 <WS2812B_init>

	wsfx_init(&fxHueChange, &stripe1, 0, CAR_STRIPE_LAST_LED,
 8003fca:	49dc      	ldr	r1, [pc, #880]	; (800433c <carStripe+0x384>)
 8003fcc:	48dc      	ldr	r0, [pc, #880]	; (8004340 <carStripe+0x388>)
 8003fce:	4bdd      	ldr	r3, [pc, #884]	; (8004344 <carStripe+0x38c>)
 8003fd0:	9300      	str	r3, [sp, #0]
 8003fd2:	2360      	movs	r3, #96	; 0x60
 8003fd4:	2200      	movs	r2, #0
 8003fd6:	f001 f953 	bl	8005280 <wsfx_init>
			wsfx_step_hueChange);
	wsfx_setValue(&fxHueChange, 255);
 8003fda:	4bd9      	ldr	r3, [pc, #868]	; (8004340 <carStripe+0x388>)
 8003fdc:	21ff      	movs	r1, #255	; 0xff
 8003fde:	0018      	movs	r0, r3
 8003fe0:	f001 f998 	bl	8005314 <wsfx_setValue>
	wsfx_setPrescaler(&fxHueChange, 1);
 8003fe4:	4bd6      	ldr	r3, [pc, #856]	; (8004340 <carStripe+0x388>)
 8003fe6:	2101      	movs	r1, #1
 8003fe8:	0018      	movs	r0, r3
 8003fea:	f001 f9b1 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setRepeat(&fxHueChange, WSFX_REPEAT_MODE_ON);
 8003fee:	4bd4      	ldr	r3, [pc, #848]	; (8004340 <carStripe+0x388>)
 8003ff0:	2101      	movs	r1, #1
 8003ff2:	0018      	movs	r0, r3
 8003ff4:	f001 f99d 	bl	8005332 <wsfx_setRepeat>
	wsfx_setSaturation(&fxHueChange, 230);
 8003ff8:	4bd1      	ldr	r3, [pc, #836]	; (8004340 <carStripe+0x388>)
 8003ffa:	21e6      	movs	r1, #230	; 0xe6
 8003ffc:	0018      	movs	r0, r3
 8003ffe:	f001 f9b6 	bl	800536e <wsfx_setSaturation>

	wsfx_init(&fxKnight, &stripe1, 41, 55, wsfx_step_movingLight);
 8004002:	49ce      	ldr	r1, [pc, #824]	; (800433c <carStripe+0x384>)
 8004004:	48d0      	ldr	r0, [pc, #832]	; (8004348 <carStripe+0x390>)
 8004006:	4bd1      	ldr	r3, [pc, #836]	; (800434c <carStripe+0x394>)
 8004008:	9300      	str	r3, [sp, #0]
 800400a:	2337      	movs	r3, #55	; 0x37
 800400c:	2229      	movs	r2, #41	; 0x29
 800400e:	f001 f937 	bl	8005280 <wsfx_init>
	wsfx_setColor(&fxKnight, 0);
 8004012:	4bcd      	ldr	r3, [pc, #820]	; (8004348 <carStripe+0x390>)
 8004014:	2100      	movs	r1, #0
 8004016:	0018      	movs	r0, r3
 8004018:	f001 f96d 	bl	80052f6 <wsfx_setColor>
	wsfx_setValue(&fxKnight, 255);
 800401c:	4bca      	ldr	r3, [pc, #808]	; (8004348 <carStripe+0x390>)
 800401e:	21ff      	movs	r1, #255	; 0xff
 8004020:	0018      	movs	r0, r3
 8004022:	f001 f977 	bl	8005314 <wsfx_setValue>
	wsfx_setPrescaler(&fxKnight, 50);
 8004026:	4bc8      	ldr	r3, [pc, #800]	; (8004348 <carStripe+0x390>)
 8004028:	2132      	movs	r1, #50	; 0x32
 800402a:	0018      	movs	r0, r3
 800402c:	f001 f990 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setRepeat(&fxKnight, WSFX_REPEAT_MODE_ON);
 8004030:	4bc5      	ldr	r3, [pc, #788]	; (8004348 <carStripe+0x390>)
 8004032:	2101      	movs	r1, #1
 8004034:	0018      	movs	r0, r3
 8004036:	f001 f97c 	bl	8005332 <wsfx_setRepeat>

	wsfx_init(&fxGlow, &stripe1, 0, CAR_STRIPE_LAST_LED,
 800403a:	49c0      	ldr	r1, [pc, #768]	; (800433c <carStripe+0x384>)
 800403c:	48c4      	ldr	r0, [pc, #784]	; (8004350 <carStripe+0x398>)
 800403e:	4bc5      	ldr	r3, [pc, #788]	; (8004354 <carStripe+0x39c>)
 8004040:	9300      	str	r3, [sp, #0]
 8004042:	2360      	movs	r3, #96	; 0x60
 8004044:	2200      	movs	r2, #0
 8004046:	f001 f91b 	bl	8005280 <wsfx_init>
			wsfx_step_constantColor);
	wsfx_setValue(&fxGlow, 255);
 800404a:	4bc1      	ldr	r3, [pc, #772]	; (8004350 <carStripe+0x398>)
 800404c:	21ff      	movs	r1, #255	; 0xff
 800404e:	0018      	movs	r0, r3
 8004050:	f001 f960 	bl	8005314 <wsfx_setValue>
	wsfx_setPrescaler(&fxGlow, 1);
 8004054:	4bbe      	ldr	r3, [pc, #760]	; (8004350 <carStripe+0x398>)
 8004056:	2101      	movs	r1, #1
 8004058:	0018      	movs	r0, r3
 800405a:	f001 f979 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setRepeat(&fxGlow, WSFX_REPEAT_MODE_ON);
 800405e:	4bbc      	ldr	r3, [pc, #752]	; (8004350 <carStripe+0x398>)
 8004060:	2101      	movs	r1, #1
 8004062:	0018      	movs	r0, r3
 8004064:	f001 f965 	bl	8005332 <wsfx_setRepeat>
	wsfx_setSaturation(&fxGlow, 220);
 8004068:	4bb9      	ldr	r3, [pc, #740]	; (8004350 <carStripe+0x398>)
 800406a:	21dc      	movs	r1, #220	; 0xdc
 800406c:	0018      	movs	r0, r3
 800406e:	f001 f97e 	bl	800536e <wsfx_setSaturation>

	wsfx_init(&fxPulse, &stripe1, 0, CAR_STRIPE_LAST_LED, wsfx_step_pulse);
 8004072:	49b2      	ldr	r1, [pc, #712]	; (800433c <carStripe+0x384>)
 8004074:	48b8      	ldr	r0, [pc, #736]	; (8004358 <carStripe+0x3a0>)
 8004076:	4bb9      	ldr	r3, [pc, #740]	; (800435c <carStripe+0x3a4>)
 8004078:	9300      	str	r3, [sp, #0]
 800407a:	2360      	movs	r3, #96	; 0x60
 800407c:	2200      	movs	r2, #0
 800407e:	f001 f8ff 	bl	8005280 <wsfx_init>
	wsfx_setValue(&fxPulse, 255);
 8004082:	4bb5      	ldr	r3, [pc, #724]	; (8004358 <carStripe+0x3a0>)
 8004084:	21ff      	movs	r1, #255	; 0xff
 8004086:	0018      	movs	r0, r3
 8004088:	f001 f944 	bl	8005314 <wsfx_setValue>
	wsfx_setSaturation(&fxPulse, 80);
 800408c:	4bb2      	ldr	r3, [pc, #712]	; (8004358 <carStripe+0x3a0>)
 800408e:	2150      	movs	r1, #80	; 0x50
 8004090:	0018      	movs	r0, r3
 8004092:	f001 f96c 	bl	800536e <wsfx_setSaturation>
	wsfx_setColor(&fxPulse, 240);
 8004096:	4bb0      	ldr	r3, [pc, #704]	; (8004358 <carStripe+0x3a0>)
 8004098:	21f0      	movs	r1, #240	; 0xf0
 800409a:	0018      	movs	r0, r3
 800409c:	f001 f92b 	bl	80052f6 <wsfx_setColor>
	wsfx_setPrescaler(&fxPulse, 1);
 80040a0:	4bad      	ldr	r3, [pc, #692]	; (8004358 <carStripe+0x3a0>)
 80040a2:	2101      	movs	r1, #1
 80040a4:	0018      	movs	r0, r3
 80040a6:	f001 f953 	bl	8005350 <wsfx_setPrescaler>

	wsfx_init(&fxBlinker, &stripe1, 0, CAR_STRIPE_LAST_LED,
 80040aa:	49a4      	ldr	r1, [pc, #656]	; (800433c <carStripe+0x384>)
 80040ac:	48ac      	ldr	r0, [pc, #688]	; (8004360 <carStripe+0x3a8>)
 80040ae:	4bad      	ldr	r3, [pc, #692]	; (8004364 <carStripe+0x3ac>)
 80040b0:	9300      	str	r3, [sp, #0]
 80040b2:	2360      	movs	r3, #96	; 0x60
 80040b4:	2200      	movs	r2, #0
 80040b6:	f001 f8e3 	bl	8005280 <wsfx_init>
			wsfx_step_blinker);
	wsfx_setPrescaler(&fxBlinker, 30);
 80040ba:	4ba9      	ldr	r3, [pc, #676]	; (8004360 <carStripe+0x3a8>)
 80040bc:	211e      	movs	r1, #30
 80040be:	0018      	movs	r0, r3
 80040c0:	f001 f946 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setValue(&fxBlinker, 255);
 80040c4:	4ba6      	ldr	r3, [pc, #664]	; (8004360 <carStripe+0x3a8>)
 80040c6:	21ff      	movs	r1, #255	; 0xff
 80040c8:	0018      	movs	r0, r3
 80040ca:	f001 f923 	bl	8005314 <wsfx_setValue>
	wsfx_setColor(&fxBlinker, 0);
 80040ce:	4ba4      	ldr	r3, [pc, #656]	; (8004360 <carStripe+0x3a8>)
 80040d0:	2100      	movs	r1, #0
 80040d2:	0018      	movs	r0, r3
 80040d4:	f001 f90f 	bl	80052f6 <wsfx_setColor>
	wsfx_setColorSecond(&fxBlinker, 240);
 80040d8:	4ba1      	ldr	r3, [pc, #644]	; (8004360 <carStripe+0x3a8>)
 80040da:	21f0      	movs	r1, #240	; 0xf0
 80040dc:	0018      	movs	r0, r3
 80040de:	f001 f955 	bl	800538c <wsfx_setColorSecond>
	wsfx_setSaturation(&fxBlinker, 255);
 80040e2:	4b9f      	ldr	r3, [pc, #636]	; (8004360 <carStripe+0x3a8>)
 80040e4:	21ff      	movs	r1, #255	; 0xff
 80040e6:	0018      	movs	r0, r3
 80040e8:	f001 f941 	bl	800536e <wsfx_setSaturation>


	wsfx_init(&fxStarting, &stripe1, 0, CAR_STRIPE_LAST_LED,
 80040ec:	4993      	ldr	r1, [pc, #588]	; (800433c <carStripe+0x384>)
 80040ee:	489e      	ldr	r0, [pc, #632]	; (8004368 <carStripe+0x3b0>)
 80040f0:	4b9e      	ldr	r3, [pc, #632]	; (800436c <carStripe+0x3b4>)
 80040f2:	9300      	str	r3, [sp, #0]
 80040f4:	2360      	movs	r3, #96	; 0x60
 80040f6:	2200      	movs	r2, #0
 80040f8:	f001 f8c2 	bl	8005280 <wsfx_init>
			wsfx_step_starting);
	wsfx_setPrescaler(&fxStarting, 1);
 80040fc:	4b9a      	ldr	r3, [pc, #616]	; (8004368 <carStripe+0x3b0>)
 80040fe:	2101      	movs	r1, #1
 8004100:	0018      	movs	r0, r3
 8004102:	f001 f925 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setValue(&fxStarting, 255);
 8004106:	4b98      	ldr	r3, [pc, #608]	; (8004368 <carStripe+0x3b0>)
 8004108:	21ff      	movs	r1, #255	; 0xff
 800410a:	0018      	movs	r0, r3
 800410c:	f001 f902 	bl	8005314 <wsfx_setValue>
	wsfx_setSaturation(&fxStarting, 50);
 8004110:	4b95      	ldr	r3, [pc, #596]	; (8004368 <carStripe+0x3b0>)
 8004112:	2132      	movs	r1, #50	; 0x32
 8004114:	0018      	movs	r0, r3
 8004116:	f001 f92a 	bl	800536e <wsfx_setSaturation>
	wsfx_setColor(&fxStarting, 240);
 800411a:	4b93      	ldr	r3, [pc, #588]	; (8004368 <carStripe+0x3b0>)
 800411c:	21f0      	movs	r1, #240	; 0xf0
 800411e:	0018      	movs	r0, r3
 8004120:	f001 f8e9 	bl	80052f6 <wsfx_setColor>

	wsfx_init(&fxWarp, &stripe1, 0, CAR_STRIPE_LAST_LED,
 8004124:	4985      	ldr	r1, [pc, #532]	; (800433c <carStripe+0x384>)
 8004126:	4892      	ldr	r0, [pc, #584]	; (8004370 <carStripe+0x3b8>)
 8004128:	4b92      	ldr	r3, [pc, #584]	; (8004374 <carStripe+0x3bc>)
 800412a:	9300      	str	r3, [sp, #0]
 800412c:	2360      	movs	r3, #96	; 0x60
 800412e:	2200      	movs	r2, #0
 8004130:	f001 f8a6 	bl	8005280 <wsfx_init>
			wsfx_step_warpHalf);
	wsfx_setPrescaler(&fxWarp, 2);
 8004134:	4b8e      	ldr	r3, [pc, #568]	; (8004370 <carStripe+0x3b8>)
 8004136:	2102      	movs	r1, #2
 8004138:	0018      	movs	r0, r3
 800413a:	f001 f909 	bl	8005350 <wsfx_setPrescaler>
	wsfx_setValue(&fxWarp, 255);
 800413e:	4b8c      	ldr	r3, [pc, #560]	; (8004370 <carStripe+0x3b8>)
 8004140:	21ff      	movs	r1, #255	; 0xff
 8004142:	0018      	movs	r0, r3
 8004144:	f001 f8e6 	bl	8005314 <wsfx_setValue>
	wsfx_setSaturation(&fxWarp, 0);
 8004148:	4b89      	ldr	r3, [pc, #548]	; (8004370 <carStripe+0x3b8>)
 800414a:	2100      	movs	r1, #0
 800414c:	0018      	movs	r0, r3
 800414e:	f001 f90e 	bl	800536e <wsfx_setSaturation>
	wsfx_setRepeat(&fxWarp, WSFX_REPEAT_MODE_ON);
 8004152:	4b87      	ldr	r3, [pc, #540]	; (8004370 <carStripe+0x3b8>)
 8004154:	2101      	movs	r1, #1
 8004156:	0018      	movs	r0, r3
 8004158:	f001 f8eb 	bl	8005332 <wsfx_setRepeat>

	//init receiver
	radio433_receiverInit(&radio, RADIO433_BARTS_FRAMELENGTH,
 800415c:	4a86      	ldr	r2, [pc, #536]	; (8004378 <carStripe+0x3c0>)
 800415e:	4887      	ldr	r0, [pc, #540]	; (800437c <carStripe+0x3c4>)
 8004160:	23ff      	movs	r3, #255	; 0xff
 8004162:	9301      	str	r3, [sp, #4]
 8004164:	2300      	movs	r3, #0
 8004166:	9300      	str	r3, [sp, #0]
 8004168:	0013      	movs	r3, r2
 800416a:	2208      	movs	r2, #8
 800416c:	2120      	movs	r1, #32
 800416e:	f000 fa5b 	bl	8004628 <radio433_receiverInit>
	RADIO433_BARTS_ID_SHIFT,
	RADIO433_BARTS_ID_MASK, RADIO433_BARTS_DATA_SHIFT,
	RADIO433_BARTS_DATA_MASK);
	//attach pin for receiver
	radio433_receiverAttach(&radio, RADIO_RX_GPIO_Port, RADIO_RX_Pin, &htim16);
 8004172:	4b83      	ldr	r3, [pc, #524]	; (8004380 <carStripe+0x3c8>)
 8004174:	4983      	ldr	r1, [pc, #524]	; (8004384 <carStripe+0x3cc>)
 8004176:	4881      	ldr	r0, [pc, #516]	; (800437c <carStripe+0x3c4>)
 8004178:	2204      	movs	r2, #4
 800417a:	f000 fa90 	bl	800469e <radio433_receiverAttach>

	//init remote
	radio433_transmitterInit(&remote, 14854373, RADIO433_BARTS_FRAMELENGTH,
 800417e:	4982      	ldr	r1, [pc, #520]	; (8004388 <carStripe+0x3d0>)
 8004180:	4882      	ldr	r0, [pc, #520]	; (800438c <carStripe+0x3d4>)
 8004182:	23ff      	movs	r3, #255	; 0xff
 8004184:	9302      	str	r3, [sp, #8]
 8004186:	2300      	movs	r3, #0
 8004188:	9301      	str	r3, [sp, #4]
 800418a:	4b7b      	ldr	r3, [pc, #492]	; (8004378 <carStripe+0x3c0>)
 800418c:	9300      	str	r3, [sp, #0]
 800418e:	2308      	movs	r3, #8
 8004190:	2220      	movs	r2, #32
 8004192:	f000 fb69 	bl	8004868 <radio433_transmitterInit>
	//	radio433_transmitterAttachGPIOandTimer(&transmitter, RADIO_TX_GPIO_Port,
	//	RADIO_TX_Pin, &htim17);

	while (1) {

		carStripeButtonData = radio433_receiverReadData(&radio, &remote);
 8004196:	4a7d      	ldr	r2, [pc, #500]	; (800438c <carStripe+0x3d4>)
 8004198:	4b78      	ldr	r3, [pc, #480]	; (800437c <carStripe+0x3c4>)
 800419a:	0011      	movs	r1, r2
 800419c:	0018      	movs	r0, r3
 800419e:	f000 faac 	bl	80046fa <radio433_receiverReadData>
 80041a2:	0002      	movs	r2, r0
 80041a4:	4b7a      	ldr	r3, [pc, #488]	; (8004390 <carStripe+0x3d8>)
 80041a6:	601a      	str	r2, [r3, #0]

		if (carStripeButtonData == RADIO433_BARTS_BUTTON_D) {
 80041a8:	4b79      	ldr	r3, [pc, #484]	; (8004390 <carStripe+0x3d8>)
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	2b0e      	cmp	r3, #14
 80041ae:	d106      	bne.n	80041be <carStripe+0x206>

			if (carStripeCommand == 0)
 80041b0:	4b78      	ldr	r3, [pc, #480]	; (8004394 <carStripe+0x3dc>)
 80041b2:	781b      	ldrb	r3, [r3, #0]
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d102      	bne.n	80041be <carStripe+0x206>
				carStripeCommand = 1;
 80041b8:	4b76      	ldr	r3, [pc, #472]	; (8004394 <carStripe+0x3dc>)
 80041ba:	2201      	movs	r2, #1
 80041bc:	701a      	strb	r2, [r3, #0]

		}

		if (carStripeButtonData == RADIO433_BARTS_BUTTON_C) {
 80041be:	4b74      	ldr	r3, [pc, #464]	; (8004390 <carStripe+0x3d8>)
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	2b0d      	cmp	r3, #13
 80041c4:	d11c      	bne.n	8004200 <carStripe+0x248>

//			carStripeButtonReadPrescaler = 1;

			carStripeColor += 4;
 80041c6:	4b74      	ldr	r3, [pc, #464]	; (8004398 <carStripe+0x3e0>)
 80041c8:	881b      	ldrh	r3, [r3, #0]
 80041ca:	3304      	adds	r3, #4
 80041cc:	b29a      	uxth	r2, r3
 80041ce:	4b72      	ldr	r3, [pc, #456]	; (8004398 <carStripe+0x3e0>)
 80041d0:	801a      	strh	r2, [r3, #0]

			if (carStripeColor >= 360)
 80041d2:	4b71      	ldr	r3, [pc, #452]	; (8004398 <carStripe+0x3e0>)
 80041d4:	881a      	ldrh	r2, [r3, #0]
 80041d6:	23b4      	movs	r3, #180	; 0xb4
 80041d8:	005b      	lsls	r3, r3, #1
 80041da:	429a      	cmp	r2, r3
 80041dc:	d302      	bcc.n	80041e4 <carStripe+0x22c>
				carStripeColor = 0;
 80041de:	4b6e      	ldr	r3, [pc, #440]	; (8004398 <carStripe+0x3e0>)
 80041e0:	2200      	movs	r2, #0
 80041e2:	801a      	strh	r2, [r3, #0]

			wsfx_setColor(&fxKnight, carStripeColor);
 80041e4:	4b6c      	ldr	r3, [pc, #432]	; (8004398 <carStripe+0x3e0>)
 80041e6:	881a      	ldrh	r2, [r3, #0]
 80041e8:	4b57      	ldr	r3, [pc, #348]	; (8004348 <carStripe+0x390>)
 80041ea:	0011      	movs	r1, r2
 80041ec:	0018      	movs	r0, r3
 80041ee:	f001 f882 	bl	80052f6 <wsfx_setColor>
			wsfx_setColor(&fxGlow, carStripeColor);
 80041f2:	4b69      	ldr	r3, [pc, #420]	; (8004398 <carStripe+0x3e0>)
 80041f4:	881a      	ldrh	r2, [r3, #0]
 80041f6:	4b56      	ldr	r3, [pc, #344]	; (8004350 <carStripe+0x398>)
 80041f8:	0011      	movs	r1, r2
 80041fa:	0018      	movs	r0, r3
 80041fc:	f001 f87b 	bl	80052f6 <wsfx_setColor>

		}

		if (carStripeButtonData == RADIO433_BARTS_BUTTON_B) {
 8004200:	4b63      	ldr	r3, [pc, #396]	; (8004390 <carStripe+0x3d8>)
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	2b0b      	cmp	r3, #11
 8004206:	d120      	bne.n	800424a <carStripe+0x292>

			if (carStripeCommand) {
 8004208:	4b62      	ldr	r3, [pc, #392]	; (8004394 <carStripe+0x3dc>)
 800420a:	781b      	ldrb	r3, [r3, #0]
 800420c:	2b00      	cmp	r3, #0
 800420e:	d019      	beq.n	8004244 <carStripe+0x28c>
				wsfx_stop(carStripeCurrentFx);
 8004210:	4b62      	ldr	r3, [pc, #392]	; (800439c <carStripe+0x3e4>)
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	0018      	movs	r0, r3
 8004216:	f001 f8d3 	bl	80053c0 <wsfx_stop>
				carStripeEffectNumber++;
 800421a:	4b61      	ldr	r3, [pc, #388]	; (80043a0 <carStripe+0x3e8>)
 800421c:	781b      	ldrb	r3, [r3, #0]
 800421e:	b25b      	sxtb	r3, r3
 8004220:	b2db      	uxtb	r3, r3
 8004222:	3301      	adds	r3, #1
 8004224:	b2db      	uxtb	r3, r3
 8004226:	b25a      	sxtb	r2, r3
 8004228:	4b5d      	ldr	r3, [pc, #372]	; (80043a0 <carStripe+0x3e8>)
 800422a:	701a      	strb	r2, [r3, #0]
				if (carStripeEffectNumber > CAR_STRIPE_EFFECTS)
 800422c:	4b5c      	ldr	r3, [pc, #368]	; (80043a0 <carStripe+0x3e8>)
 800422e:	781b      	ldrb	r3, [r3, #0]
 8004230:	b25b      	sxtb	r3, r3
 8004232:	2b07      	cmp	r3, #7
 8004234:	dd02      	ble.n	800423c <carStripe+0x284>
					carStripeEffectNumber = CAR_STRIPE_EFFECTS;
 8004236:	4b5a      	ldr	r3, [pc, #360]	; (80043a0 <carStripe+0x3e8>)
 8004238:	2207      	movs	r2, #7
 800423a:	701a      	strb	r2, [r3, #0]

				carStripeCommand = 0;
 800423c:	4b55      	ldr	r3, [pc, #340]	; (8004394 <carStripe+0x3dc>)
 800423e:	2200      	movs	r2, #0
 8004240:	701a      	strb	r2, [r3, #0]
 8004242:	e002      	b.n	800424a <carStripe+0x292>

			} else {
				carStripeStopFlag = 1;
 8004244:	4b57      	ldr	r3, [pc, #348]	; (80043a4 <carStripe+0x3ec>)
 8004246:	2201      	movs	r2, #1
 8004248:	701a      	strb	r2, [r3, #0]
			}

		}

		if (carStripeButtonData == RADIO433_BARTS_BUTTON_A) {
 800424a:	4b51      	ldr	r3, [pc, #324]	; (8004390 <carStripe+0x3d8>)
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	2b07      	cmp	r3, #7
 8004250:	d120      	bne.n	8004294 <carStripe+0x2dc>

			if (carStripeCommand) {
 8004252:	4b50      	ldr	r3, [pc, #320]	; (8004394 <carStripe+0x3dc>)
 8004254:	781b      	ldrb	r3, [r3, #0]
 8004256:	2b00      	cmp	r3, #0
 8004258:	d019      	beq.n	800428e <carStripe+0x2d6>
				wsfx_stop(carStripeCurrentFx);
 800425a:	4b50      	ldr	r3, [pc, #320]	; (800439c <carStripe+0x3e4>)
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	0018      	movs	r0, r3
 8004260:	f001 f8ae 	bl	80053c0 <wsfx_stop>
				carStripeEffectNumber--;
 8004264:	4b4e      	ldr	r3, [pc, #312]	; (80043a0 <carStripe+0x3e8>)
 8004266:	781b      	ldrb	r3, [r3, #0]
 8004268:	b25b      	sxtb	r3, r3
 800426a:	b2db      	uxtb	r3, r3
 800426c:	3b01      	subs	r3, #1
 800426e:	b2db      	uxtb	r3, r3
 8004270:	b25a      	sxtb	r2, r3
 8004272:	4b4b      	ldr	r3, [pc, #300]	; (80043a0 <carStripe+0x3e8>)
 8004274:	701a      	strb	r2, [r3, #0]
				if (carStripeEffectNumber < 0)
 8004276:	4b4a      	ldr	r3, [pc, #296]	; (80043a0 <carStripe+0x3e8>)
 8004278:	781b      	ldrb	r3, [r3, #0]
 800427a:	b25b      	sxtb	r3, r3
 800427c:	2b00      	cmp	r3, #0
 800427e:	da02      	bge.n	8004286 <carStripe+0x2ce>
					carStripeEffectNumber = 0;
 8004280:	4b47      	ldr	r3, [pc, #284]	; (80043a0 <carStripe+0x3e8>)
 8004282:	2200      	movs	r2, #0
 8004284:	701a      	strb	r2, [r3, #0]

				carStripeCommand = 0;
 8004286:	4b43      	ldr	r3, [pc, #268]	; (8004394 <carStripe+0x3dc>)
 8004288:	2200      	movs	r2, #0
 800428a:	701a      	strb	r2, [r3, #0]
 800428c:	e002      	b.n	8004294 <carStripe+0x2dc>

			} else {
				carStripeStartFlag = 1;
 800428e:	4b46      	ldr	r3, [pc, #280]	; (80043a8 <carStripe+0x3f0>)
 8004290:	2201      	movs	r2, #1
 8004292:	701a      	strb	r2, [r3, #0]
			}

		}

		switch (carStripeEffectNumber) {
 8004294:	4b42      	ldr	r3, [pc, #264]	; (80043a0 <carStripe+0x3e8>)
 8004296:	781b      	ldrb	r3, [r3, #0]
 8004298:	b25b      	sxtb	r3, r3
 800429a:	2b06      	cmp	r3, #6
 800429c:	d820      	bhi.n	80042e0 <carStripe+0x328>
 800429e:	009a      	lsls	r2, r3, #2
 80042a0:	4b42      	ldr	r3, [pc, #264]	; (80043ac <carStripe+0x3f4>)
 80042a2:	18d3      	adds	r3, r2, r3
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	469f      	mov	pc, r3
		case 0:
			carStripeCurrentFx = &fxPulse;
 80042a8:	4b3c      	ldr	r3, [pc, #240]	; (800439c <carStripe+0x3e4>)
 80042aa:	4a2b      	ldr	r2, [pc, #172]	; (8004358 <carStripe+0x3a0>)
 80042ac:	601a      	str	r2, [r3, #0]
			break;
 80042ae:	e017      	b.n	80042e0 <carStripe+0x328>
		case 1:
			carStripeCurrentFx = &fxKnight;
 80042b0:	4b3a      	ldr	r3, [pc, #232]	; (800439c <carStripe+0x3e4>)
 80042b2:	4a25      	ldr	r2, [pc, #148]	; (8004348 <carStripe+0x390>)
 80042b4:	601a      	str	r2, [r3, #0]
			break;
 80042b6:	e013      	b.n	80042e0 <carStripe+0x328>
		case 2:
			carStripeCurrentFx = &fxStarting;
 80042b8:	4b38      	ldr	r3, [pc, #224]	; (800439c <carStripe+0x3e4>)
 80042ba:	4a2b      	ldr	r2, [pc, #172]	; (8004368 <carStripe+0x3b0>)
 80042bc:	601a      	str	r2, [r3, #0]
			break;
 80042be:	e00f      	b.n	80042e0 <carStripe+0x328>
		case 3:
			carStripeCurrentFx = &fxWarp;
 80042c0:	4b36      	ldr	r3, [pc, #216]	; (800439c <carStripe+0x3e4>)
 80042c2:	4a2b      	ldr	r2, [pc, #172]	; (8004370 <carStripe+0x3b8>)
 80042c4:	601a      	str	r2, [r3, #0]
			break;
 80042c6:	e00b      	b.n	80042e0 <carStripe+0x328>
		case 4:
			carStripeCurrentFx = &fxGlow;
 80042c8:	4b34      	ldr	r3, [pc, #208]	; (800439c <carStripe+0x3e4>)
 80042ca:	4a21      	ldr	r2, [pc, #132]	; (8004350 <carStripe+0x398>)
 80042cc:	601a      	str	r2, [r3, #0]
			break;
 80042ce:	e007      	b.n	80042e0 <carStripe+0x328>
		case 5:
			carStripeCurrentFx = &fxHueChange;
 80042d0:	4b32      	ldr	r3, [pc, #200]	; (800439c <carStripe+0x3e4>)
 80042d2:	4a1b      	ldr	r2, [pc, #108]	; (8004340 <carStripe+0x388>)
 80042d4:	601a      	str	r2, [r3, #0]
			break;
 80042d6:	e003      	b.n	80042e0 <carStripe+0x328>
		case 6:
			carStripeCurrentFx = &fxBlinker;
 80042d8:	4b30      	ldr	r3, [pc, #192]	; (800439c <carStripe+0x3e4>)
 80042da:	4a21      	ldr	r2, [pc, #132]	; (8004360 <carStripe+0x3a8>)
 80042dc:	601a      	str	r2, [r3, #0]
			break;
 80042de:	46c0      	nop			; (mov r8, r8)
		}

		if (carStripeStartFlag) {
 80042e0:	4b31      	ldr	r3, [pc, #196]	; (80043a8 <carStripe+0x3f0>)
 80042e2:	781b      	ldrb	r3, [r3, #0]
 80042e4:	2b00      	cmp	r3, #0
 80042e6:	d007      	beq.n	80042f8 <carStripe+0x340>
			wsfx_start(carStripeCurrentFx);
 80042e8:	4b2c      	ldr	r3, [pc, #176]	; (800439c <carStripe+0x3e4>)
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	0018      	movs	r0, r3
 80042ee:	f001 f85c 	bl	80053aa <wsfx_start>
			carStripeStartFlag = 0;
 80042f2:	4b2d      	ldr	r3, [pc, #180]	; (80043a8 <carStripe+0x3f0>)
 80042f4:	2200      	movs	r2, #0
 80042f6:	701a      	strb	r2, [r3, #0]
		}

		if (carStripeStopFlag) {
 80042f8:	4b2a      	ldr	r3, [pc, #168]	; (80043a4 <carStripe+0x3ec>)
 80042fa:	781b      	ldrb	r3, [r3, #0]
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d007      	beq.n	8004310 <carStripe+0x358>
			wsfx_stop(carStripeCurrentFx);
 8004300:	4b26      	ldr	r3, [pc, #152]	; (800439c <carStripe+0x3e4>)
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	0018      	movs	r0, r3
 8004306:	f001 f85b 	bl	80053c0 <wsfx_stop>
			carStripeStopFlag = 0;
 800430a:	4b26      	ldr	r3, [pc, #152]	; (80043a4 <carStripe+0x3ec>)
 800430c:	2200      	movs	r2, #0
 800430e:	701a      	strb	r2, [r3, #0]

		}

		carStripeButtonData = 0;
 8004310:	4b1f      	ldr	r3, [pc, #124]	; (8004390 <carStripe+0x3d8>)
 8004312:	2200      	movs	r2, #0
 8004314:	601a      	str	r2, [r3, #0]

		wsfx_increment(7, &fxKnight, &fxGlow, &fxPulse, &fxBlinker, &fxStarting,
 8004316:	4810      	ldr	r0, [pc, #64]	; (8004358 <carStripe+0x3a0>)
 8004318:	4a0d      	ldr	r2, [pc, #52]	; (8004350 <carStripe+0x398>)
 800431a:	490b      	ldr	r1, [pc, #44]	; (8004348 <carStripe+0x390>)
 800431c:	4b08      	ldr	r3, [pc, #32]	; (8004340 <carStripe+0x388>)
 800431e:	9303      	str	r3, [sp, #12]
 8004320:	4b13      	ldr	r3, [pc, #76]	; (8004370 <carStripe+0x3b8>)
 8004322:	9302      	str	r3, [sp, #8]
 8004324:	4b10      	ldr	r3, [pc, #64]	; (8004368 <carStripe+0x3b0>)
 8004326:	9301      	str	r3, [sp, #4]
 8004328:	4b0d      	ldr	r3, [pc, #52]	; (8004360 <carStripe+0x3a8>)
 800432a:	9300      	str	r3, [sp, #0]
 800432c:	0003      	movs	r3, r0
 800432e:	2007      	movs	r0, #7
 8004330:	f000 ff2a 	bl	8005188 <wsfx_increment>
		carStripeButtonData = radio433_receiverReadData(&radio, &remote);
 8004334:	e72f      	b.n	8004196 <carStripe+0x1de>
 8004336:	46c0      	nop			; (mov r8, r8)
 8004338:	200001cc 	.word	0x200001cc
 800433c:	2000007c 	.word	0x2000007c
 8004340:	20000148 	.word	0x20000148
 8004344:	08005629 	.word	0x08005629
 8004348:	20000088 	.word	0x20000088
 800434c:	08005497 	.word	0x08005497
 8004350:	200000a8 	.word	0x200000a8
 8004354:	08005a3f 	.word	0x08005a3f
 8004358:	200000c8 	.word	0x200000c8
 800435c:	08005677 	.word	0x08005677
 8004360:	200000e8 	.word	0x200000e8
 8004364:	08005735 	.word	0x08005735
 8004368:	20000108 	.word	0x20000108
 800436c:	08005803 	.word	0x08005803
 8004370:	20000128 	.word	0x20000128
 8004374:	08005a89 	.word	0x08005a89
 8004378:	00ffffff 	.word	0x00ffffff
 800437c:	20000168 	.word	0x20000168
 8004380:	20000290 	.word	0x20000290
 8004384:	50000400 	.word	0x50000400
 8004388:	00e2a8e5 	.word	0x00e2a8e5
 800438c:	20000194 	.word	0x20000194
 8004390:	200001b8 	.word	0x200001b8
 8004394:	200001c2 	.word	0x200001c2
 8004398:	200001be 	.word	0x200001be
 800439c:	200001c8 	.word	0x200001c8
 80043a0:	200001bc 	.word	0x200001bc
 80043a4:	200001c1 	.word	0x200001c1
 80043a8:	200001c0 	.word	0x200001c0
 80043ac:	08005f9c 	.word	0x08005f9c

080043b0 <HAL_GPIO_EXTI_Rising_Callback>:
				&fxWarp, &fxHueChange);

	}

}
void HAL_GPIO_EXTI_Rising_Callback(uint16_t GPIO_Pin) {
 80043b0:	b580      	push	{r7, lr}
 80043b2:	b082      	sub	sp, #8
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	0002      	movs	r2, r0
 80043b8:	1dbb      	adds	r3, r7, #6
 80043ba:	801a      	strh	r2, [r3, #0]
	radio433_receiverCallbackEXTI(&radio, GPIO_Pin);
 80043bc:	1dbb      	adds	r3, r7, #6
 80043be:	881a      	ldrh	r2, [r3, #0]
 80043c0:	4b04      	ldr	r3, [pc, #16]	; (80043d4 <HAL_GPIO_EXTI_Rising_Callback+0x24>)
 80043c2:	0011      	movs	r1, r2
 80043c4:	0018      	movs	r0, r3
 80043c6:	f000 f9bc 	bl	8004742 <radio433_receiverCallbackEXTI>
}
 80043ca:	46c0      	nop			; (mov r8, r8)
 80043cc:	46bd      	mov	sp, r7
 80043ce:	b002      	add	sp, #8
 80043d0:	bd80      	pop	{r7, pc}
 80043d2:	46c0      	nop			; (mov r8, r8)
 80043d4:	20000168 	.word	0x20000168

080043d8 <HAL_GPIO_EXTI_Falling_Callback>:

void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin) {
 80043d8:	b580      	push	{r7, lr}
 80043da:	b082      	sub	sp, #8
 80043dc:	af00      	add	r7, sp, #0
 80043de:	0002      	movs	r2, r0
 80043e0:	1dbb      	adds	r3, r7, #6
 80043e2:	801a      	strh	r2, [r3, #0]
	radio433_receiverCallbackEXTI(&radio, GPIO_Pin);
 80043e4:	1dbb      	adds	r3, r7, #6
 80043e6:	881a      	ldrh	r2, [r3, #0]
 80043e8:	4b04      	ldr	r3, [pc, #16]	; (80043fc <HAL_GPIO_EXTI_Falling_Callback+0x24>)
 80043ea:	0011      	movs	r1, r2
 80043ec:	0018      	movs	r0, r3
 80043ee:	f000 f9a8 	bl	8004742 <radio433_receiverCallbackEXTI>
}
 80043f2:	46c0      	nop			; (mov r8, r8)
 80043f4:	46bd      	mov	sp, r7
 80043f6:	b002      	add	sp, #8
 80043f8:	bd80      	pop	{r7, pc}
 80043fa:	46c0      	nop			; (mov r8, r8)
 80043fc:	20000168 	.word	0x20000168

08004400 <carStripeResetWaitingForCommand>:

void carStripeResetWaitingForCommand(void) {
 8004400:	b580      	push	{r7, lr}
 8004402:	af00      	add	r7, sp, #0

	if (carStripeCommand) {
 8004404:	4b0d      	ldr	r3, [pc, #52]	; (800443c <carStripeResetWaitingForCommand+0x3c>)
 8004406:	781b      	ldrb	r3, [r3, #0]
 8004408:	2b00      	cmp	r3, #0
 800440a:	d014      	beq.n	8004436 <carStripeResetWaitingForCommand+0x36>
		carStripeCommandResetCounter++;
 800440c:	4b0c      	ldr	r3, [pc, #48]	; (8004440 <carStripeResetWaitingForCommand+0x40>)
 800440e:	881b      	ldrh	r3, [r3, #0]
 8004410:	b29b      	uxth	r3, r3
 8004412:	3301      	adds	r3, #1
 8004414:	b29a      	uxth	r2, r3
 8004416:	4b0a      	ldr	r3, [pc, #40]	; (8004440 <carStripeResetWaitingForCommand+0x40>)
 8004418:	801a      	strh	r2, [r3, #0]
		if (carStripeCommandResetCounter > carStripeCommandResetTime){
 800441a:	4b09      	ldr	r3, [pc, #36]	; (8004440 <carStripeResetWaitingForCommand+0x40>)
 800441c:	881b      	ldrh	r3, [r3, #0]
 800441e:	b29a      	uxth	r2, r3
 8004420:	4b08      	ldr	r3, [pc, #32]	; (8004444 <carStripeResetWaitingForCommand+0x44>)
 8004422:	881b      	ldrh	r3, [r3, #0]
 8004424:	b29b      	uxth	r3, r3
 8004426:	429a      	cmp	r2, r3
 8004428:	d905      	bls.n	8004436 <carStripeResetWaitingForCommand+0x36>
			carStripeCommand = 0;
 800442a:	4b04      	ldr	r3, [pc, #16]	; (800443c <carStripeResetWaitingForCommand+0x3c>)
 800442c:	2200      	movs	r2, #0
 800442e:	701a      	strb	r2, [r3, #0]
			carStripeCommandResetCounter = 0;
 8004430:	4b03      	ldr	r3, [pc, #12]	; (8004440 <carStripeResetWaitingForCommand+0x40>)
 8004432:	2200      	movs	r2, #0
 8004434:	801a      	strh	r2, [r3, #0]
		}

	}
}
 8004436:	46c0      	nop			; (mov r8, r8)
 8004438:	46bd      	mov	sp, r7
 800443a:	bd80      	pop	{r7, pc}
 800443c:	200001c2 	.word	0x200001c2
 8004440:	200001c4 	.word	0x200001c4
 8004444:	20000006 	.word	0x20000006

08004448 <MX_DMA_Init>:
 8004448:	b580      	push	{r7, lr}
 800444a:	b082      	sub	sp, #8
 800444c:	af00      	add	r7, sp, #0
 800444e:	4b0c      	ldr	r3, [pc, #48]	; (8004480 <MX_DMA_Init+0x38>)
 8004450:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004452:	4b0b      	ldr	r3, [pc, #44]	; (8004480 <MX_DMA_Init+0x38>)
 8004454:	2101      	movs	r1, #1
 8004456:	430a      	orrs	r2, r1
 8004458:	639a      	str	r2, [r3, #56]	; 0x38
 800445a:	4b09      	ldr	r3, [pc, #36]	; (8004480 <MX_DMA_Init+0x38>)
 800445c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800445e:	2201      	movs	r2, #1
 8004460:	4013      	ands	r3, r2
 8004462:	607b      	str	r3, [r7, #4]
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	2200      	movs	r2, #0
 8004468:	2100      	movs	r1, #0
 800446a:	2009      	movs	r0, #9
 800446c:	f7fd ff60 	bl	8002330 <HAL_NVIC_SetPriority>
 8004470:	2009      	movs	r0, #9
 8004472:	f7fd ff72 	bl	800235a <HAL_NVIC_EnableIRQ>
 8004476:	46c0      	nop			; (mov r8, r8)
 8004478:	46bd      	mov	sp, r7
 800447a:	b002      	add	sp, #8
 800447c:	bd80      	pop	{r7, pc}
 800447e:	46c0      	nop			; (mov r8, r8)
 8004480:	40021000 	.word	0x40021000

08004484 <MX_GPIO_Init>:
 8004484:	b590      	push	{r4, r7, lr}
 8004486:	b089      	sub	sp, #36	; 0x24
 8004488:	af00      	add	r7, sp, #0
 800448a:	240c      	movs	r4, #12
 800448c:	193b      	adds	r3, r7, r4
 800448e:	0018      	movs	r0, r3
 8004490:	2314      	movs	r3, #20
 8004492:	001a      	movs	r2, r3
 8004494:	2100      	movs	r1, #0
 8004496:	f001 fc47 	bl	8005d28 <memset>
 800449a:	4b26      	ldr	r3, [pc, #152]	; (8004534 <MX_GPIO_Init+0xb0>)
 800449c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800449e:	4b25      	ldr	r3, [pc, #148]	; (8004534 <MX_GPIO_Init+0xb0>)
 80044a0:	2101      	movs	r1, #1
 80044a2:	430a      	orrs	r2, r1
 80044a4:	635a      	str	r2, [r3, #52]	; 0x34
 80044a6:	4b23      	ldr	r3, [pc, #140]	; (8004534 <MX_GPIO_Init+0xb0>)
 80044a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80044aa:	2201      	movs	r2, #1
 80044ac:	4013      	ands	r3, r2
 80044ae:	60bb      	str	r3, [r7, #8]
 80044b0:	68bb      	ldr	r3, [r7, #8]
 80044b2:	4b20      	ldr	r3, [pc, #128]	; (8004534 <MX_GPIO_Init+0xb0>)
 80044b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044b6:	4b1f      	ldr	r3, [pc, #124]	; (8004534 <MX_GPIO_Init+0xb0>)
 80044b8:	2102      	movs	r1, #2
 80044ba:	430a      	orrs	r2, r1
 80044bc:	635a      	str	r2, [r3, #52]	; 0x34
 80044be:	4b1d      	ldr	r3, [pc, #116]	; (8004534 <MX_GPIO_Init+0xb0>)
 80044c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80044c2:	2202      	movs	r2, #2
 80044c4:	4013      	ands	r3, r2
 80044c6:	607b      	str	r3, [r7, #4]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	4b1b      	ldr	r3, [pc, #108]	; (8004538 <MX_GPIO_Init+0xb4>)
 80044cc:	2200      	movs	r2, #0
 80044ce:	2102      	movs	r1, #2
 80044d0:	0018      	movs	r0, r3
 80044d2:	f7fe fb3e 	bl	8002b52 <HAL_GPIO_WritePin>
 80044d6:	193b      	adds	r3, r7, r4
 80044d8:	2202      	movs	r2, #2
 80044da:	601a      	str	r2, [r3, #0]
 80044dc:	193b      	adds	r3, r7, r4
 80044de:	2201      	movs	r2, #1
 80044e0:	605a      	str	r2, [r3, #4]
 80044e2:	193b      	adds	r3, r7, r4
 80044e4:	2200      	movs	r2, #0
 80044e6:	609a      	str	r2, [r3, #8]
 80044e8:	193b      	adds	r3, r7, r4
 80044ea:	2200      	movs	r2, #0
 80044ec:	60da      	str	r2, [r3, #12]
 80044ee:	193b      	adds	r3, r7, r4
 80044f0:	4a11      	ldr	r2, [pc, #68]	; (8004538 <MX_GPIO_Init+0xb4>)
 80044f2:	0019      	movs	r1, r3
 80044f4:	0010      	movs	r0, r2
 80044f6:	f7fe f9ab 	bl	8002850 <HAL_GPIO_Init>
 80044fa:	0021      	movs	r1, r4
 80044fc:	187b      	adds	r3, r7, r1
 80044fe:	2204      	movs	r2, #4
 8004500:	601a      	str	r2, [r3, #0]
 8004502:	187b      	adds	r3, r7, r1
 8004504:	22c4      	movs	r2, #196	; 0xc4
 8004506:	0392      	lsls	r2, r2, #14
 8004508:	605a      	str	r2, [r3, #4]
 800450a:	187b      	adds	r3, r7, r1
 800450c:	2201      	movs	r2, #1
 800450e:	609a      	str	r2, [r3, #8]
 8004510:	187b      	adds	r3, r7, r1
 8004512:	4a09      	ldr	r2, [pc, #36]	; (8004538 <MX_GPIO_Init+0xb4>)
 8004514:	0019      	movs	r1, r3
 8004516:	0010      	movs	r0, r2
 8004518:	f7fe f99a 	bl	8002850 <HAL_GPIO_Init>
 800451c:	2200      	movs	r2, #0
 800451e:	2100      	movs	r1, #0
 8004520:	2006      	movs	r0, #6
 8004522:	f7fd ff05 	bl	8002330 <HAL_NVIC_SetPriority>
 8004526:	2006      	movs	r0, #6
 8004528:	f7fd ff17 	bl	800235a <HAL_NVIC_EnableIRQ>
 800452c:	46c0      	nop			; (mov r8, r8)
 800452e:	46bd      	mov	sp, r7
 8004530:	b009      	add	sp, #36	; 0x24
 8004532:	bd90      	pop	{r4, r7, pc}
 8004534:	40021000 	.word	0x40021000
 8004538:	50000400 	.word	0x50000400

0800453c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800453c:	b580      	push	{r7, lr}
 800453e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8004540:	f7fd fdae 	bl	80020a0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004544:	f000 f80d 	bl	8004562 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8004548:	f7ff ff9c 	bl	8004484 <MX_GPIO_Init>
  MX_DMA_Init();
 800454c:	f7ff ff7c 	bl	8004448 <MX_DMA_Init>
  MX_SPI1_Init();
 8004550:	f000 f9be 	bl	80048d0 <MX_SPI1_Init>
  MX_TIM16_Init();
 8004554:	f000 fb06 	bl	8004b64 <MX_TIM16_Init>
  MX_TIM17_Init();
 8004558:	f000 fb2e 	bl	8004bb8 <MX_TIM17_Init>
  /* USER CODE BEGIN 2 */
	carStripe();
 800455c:	f7ff fd2c 	bl	8003fb8 <carStripe>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
 8004560:	e7fe      	b.n	8004560 <main+0x24>

08004562 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004562:	b590      	push	{r4, r7, lr}
 8004564:	b093      	sub	sp, #76	; 0x4c
 8004566:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004568:	2410      	movs	r4, #16
 800456a:	193b      	adds	r3, r7, r4
 800456c:	0018      	movs	r0, r3
 800456e:	2338      	movs	r3, #56	; 0x38
 8004570:	001a      	movs	r2, r3
 8004572:	2100      	movs	r1, #0
 8004574:	f001 fbd8 	bl	8005d28 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004578:	003b      	movs	r3, r7
 800457a:	0018      	movs	r0, r3
 800457c:	2310      	movs	r3, #16
 800457e:	001a      	movs	r2, r3
 8004580:	2100      	movs	r1, #0
 8004582:	f001 fbd1 	bl	8005d28 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8004586:	2380      	movs	r3, #128	; 0x80
 8004588:	009b      	lsls	r3, r3, #2
 800458a:	0018      	movs	r0, r3
 800458c:	f7fe fb28 	bl	8002be0 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004590:	193b      	adds	r3, r7, r4
 8004592:	2202      	movs	r2, #2
 8004594:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8004596:	193b      	adds	r3, r7, r4
 8004598:	2280      	movs	r2, #128	; 0x80
 800459a:	0052      	lsls	r2, r2, #1
 800459c:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 800459e:	0021      	movs	r1, r4
 80045a0:	187b      	adds	r3, r7, r1
 80045a2:	2200      	movs	r2, #0
 80045a4:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80045a6:	187b      	adds	r3, r7, r1
 80045a8:	2240      	movs	r2, #64	; 0x40
 80045aa:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80045ac:	187b      	adds	r3, r7, r1
 80045ae:	2202      	movs	r2, #2
 80045b0:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80045b2:	187b      	adds	r3, r7, r1
 80045b4:	2202      	movs	r2, #2
 80045b6:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 80045b8:	187b      	adds	r3, r7, r1
 80045ba:	2200      	movs	r2, #0
 80045bc:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLN = 8;
 80045be:	187b      	adds	r3, r7, r1
 80045c0:	2208      	movs	r2, #8
 80045c2:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80045c4:	187b      	adds	r3, r7, r1
 80045c6:	2280      	movs	r2, #128	; 0x80
 80045c8:	0292      	lsls	r2, r2, #10
 80045ca:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80045cc:	187b      	adds	r3, r7, r1
 80045ce:	2280      	movs	r2, #128	; 0x80
 80045d0:	0492      	lsls	r2, r2, #18
 80045d2:	631a      	str	r2, [r3, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80045d4:	187b      	adds	r3, r7, r1
 80045d6:	2280      	movs	r2, #128	; 0x80
 80045d8:	0592      	lsls	r2, r2, #22
 80045da:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80045dc:	187b      	adds	r3, r7, r1
 80045de:	0018      	movs	r0, r3
 80045e0:	f7fe fb3e 	bl	8002c60 <HAL_RCC_OscConfig>
 80045e4:	1e03      	subs	r3, r0, #0
 80045e6:	d001      	beq.n	80045ec <SystemClock_Config+0x8a>
  {
    Error_Handler();
 80045e8:	f000 f819 	bl	800461e <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80045ec:	003b      	movs	r3, r7
 80045ee:	2207      	movs	r2, #7
 80045f0:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80045f2:	003b      	movs	r3, r7
 80045f4:	2202      	movs	r2, #2
 80045f6:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80045f8:	003b      	movs	r3, r7
 80045fa:	2200      	movs	r2, #0
 80045fc:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80045fe:	003b      	movs	r3, r7
 8004600:	2200      	movs	r2, #0
 8004602:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8004604:	003b      	movs	r3, r7
 8004606:	2102      	movs	r1, #2
 8004608:	0018      	movs	r0, r3
 800460a:	f7fe fe43 	bl	8003294 <HAL_RCC_ClockConfig>
 800460e:	1e03      	subs	r3, r0, #0
 8004610:	d001      	beq.n	8004616 <SystemClock_Config+0xb4>
  {
    Error_Handler();
 8004612:	f000 f804 	bl	800461e <Error_Handler>
  }
}
 8004616:	46c0      	nop			; (mov r8, r8)
 8004618:	46bd      	mov	sp, r7
 800461a:	b013      	add	sp, #76	; 0x4c
 800461c:	bd90      	pop	{r4, r7, pc}

0800461e <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800461e:	b580      	push	{r7, lr}
 8004620:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004622:	b672      	cpsid	i
}
 8004624:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8004626:	e7fe      	b.n	8004626 <Error_Handler+0x8>

08004628 <radio433_receiverInit>:
 * @param: right shift for data from transmitter(1 for 1527 coding)
 * @param: bit mask for data from transmitter(0xf for 1527 encoding)
 */
void radio433_receiverInit(radio433_receiverTypeDef *radio, uint8_t frameLength,
		uint8_t idShift, uint32_t idBitMask, uint8_t dataShift,
		uint32_t dataBitMask) {
 8004628:	b590      	push	{r4, r7, lr}
 800462a:	b085      	sub	sp, #20
 800462c:	af00      	add	r7, sp, #0
 800462e:	60f8      	str	r0, [r7, #12]
 8004630:	0008      	movs	r0, r1
 8004632:	0011      	movs	r1, r2
 8004634:	607b      	str	r3, [r7, #4]
 8004636:	240b      	movs	r4, #11
 8004638:	193b      	adds	r3, r7, r4
 800463a:	1c02      	adds	r2, r0, #0
 800463c:	701a      	strb	r2, [r3, #0]
 800463e:	200a      	movs	r0, #10
 8004640:	183b      	adds	r3, r7, r0
 8004642:	1c0a      	adds	r2, r1, #0
 8004644:	701a      	strb	r2, [r3, #0]

	radio->frameLength = frameLength;
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	193a      	adds	r2, r7, r4
 800464a:	7812      	ldrb	r2, [r2, #0]
 800464c:	711a      	strb	r2, [r3, #4]

	radio->rxDataFrame = 0;
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	2200      	movs	r2, #0
 8004652:	609a      	str	r2, [r3, #8]

	radio->rxPort = RADIO433_UNDEFINED;
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	2200      	movs	r2, #0
 8004658:	60da      	str	r2, [r3, #12]
	radio->rxPin = RADIO433_UNDEFINED;
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	2200      	movs	r2, #0
 800465e:	821a      	strh	r2, [r3, #16]
	radio->timer = RADIO433_UNDEFINED;
 8004660:	68fb      	ldr	r3, [r7, #12]
 8004662:	2200      	movs	r2, #0
 8004664:	601a      	str	r2, [r3, #0]

	radio->actualReceivingBit = 0;
 8004666:	68fb      	ldr	r3, [r7, #12]
 8004668:	2200      	movs	r2, #0
 800466a:	749a      	strb	r2, [r3, #18]

	radio->idShift = idShift;
 800466c:	68fb      	ldr	r3, [r7, #12]
 800466e:	183a      	adds	r2, r7, r0
 8004670:	7812      	ldrb	r2, [r2, #0]
 8004672:	74da      	strb	r2, [r3, #19]
	radio->dataShift = dataShift;
 8004674:	68fa      	ldr	r2, [r7, #12]
 8004676:	2318      	movs	r3, #24
 8004678:	2108      	movs	r1, #8
 800467a:	185b      	adds	r3, r3, r1
 800467c:	19db      	adds	r3, r3, r7
 800467e:	781b      	ldrb	r3, [r3, #0]
 8004680:	7513      	strb	r3, [r2, #20]

	radio->idBitMask = idBitMask;
 8004682:	68fb      	ldr	r3, [r7, #12]
 8004684:	687a      	ldr	r2, [r7, #4]
 8004686:	619a      	str	r2, [r3, #24]
	radio->dataBitMask = dataBitMask;
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800468c:	61da      	str	r2, [r3, #28]

	radio->skippingReceivedCounter = 0;
 800468e:	68fb      	ldr	r3, [r7, #12]
 8004690:	2228      	movs	r2, #40	; 0x28
 8004692:	2100      	movs	r1, #0
 8004694:	5499      	strb	r1, [r3, r2]

}
 8004696:	46c0      	nop			; (mov r8, r8)
 8004698:	46bd      	mov	sp, r7
 800469a:	b005      	add	sp, #20
 800469c:	bd90      	pop	{r4, r7, pc}

0800469e <radio433_receiverAttach>:
 * @param: radio struct
 * @param: port
 * @param: pin
 */
void radio433_receiverAttach(radio433_receiverTypeDef *radio,
		GPIO_TypeDef *port, uint16_t pin, TIM_HandleTypeDef *timer) {
 800469e:	b580      	push	{r7, lr}
 80046a0:	b084      	sub	sp, #16
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	60f8      	str	r0, [r7, #12]
 80046a6:	60b9      	str	r1, [r7, #8]
 80046a8:	603b      	str	r3, [r7, #0]
 80046aa:	1dbb      	adds	r3, r7, #6
 80046ac:	801a      	strh	r2, [r3, #0]
	radio->rxPort = port;
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	68ba      	ldr	r2, [r7, #8]
 80046b2:	60da      	str	r2, [r3, #12]
	radio->rxPin = pin;
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	1dba      	adds	r2, r7, #6
 80046b8:	8812      	ldrh	r2, [r2, #0]
 80046ba:	821a      	strh	r2, [r3, #16]
	radio->timer = timer;
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	683a      	ldr	r2, [r7, #0]
 80046c0:	601a      	str	r2, [r3, #0]

	HAL_TIM_Base_Start(timer);
 80046c2:	683b      	ldr	r3, [r7, #0]
 80046c4:	0018      	movs	r0, r3
 80046c6:	f7ff fb95 	bl	8003df4 <HAL_TIM_Base_Start>
}
 80046ca:	46c0      	nop			; (mov r8, r8)
 80046cc:	46bd      	mov	sp, r7
 80046ce:	b004      	add	sp, #16
 80046d0:	bd80      	pop	{r7, pc}

080046d2 <_radio433_pullData>:

static uint32_t _radio433_pullData(uint32_t dataFrame, uint8_t shift,
		uint32_t bitMask) {
 80046d2:	b580      	push	{r7, lr}
 80046d4:	b084      	sub	sp, #16
 80046d6:	af00      	add	r7, sp, #0
 80046d8:	60f8      	str	r0, [r7, #12]
 80046da:	607a      	str	r2, [r7, #4]
 80046dc:	200b      	movs	r0, #11
 80046de:	183b      	adds	r3, r7, r0
 80046e0:	1c0a      	adds	r2, r1, #0
 80046e2:	701a      	strb	r2, [r3, #0]

	return (dataFrame >> shift) & bitMask;
 80046e4:	183b      	adds	r3, r7, r0
 80046e6:	781b      	ldrb	r3, [r3, #0]
 80046e8:	68fa      	ldr	r2, [r7, #12]
 80046ea:	40da      	lsrs	r2, r3
 80046ec:	0013      	movs	r3, r2
 80046ee:	687a      	ldr	r2, [r7, #4]
 80046f0:	4013      	ands	r3, r2

}
 80046f2:	0018      	movs	r0, r3
 80046f4:	46bd      	mov	sp, r7
 80046f6:	b004      	add	sp, #16
 80046f8:	bd80      	pop	{r7, pc}

080046fa <radio433_receiverReadData>:
 * @param: radio struct
 * @param: transmitter struct(for compare id)
 * @retval: data or 0
 */
uint32_t radio433_receiverReadData(radio433_receiverTypeDef *radio,
		radio433_transmitterTypeDef *transmitter) {
 80046fa:	b580      	push	{r7, lr}
 80046fc:	b084      	sub	sp, #16
 80046fe:	af00      	add	r7, sp, #0
 8004700:	6078      	str	r0, [r7, #4]
 8004702:	6039      	str	r1, [r7, #0]

	uint32_t retval;

	if (radio->id == transmitter->id) {
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	6a1a      	ldr	r2, [r3, #32]
 8004708:	683b      	ldr	r3, [r7, #0]
 800470a:	68db      	ldr	r3, [r3, #12]
 800470c:	429a      	cmp	r2, r3
 800470e:	d10d      	bne.n	800472c <radio433_receiverReadData+0x32>
		retval = radio->data;
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004714:	60fb      	str	r3, [r7, #12]

		//clear output
		radio->data = 0;
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	2200      	movs	r2, #0
 800471a:	625a      	str	r2, [r3, #36]	; 0x24
		radio->id = 0;
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2200      	movs	r2, #0
 8004720:	621a      	str	r2, [r3, #32]

		//reset skipping counter
		radio->skippingReceivedCounter = RADIO433_SKIPPING_AFTER_READ;
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	2228      	movs	r2, #40	; 0x28
 8004726:	2103      	movs	r1, #3
 8004728:	5499      	strb	r1, [r3, r2]
 800472a:	e005      	b.n	8004738 <radio433_receiverReadData+0x3e>

	} else {
		radio->skippingReceivedCounter = 0;
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	2228      	movs	r2, #40	; 0x28
 8004730:	2100      	movs	r1, #0
 8004732:	5499      	strb	r1, [r3, r2]
		retval = 0;
 8004734:	2300      	movs	r3, #0
 8004736:	60fb      	str	r3, [r7, #12]
	}

	return retval;
 8004738:	68fb      	ldr	r3, [r7, #12]

}
 800473a:	0018      	movs	r0, r3
 800473c:	46bd      	mov	sp, r7
 800473e:	b004      	add	sp, #16
 8004740:	bd80      	pop	{r7, pc}

08004742 <radio433_receiverCallbackEXTI>:
 *
 * @param: radio struct
 * @param: pin received from EXTI(GPIO_Pin)- for compare
 */
void radio433_receiverCallbackEXTI(radio433_receiverTypeDef *radio,
		uint16_t pin) {
 8004742:	b580      	push	{r7, lr}
 8004744:	b082      	sub	sp, #8
 8004746:	af00      	add	r7, sp, #0
 8004748:	6078      	str	r0, [r7, #4]
 800474a:	000a      	movs	r2, r1
 800474c:	1cbb      	adds	r3, r7, #2
 800474e:	801a      	strh	r2, [r3, #0]

	if (pin == radio->rxPin && radio->timer != RADIO433_UNDEFINED) {
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	8a1b      	ldrh	r3, [r3, #16]
 8004754:	1cba      	adds	r2, r7, #2
 8004756:	8812      	ldrh	r2, [r2, #0]
 8004758:	429a      	cmp	r2, r3
 800475a:	d000      	beq.n	800475e <radio433_receiverCallbackEXTI+0x1c>
 800475c:	e080      	b.n	8004860 <radio433_receiverCallbackEXTI+0x11e>
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	2b00      	cmp	r3, #0
 8004764:	d100      	bne.n	8004768 <radio433_receiverCallbackEXTI+0x26>
 8004766:	e07b      	b.n	8004860 <radio433_receiverCallbackEXTI+0x11e>



		if (HAL_GPIO_ReadPin(radio->rxPort, radio->rxPin) == GPIO_PIN_SET) { // rising edge
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	68da      	ldr	r2, [r3, #12]
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	8a1b      	ldrh	r3, [r3, #16]
 8004770:	0019      	movs	r1, r3
 8004772:	0010      	movs	r0, r2
 8004774:	f7fe f9d0 	bl	8002b18 <HAL_GPIO_ReadPin>
 8004778:	0003      	movs	r3, r0
 800477a:	2b01      	cmp	r3, #1
 800477c:	d110      	bne.n	80047a0 <radio433_receiverCallbackEXTI+0x5e>

			if (radio->timer->Instance->CNT
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004786:	23fa      	movs	r3, #250	; 0xfa
 8004788:	005b      	lsls	r3, r3, #1
 800478a:	429a      	cmp	r2, r3
 800478c:	d902      	bls.n	8004794 <radio433_receiverCallbackEXTI+0x52>
					> RADIO433_CNT_FRAME_INTERVAL_TRESHOLD) {
				radio->actualReceivingBit = 0;
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2200      	movs	r2, #0
 8004792:	749a      	strb	r2, [r3, #18]

			}
			radio->timer->Instance->CNT = 0;
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	2200      	movs	r2, #0
 800479c:	625a      	str	r2, [r3, #36]	; 0x24

				}
			}
		}
	}
}
 800479e:	e05f      	b.n	8004860 <radio433_receiverCallbackEXTI+0x11e>
			if (radio->timer->Instance->CNT > RADIO433_CNT_BIT_STATE_TRESHOLD) {
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a8:	2b63      	cmp	r3, #99	; 0x63
 80047aa:	d90e      	bls.n	80047ca <radio433_receiverCallbackEXTI+0x88>
								<< ((radio->frameLength - 1)
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	791b      	ldrb	r3, [r3, #4]
 80047b0:	3b01      	subs	r3, #1
										- radio->actualReceivingBit);
 80047b2:	687a      	ldr	r2, [r7, #4]
 80047b4:	7c92      	ldrb	r2, [r2, #18]
 80047b6:	b2d2      	uxtb	r2, r2
 80047b8:	1a9b      	subs	r3, r3, r2
								<< ((radio->frameLength - 1)
 80047ba:	2201      	movs	r2, #1
 80047bc:	409a      	lsls	r2, r3
				radio->rxDataFrame |=
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	689b      	ldr	r3, [r3, #8]
 80047c2:	431a      	orrs	r2, r3
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	609a      	str	r2, [r3, #8]
 80047c8:	e00f      	b.n	80047ea <radio433_receiverCallbackEXTI+0xa8>
								<< ((radio->frameLength - 1)
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	791b      	ldrb	r3, [r3, #4]
 80047ce:	3b01      	subs	r3, #1
										- radio->actualReceivingBit));
 80047d0:	687a      	ldr	r2, [r7, #4]
 80047d2:	7c92      	ldrb	r2, [r2, #18]
 80047d4:	b2d2      	uxtb	r2, r2
 80047d6:	1a9b      	subs	r3, r3, r2
								<< ((radio->frameLength - 1)
 80047d8:	2201      	movs	r2, #1
 80047da:	409a      	lsls	r2, r3
 80047dc:	0013      	movs	r3, r2
						~(1
 80047de:	43da      	mvns	r2, r3
				radio->rxDataFrame &=
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	689b      	ldr	r3, [r3, #8]
 80047e4:	401a      	ands	r2, r3
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	609a      	str	r2, [r3, #8]
			radio->actualReceivingBit++;
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	7c9b      	ldrb	r3, [r3, #18]
 80047ee:	b2db      	uxtb	r3, r3
 80047f0:	3301      	adds	r3, #1
 80047f2:	b2da      	uxtb	r2, r3
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	749a      	strb	r2, [r3, #18]
			if (radio->actualReceivingBit >= radio->frameLength) {
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	7c9b      	ldrb	r3, [r3, #18]
 80047fc:	b2da      	uxtb	r2, r3
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	791b      	ldrb	r3, [r3, #4]
 8004802:	429a      	cmp	r2, r3
 8004804:	d32c      	bcc.n	8004860 <radio433_receiverCallbackEXTI+0x11e>
				radio->actualReceivingBit = 0;
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	2200      	movs	r2, #0
 800480a:	749a      	strb	r2, [r3, #18]
				if (radio->skippingReceivedCounter > 0)
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	2228      	movs	r2, #40	; 0x28
 8004810:	5c9b      	ldrb	r3, [r3, r2]
 8004812:	2b00      	cmp	r3, #0
 8004814:	d007      	beq.n	8004826 <radio433_receiverCallbackEXTI+0xe4>
					radio->skippingReceivedCounter--;
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	2228      	movs	r2, #40	; 0x28
 800481a:	5c9b      	ldrb	r3, [r3, r2]
 800481c:	3b01      	subs	r3, #1
 800481e:	b2d9      	uxtb	r1, r3
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	2228      	movs	r2, #40	; 0x28
 8004824:	5499      	strb	r1, [r3, r2]
				if (radio->skippingReceivedCounter == 0) {
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	2228      	movs	r2, #40	; 0x28
 800482a:	5c9b      	ldrb	r3, [r3, r2]
 800482c:	2b00      	cmp	r3, #0
 800482e:	d117      	bne.n	8004860 <radio433_receiverCallbackEXTI+0x11e>
					radio->id = _radio433_pullData(radio->rxDataFrame,
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	6898      	ldr	r0, [r3, #8]
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	7cd9      	ldrb	r1, [r3, #19]
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	699b      	ldr	r3, [r3, #24]
 800483c:	001a      	movs	r2, r3
 800483e:	f7ff ff48 	bl	80046d2 <_radio433_pullData>
 8004842:	0002      	movs	r2, r0
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	621a      	str	r2, [r3, #32]
					radio->data = _radio433_pullData(radio->rxDataFrame,
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	6898      	ldr	r0, [r3, #8]
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	7d19      	ldrb	r1, [r3, #20]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	69db      	ldr	r3, [r3, #28]
 8004854:	001a      	movs	r2, r3
 8004856:	f7ff ff3c 	bl	80046d2 <_radio433_pullData>
 800485a:	0002      	movs	r2, r0
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8004860:	46c0      	nop			; (mov r8, r8)
 8004862:	46bd      	mov	sp, r7
 8004864:	b002      	add	sp, #8
 8004866:	bd80      	pop	{r7, pc}

08004868 <radio433_transmitterInit>:
 * @param: data shift
 * @param: data bit mask
 */
void radio433_transmitterInit(radio433_transmitterTypeDef *transmitter,
		uint32_t id, uint8_t frameLength, uint8_t idShift, uint32_t idBitMask,
		uint8_t dataShift, uint32_t dataBitMask) {
 8004868:	b580      	push	{r7, lr}
 800486a:	b084      	sub	sp, #16
 800486c:	af00      	add	r7, sp, #0
 800486e:	60f8      	str	r0, [r7, #12]
 8004870:	60b9      	str	r1, [r7, #8]
 8004872:	0019      	movs	r1, r3
 8004874:	1dfb      	adds	r3, r7, #7
 8004876:	701a      	strb	r2, [r3, #0]
 8004878:	1dbb      	adds	r3, r7, #6
 800487a:	1c0a      	adds	r2, r1, #0
 800487c:	701a      	strb	r2, [r3, #0]

	transmitter->frameLength = frameLength;
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	1dfa      	adds	r2, r7, #7
 8004882:	7812      	ldrb	r2, [r2, #0]
 8004884:	711a      	strb	r2, [r3, #4]
	transmitter->txDataFrame = 0;
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	2200      	movs	r2, #0
 800488a:	609a      	str	r2, [r3, #8]
	transmitter->id = id;
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	68ba      	ldr	r2, [r7, #8]
 8004890:	60da      	str	r2, [r3, #12]
	transmitter->data = 0;
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	2200      	movs	r2, #0
 8004896:	611a      	str	r2, [r3, #16]

	transmitter->txPort = RADIO433_UNDEFINED;
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	2200      	movs	r2, #0
 800489c:	615a      	str	r2, [r3, #20]
	transmitter->txPin = RADIO433_UNDEFINED;
 800489e:	68fb      	ldr	r3, [r7, #12]
 80048a0:	2200      	movs	r2, #0
 80048a2:	831a      	strh	r2, [r3, #24]
	transmitter->timer = RADIO433_UNDEFINED;
 80048a4:	68fb      	ldr	r3, [r7, #12]
 80048a6:	2200      	movs	r2, #0
 80048a8:	601a      	str	r2, [r3, #0]

	transmitter->idShift = idShift;
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	1dba      	adds	r2, r7, #6
 80048ae:	7812      	ldrb	r2, [r2, #0]
 80048b0:	769a      	strb	r2, [r3, #26]
	transmitter->dataShift = dataShift;
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	221c      	movs	r2, #28
 80048b6:	18ba      	adds	r2, r7, r2
 80048b8:	7812      	ldrb	r2, [r2, #0]
 80048ba:	76da      	strb	r2, [r3, #27]

	transmitter->idBitMask = idBitMask;
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	69ba      	ldr	r2, [r7, #24]
 80048c0:	61da      	str	r2, [r3, #28]
	transmitter->dataBitMask = dataBitMask;
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	6a3a      	ldr	r2, [r7, #32]
 80048c6:	621a      	str	r2, [r3, #32]

}
 80048c8:	46c0      	nop			; (mov r8, r8)
 80048ca:	46bd      	mov	sp, r7
 80048cc:	b004      	add	sp, #16
 80048ce:	bd80      	pop	{r7, pc}

080048d0 <MX_SPI1_Init>:
 80048d0:	b580      	push	{r7, lr}
 80048d2:	af00      	add	r7, sp, #0
 80048d4:	4b1b      	ldr	r3, [pc, #108]	; (8004944 <MX_SPI1_Init+0x74>)
 80048d6:	4a1c      	ldr	r2, [pc, #112]	; (8004948 <MX_SPI1_Init+0x78>)
 80048d8:	601a      	str	r2, [r3, #0]
 80048da:	4b1a      	ldr	r3, [pc, #104]	; (8004944 <MX_SPI1_Init+0x74>)
 80048dc:	2282      	movs	r2, #130	; 0x82
 80048de:	0052      	lsls	r2, r2, #1
 80048e0:	605a      	str	r2, [r3, #4]
 80048e2:	4b18      	ldr	r3, [pc, #96]	; (8004944 <MX_SPI1_Init+0x74>)
 80048e4:	2200      	movs	r2, #0
 80048e6:	609a      	str	r2, [r3, #8]
 80048e8:	4b16      	ldr	r3, [pc, #88]	; (8004944 <MX_SPI1_Init+0x74>)
 80048ea:	22e0      	movs	r2, #224	; 0xe0
 80048ec:	00d2      	lsls	r2, r2, #3
 80048ee:	60da      	str	r2, [r3, #12]
 80048f0:	4b14      	ldr	r3, [pc, #80]	; (8004944 <MX_SPI1_Init+0x74>)
 80048f2:	2200      	movs	r2, #0
 80048f4:	611a      	str	r2, [r3, #16]
 80048f6:	4b13      	ldr	r3, [pc, #76]	; (8004944 <MX_SPI1_Init+0x74>)
 80048f8:	2200      	movs	r2, #0
 80048fa:	615a      	str	r2, [r3, #20]
 80048fc:	4b11      	ldr	r3, [pc, #68]	; (8004944 <MX_SPI1_Init+0x74>)
 80048fe:	2280      	movs	r2, #128	; 0x80
 8004900:	0092      	lsls	r2, r2, #2
 8004902:	619a      	str	r2, [r3, #24]
 8004904:	4b0f      	ldr	r3, [pc, #60]	; (8004944 <MX_SPI1_Init+0x74>)
 8004906:	2210      	movs	r2, #16
 8004908:	61da      	str	r2, [r3, #28]
 800490a:	4b0e      	ldr	r3, [pc, #56]	; (8004944 <MX_SPI1_Init+0x74>)
 800490c:	2200      	movs	r2, #0
 800490e:	621a      	str	r2, [r3, #32]
 8004910:	4b0c      	ldr	r3, [pc, #48]	; (8004944 <MX_SPI1_Init+0x74>)
 8004912:	2200      	movs	r2, #0
 8004914:	625a      	str	r2, [r3, #36]	; 0x24
 8004916:	4b0b      	ldr	r3, [pc, #44]	; (8004944 <MX_SPI1_Init+0x74>)
 8004918:	2200      	movs	r2, #0
 800491a:	629a      	str	r2, [r3, #40]	; 0x28
 800491c:	4b09      	ldr	r3, [pc, #36]	; (8004944 <MX_SPI1_Init+0x74>)
 800491e:	2207      	movs	r2, #7
 8004920:	62da      	str	r2, [r3, #44]	; 0x2c
 8004922:	4b08      	ldr	r3, [pc, #32]	; (8004944 <MX_SPI1_Init+0x74>)
 8004924:	2200      	movs	r2, #0
 8004926:	631a      	str	r2, [r3, #48]	; 0x30
 8004928:	4b06      	ldr	r3, [pc, #24]	; (8004944 <MX_SPI1_Init+0x74>)
 800492a:	2208      	movs	r2, #8
 800492c:	635a      	str	r2, [r3, #52]	; 0x34
 800492e:	4b05      	ldr	r3, [pc, #20]	; (8004944 <MX_SPI1_Init+0x74>)
 8004930:	0018      	movs	r0, r3
 8004932:	f7fe fe39 	bl	80035a8 <HAL_SPI_Init>
 8004936:	1e03      	subs	r3, r0, #0
 8004938:	d001      	beq.n	800493e <MX_SPI1_Init+0x6e>
 800493a:	f7ff fe70 	bl	800461e <Error_Handler>
 800493e:	46c0      	nop			; (mov r8, r8)
 8004940:	46bd      	mov	sp, r7
 8004942:	bd80      	pop	{r7, pc}
 8004944:	200001cc 	.word	0x200001cc
 8004948:	40013000 	.word	0x40013000

0800494c <HAL_SPI_MspInit>:
 800494c:	b590      	push	{r4, r7, lr}
 800494e:	b08b      	sub	sp, #44	; 0x2c
 8004950:	af00      	add	r7, sp, #0
 8004952:	6078      	str	r0, [r7, #4]
 8004954:	2414      	movs	r4, #20
 8004956:	193b      	adds	r3, r7, r4
 8004958:	0018      	movs	r0, r3
 800495a:	2314      	movs	r3, #20
 800495c:	001a      	movs	r2, r3
 800495e:	2100      	movs	r1, #0
 8004960:	f001 f9e2 	bl	8005d28 <memset>
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	4a30      	ldr	r2, [pc, #192]	; (8004a2c <HAL_SPI_MspInit+0xe0>)
 800496a:	4293      	cmp	r3, r2
 800496c:	d15a      	bne.n	8004a24 <HAL_SPI_MspInit+0xd8>
 800496e:	4b30      	ldr	r3, [pc, #192]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 8004970:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004972:	4b2f      	ldr	r3, [pc, #188]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 8004974:	2180      	movs	r1, #128	; 0x80
 8004976:	0149      	lsls	r1, r1, #5
 8004978:	430a      	orrs	r2, r1
 800497a:	641a      	str	r2, [r3, #64]	; 0x40
 800497c:	4b2c      	ldr	r3, [pc, #176]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 800497e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004980:	2380      	movs	r3, #128	; 0x80
 8004982:	015b      	lsls	r3, r3, #5
 8004984:	4013      	ands	r3, r2
 8004986:	613b      	str	r3, [r7, #16]
 8004988:	693b      	ldr	r3, [r7, #16]
 800498a:	4b29      	ldr	r3, [pc, #164]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 800498c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800498e:	4b28      	ldr	r3, [pc, #160]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 8004990:	2101      	movs	r1, #1
 8004992:	430a      	orrs	r2, r1
 8004994:	635a      	str	r2, [r3, #52]	; 0x34
 8004996:	4b26      	ldr	r3, [pc, #152]	; (8004a30 <HAL_SPI_MspInit+0xe4>)
 8004998:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800499a:	2201      	movs	r2, #1
 800499c:	4013      	ands	r3, r2
 800499e:	60fb      	str	r3, [r7, #12]
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	0021      	movs	r1, r4
 80049a4:	187b      	adds	r3, r7, r1
 80049a6:	2206      	movs	r2, #6
 80049a8:	601a      	str	r2, [r3, #0]
 80049aa:	187b      	adds	r3, r7, r1
 80049ac:	2202      	movs	r2, #2
 80049ae:	605a      	str	r2, [r3, #4]
 80049b0:	187b      	adds	r3, r7, r1
 80049b2:	2200      	movs	r2, #0
 80049b4:	609a      	str	r2, [r3, #8]
 80049b6:	187b      	adds	r3, r7, r1
 80049b8:	2200      	movs	r2, #0
 80049ba:	60da      	str	r2, [r3, #12]
 80049bc:	187b      	adds	r3, r7, r1
 80049be:	2200      	movs	r2, #0
 80049c0:	611a      	str	r2, [r3, #16]
 80049c2:	187a      	adds	r2, r7, r1
 80049c4:	23a0      	movs	r3, #160	; 0xa0
 80049c6:	05db      	lsls	r3, r3, #23
 80049c8:	0011      	movs	r1, r2
 80049ca:	0018      	movs	r0, r3
 80049cc:	f7fd ff40 	bl	8002850 <HAL_GPIO_Init>
 80049d0:	4b18      	ldr	r3, [pc, #96]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049d2:	4a19      	ldr	r2, [pc, #100]	; (8004a38 <HAL_SPI_MspInit+0xec>)
 80049d4:	601a      	str	r2, [r3, #0]
 80049d6:	4b17      	ldr	r3, [pc, #92]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049d8:	2211      	movs	r2, #17
 80049da:	605a      	str	r2, [r3, #4]
 80049dc:	4b15      	ldr	r3, [pc, #84]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049de:	2210      	movs	r2, #16
 80049e0:	609a      	str	r2, [r3, #8]
 80049e2:	4b14      	ldr	r3, [pc, #80]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049e4:	2200      	movs	r2, #0
 80049e6:	60da      	str	r2, [r3, #12]
 80049e8:	4b12      	ldr	r3, [pc, #72]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049ea:	2280      	movs	r2, #128	; 0x80
 80049ec:	611a      	str	r2, [r3, #16]
 80049ee:	4b11      	ldr	r3, [pc, #68]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049f0:	2200      	movs	r2, #0
 80049f2:	615a      	str	r2, [r3, #20]
 80049f4:	4b0f      	ldr	r3, [pc, #60]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049f6:	2200      	movs	r2, #0
 80049f8:	619a      	str	r2, [r3, #24]
 80049fa:	4b0e      	ldr	r3, [pc, #56]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 80049fc:	2200      	movs	r2, #0
 80049fe:	61da      	str	r2, [r3, #28]
 8004a00:	4b0c      	ldr	r3, [pc, #48]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 8004a02:	2280      	movs	r2, #128	; 0x80
 8004a04:	0192      	lsls	r2, r2, #6
 8004a06:	621a      	str	r2, [r3, #32]
 8004a08:	4b0a      	ldr	r3, [pc, #40]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 8004a0a:	0018      	movs	r0, r3
 8004a0c:	f7fd fcc2 	bl	8002394 <HAL_DMA_Init>
 8004a10:	1e03      	subs	r3, r0, #0
 8004a12:	d001      	beq.n	8004a18 <HAL_SPI_MspInit+0xcc>
 8004a14:	f7ff fe03 	bl	800461e <Error_Handler>
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	4a06      	ldr	r2, [pc, #24]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 8004a1c:	655a      	str	r2, [r3, #84]	; 0x54
 8004a1e:	4b05      	ldr	r3, [pc, #20]	; (8004a34 <HAL_SPI_MspInit+0xe8>)
 8004a20:	687a      	ldr	r2, [r7, #4]
 8004a22:	629a      	str	r2, [r3, #40]	; 0x28
 8004a24:	46c0      	nop			; (mov r8, r8)
 8004a26:	46bd      	mov	sp, r7
 8004a28:	b00b      	add	sp, #44	; 0x2c
 8004a2a:	bd90      	pop	{r4, r7, pc}
 8004a2c:	40013000 	.word	0x40013000
 8004a30:	40021000 	.word	0x40021000
 8004a34:	20000230 	.word	0x20000230
 8004a38:	40020008 	.word	0x40020008

08004a3c <HAL_MspInit>:
 8004a3c:	b580      	push	{r7, lr}
 8004a3e:	b082      	sub	sp, #8
 8004a40:	af00      	add	r7, sp, #0
 8004a42:	4b11      	ldr	r3, [pc, #68]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a44:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004a46:	4b10      	ldr	r3, [pc, #64]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a48:	2101      	movs	r1, #1
 8004a4a:	430a      	orrs	r2, r1
 8004a4c:	641a      	str	r2, [r3, #64]	; 0x40
 8004a4e:	4b0e      	ldr	r3, [pc, #56]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a52:	2201      	movs	r2, #1
 8004a54:	4013      	ands	r3, r2
 8004a56:	607b      	str	r3, [r7, #4]
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	4b0b      	ldr	r3, [pc, #44]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a5c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004a5e:	4b0a      	ldr	r3, [pc, #40]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a60:	2180      	movs	r1, #128	; 0x80
 8004a62:	0549      	lsls	r1, r1, #21
 8004a64:	430a      	orrs	r2, r1
 8004a66:	63da      	str	r2, [r3, #60]	; 0x3c
 8004a68:	4b07      	ldr	r3, [pc, #28]	; (8004a88 <HAL_MspInit+0x4c>)
 8004a6a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004a6c:	2380      	movs	r3, #128	; 0x80
 8004a6e:	055b      	lsls	r3, r3, #21
 8004a70:	4013      	ands	r3, r2
 8004a72:	603b      	str	r3, [r7, #0]
 8004a74:	683b      	ldr	r3, [r7, #0]
 8004a76:	2380      	movs	r3, #128	; 0x80
 8004a78:	009b      	lsls	r3, r3, #2
 8004a7a:	0018      	movs	r0, r3
 8004a7c:	f7fd fb96 	bl	80021ac <HAL_SYSCFG_StrobeDBattpinsConfig>
 8004a80:	46c0      	nop			; (mov r8, r8)
 8004a82:	46bd      	mov	sp, r7
 8004a84:	b002      	add	sp, #8
 8004a86:	bd80      	pop	{r7, pc}
 8004a88:	40021000 	.word	0x40021000

08004a8c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004a8c:	b580      	push	{r7, lr}
 8004a8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
	while (1) {
 8004a90:	e7fe      	b.n	8004a90 <NMI_Handler+0x4>

08004a92 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004a92:	b580      	push	{r7, lr}
 8004a94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004a96:	e7fe      	b.n	8004a96 <HardFault_Handler+0x4>

08004a98 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8004a9c:	46c0      	nop			; (mov r8, r8)
 8004a9e:	46bd      	mov	sp, r7
 8004aa0:	bd80      	pop	{r7, pc}

08004aa2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004aa2:	b580      	push	{r7, lr}
 8004aa4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004aa6:	46c0      	nop			; (mov r8, r8)
 8004aa8:	46bd      	mov	sp, r7
 8004aaa:	bd80      	pop	{r7, pc}

08004aac <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004aac:	b580      	push	{r7, lr}
 8004aae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */
	carStripeResetWaitingForCommand();
 8004ab0:	f7ff fca6 	bl	8004400 <carStripeResetWaitingForCommand>
	wsfx_interruptCallback();
 8004ab4:	f000 fca2 	bl	80053fc <wsfx_interruptCallback>
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004ab8:	f7fd fb5c 	bl	8002174 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004abc:	46c0      	nop			; (mov r8, r8)
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	bd80      	pop	{r7, pc}

08004ac2 <EXTI2_3_IRQHandler>:

/**
  * @brief This function handles EXTI line 2 and line 3 interrupts.
  */
void EXTI2_3_IRQHandler(void)
{
 8004ac2:	b580      	push	{r7, lr}
 8004ac4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_3_IRQn 0 */

  /* USER CODE END EXTI2_3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(RADIO_RX_Pin);
 8004ac6:	2004      	movs	r0, #4
 8004ac8:	f7fe f860 	bl	8002b8c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_3_IRQn 1 */

  /* USER CODE END EXTI2_3_IRQn 1 */
}
 8004acc:	46c0      	nop			; (mov r8, r8)
 8004ace:	46bd      	mov	sp, r7
 8004ad0:	bd80      	pop	{r7, pc}
	...

08004ad4 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8004ad4:	b580      	push	{r7, lr}
 8004ad6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8004ad8:	4b03      	ldr	r3, [pc, #12]	; (8004ae8 <DMA1_Channel1_IRQHandler+0x14>)
 8004ada:	0018      	movs	r0, r3
 8004adc:	f7fd fd6a 	bl	80025b4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8004ae0:	46c0      	nop			; (mov r8, r8)
 8004ae2:	46bd      	mov	sp, r7
 8004ae4:	bd80      	pop	{r7, pc}
 8004ae6:	46c0      	nop			; (mov r8, r8)
 8004ae8:	20000230 	.word	0x20000230

08004aec <_sbrk>:
 8004aec:	b580      	push	{r7, lr}
 8004aee:	b086      	sub	sp, #24
 8004af0:	af00      	add	r7, sp, #0
 8004af2:	6078      	str	r0, [r7, #4]
 8004af4:	4a14      	ldr	r2, [pc, #80]	; (8004b48 <_sbrk+0x5c>)
 8004af6:	4b15      	ldr	r3, [pc, #84]	; (8004b4c <_sbrk+0x60>)
 8004af8:	1ad3      	subs	r3, r2, r3
 8004afa:	617b      	str	r3, [r7, #20]
 8004afc:	697b      	ldr	r3, [r7, #20]
 8004afe:	613b      	str	r3, [r7, #16]
 8004b00:	4b13      	ldr	r3, [pc, #76]	; (8004b50 <_sbrk+0x64>)
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d102      	bne.n	8004b0e <_sbrk+0x22>
 8004b08:	4b11      	ldr	r3, [pc, #68]	; (8004b50 <_sbrk+0x64>)
 8004b0a:	4a12      	ldr	r2, [pc, #72]	; (8004b54 <_sbrk+0x68>)
 8004b0c:	601a      	str	r2, [r3, #0]
 8004b0e:	4b10      	ldr	r3, [pc, #64]	; (8004b50 <_sbrk+0x64>)
 8004b10:	681a      	ldr	r2, [r3, #0]
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	18d3      	adds	r3, r2, r3
 8004b16:	693a      	ldr	r2, [r7, #16]
 8004b18:	429a      	cmp	r2, r3
 8004b1a:	d207      	bcs.n	8004b2c <_sbrk+0x40>
 8004b1c:	f001 f91e 	bl	8005d5c <__errno>
 8004b20:	0003      	movs	r3, r0
 8004b22:	220c      	movs	r2, #12
 8004b24:	601a      	str	r2, [r3, #0]
 8004b26:	2301      	movs	r3, #1
 8004b28:	425b      	negs	r3, r3
 8004b2a:	e009      	b.n	8004b40 <_sbrk+0x54>
 8004b2c:	4b08      	ldr	r3, [pc, #32]	; (8004b50 <_sbrk+0x64>)
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	60fb      	str	r3, [r7, #12]
 8004b32:	4b07      	ldr	r3, [pc, #28]	; (8004b50 <_sbrk+0x64>)
 8004b34:	681a      	ldr	r2, [r3, #0]
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	18d2      	adds	r2, r2, r3
 8004b3a:	4b05      	ldr	r3, [pc, #20]	; (8004b50 <_sbrk+0x64>)
 8004b3c:	601a      	str	r2, [r3, #0]
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	0018      	movs	r0, r3
 8004b42:	46bd      	mov	sp, r7
 8004b44:	b006      	add	sp, #24
 8004b46:	bd80      	pop	{r7, pc}
 8004b48:	20009000 	.word	0x20009000
 8004b4c:	00000400 	.word	0x00000400
 8004b50:	2000028c 	.word	0x2000028c
 8004b54:	20000478 	.word	0x20000478

08004b58 <SystemInit>:
 8004b58:	b580      	push	{r7, lr}
 8004b5a:	af00      	add	r7, sp, #0
 8004b5c:	46c0      	nop			; (mov r8, r8)
 8004b5e:	46bd      	mov	sp, r7
 8004b60:	bd80      	pop	{r7, pc}
	...

08004b64 <MX_TIM16_Init>:
 8004b64:	b580      	push	{r7, lr}
 8004b66:	af00      	add	r7, sp, #0
 8004b68:	4b0f      	ldr	r3, [pc, #60]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b6a:	4a10      	ldr	r2, [pc, #64]	; (8004bac <MX_TIM16_Init+0x48>)
 8004b6c:	601a      	str	r2, [r3, #0]
 8004b6e:	4b0e      	ldr	r3, [pc, #56]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b70:	4a0f      	ldr	r2, [pc, #60]	; (8004bb0 <MX_TIM16_Init+0x4c>)
 8004b72:	605a      	str	r2, [r3, #4]
 8004b74:	4b0c      	ldr	r3, [pc, #48]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b76:	2200      	movs	r2, #0
 8004b78:	609a      	str	r2, [r3, #8]
 8004b7a:	4b0b      	ldr	r3, [pc, #44]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b7c:	4a0d      	ldr	r2, [pc, #52]	; (8004bb4 <MX_TIM16_Init+0x50>)
 8004b7e:	60da      	str	r2, [r3, #12]
 8004b80:	4b09      	ldr	r3, [pc, #36]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b82:	2200      	movs	r2, #0
 8004b84:	611a      	str	r2, [r3, #16]
 8004b86:	4b08      	ldr	r3, [pc, #32]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b88:	2200      	movs	r2, #0
 8004b8a:	615a      	str	r2, [r3, #20]
 8004b8c:	4b06      	ldr	r3, [pc, #24]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b8e:	2200      	movs	r2, #0
 8004b90:	619a      	str	r2, [r3, #24]
 8004b92:	4b05      	ldr	r3, [pc, #20]	; (8004ba8 <MX_TIM16_Init+0x44>)
 8004b94:	0018      	movs	r0, r3
 8004b96:	f7ff f8d5 	bl	8003d44 <HAL_TIM_Base_Init>
 8004b9a:	1e03      	subs	r3, r0, #0
 8004b9c:	d001      	beq.n	8004ba2 <MX_TIM16_Init+0x3e>
 8004b9e:	f7ff fd3e 	bl	800461e <Error_Handler>
 8004ba2:	46c0      	nop			; (mov r8, r8)
 8004ba4:	46bd      	mov	sp, r7
 8004ba6:	bd80      	pop	{r7, pc}
 8004ba8:	20000290 	.word	0x20000290
 8004bac:	40014400 	.word	0x40014400
 8004bb0:	000001ff 	.word	0x000001ff
 8004bb4:	0000ffff 	.word	0x0000ffff

08004bb8 <MX_TIM17_Init>:
 8004bb8:	b580      	push	{r7, lr}
 8004bba:	af00      	add	r7, sp, #0
 8004bbc:	4b0f      	ldr	r3, [pc, #60]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bbe:	4a10      	ldr	r2, [pc, #64]	; (8004c00 <MX_TIM17_Init+0x48>)
 8004bc0:	601a      	str	r2, [r3, #0]
 8004bc2:	4b0e      	ldr	r3, [pc, #56]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bc4:	4a0f      	ldr	r2, [pc, #60]	; (8004c04 <MX_TIM17_Init+0x4c>)
 8004bc6:	605a      	str	r2, [r3, #4]
 8004bc8:	4b0c      	ldr	r3, [pc, #48]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bca:	2200      	movs	r2, #0
 8004bcc:	609a      	str	r2, [r3, #8]
 8004bce:	4b0b      	ldr	r3, [pc, #44]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bd0:	4a0d      	ldr	r2, [pc, #52]	; (8004c08 <MX_TIM17_Init+0x50>)
 8004bd2:	60da      	str	r2, [r3, #12]
 8004bd4:	4b09      	ldr	r3, [pc, #36]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bd6:	2200      	movs	r2, #0
 8004bd8:	611a      	str	r2, [r3, #16]
 8004bda:	4b08      	ldr	r3, [pc, #32]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004bdc:	2200      	movs	r2, #0
 8004bde:	615a      	str	r2, [r3, #20]
 8004be0:	4b06      	ldr	r3, [pc, #24]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004be2:	2200      	movs	r2, #0
 8004be4:	619a      	str	r2, [r3, #24]
 8004be6:	4b05      	ldr	r3, [pc, #20]	; (8004bfc <MX_TIM17_Init+0x44>)
 8004be8:	0018      	movs	r0, r3
 8004bea:	f7ff f8ab 	bl	8003d44 <HAL_TIM_Base_Init>
 8004bee:	1e03      	subs	r3, r0, #0
 8004bf0:	d001      	beq.n	8004bf6 <MX_TIM17_Init+0x3e>
 8004bf2:	f7ff fd14 	bl	800461e <Error_Handler>
 8004bf6:	46c0      	nop			; (mov r8, r8)
 8004bf8:	46bd      	mov	sp, r7
 8004bfa:	bd80      	pop	{r7, pc}
 8004bfc:	200002dc 	.word	0x200002dc
 8004c00:	40014800 	.word	0x40014800
 8004c04:	000001ff 	.word	0x000001ff
 8004c08:	0000ffff 	.word	0x0000ffff

08004c0c <HAL_TIM_Base_MspInit>:
 8004c0c:	b580      	push	{r7, lr}
 8004c0e:	b084      	sub	sp, #16
 8004c10:	af00      	add	r7, sp, #0
 8004c12:	6078      	str	r0, [r7, #4]
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a14      	ldr	r2, [pc, #80]	; (8004c6c <HAL_TIM_Base_MspInit+0x60>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d10e      	bne.n	8004c3c <HAL_TIM_Base_MspInit+0x30>
 8004c1e:	4b14      	ldr	r3, [pc, #80]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c20:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c22:	4b13      	ldr	r3, [pc, #76]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c24:	2180      	movs	r1, #128	; 0x80
 8004c26:	0289      	lsls	r1, r1, #10
 8004c28:	430a      	orrs	r2, r1
 8004c2a:	641a      	str	r2, [r3, #64]	; 0x40
 8004c2c:	4b10      	ldr	r3, [pc, #64]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c2e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c30:	2380      	movs	r3, #128	; 0x80
 8004c32:	029b      	lsls	r3, r3, #10
 8004c34:	4013      	ands	r3, r2
 8004c36:	60fb      	str	r3, [r7, #12]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	e012      	b.n	8004c62 <HAL_TIM_Base_MspInit+0x56>
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	4a0c      	ldr	r2, [pc, #48]	; (8004c74 <HAL_TIM_Base_MspInit+0x68>)
 8004c42:	4293      	cmp	r3, r2
 8004c44:	d10d      	bne.n	8004c62 <HAL_TIM_Base_MspInit+0x56>
 8004c46:	4b0a      	ldr	r3, [pc, #40]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c48:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c4a:	4b09      	ldr	r3, [pc, #36]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c4c:	2180      	movs	r1, #128	; 0x80
 8004c4e:	02c9      	lsls	r1, r1, #11
 8004c50:	430a      	orrs	r2, r1
 8004c52:	641a      	str	r2, [r3, #64]	; 0x40
 8004c54:	4b06      	ldr	r3, [pc, #24]	; (8004c70 <HAL_TIM_Base_MspInit+0x64>)
 8004c56:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c58:	2380      	movs	r3, #128	; 0x80
 8004c5a:	02db      	lsls	r3, r3, #11
 8004c5c:	4013      	ands	r3, r2
 8004c5e:	60bb      	str	r3, [r7, #8]
 8004c60:	68bb      	ldr	r3, [r7, #8]
 8004c62:	46c0      	nop			; (mov r8, r8)
 8004c64:	46bd      	mov	sp, r7
 8004c66:	b004      	add	sp, #16
 8004c68:	bd80      	pop	{r7, pc}
 8004c6a:	46c0      	nop			; (mov r8, r8)
 8004c6c:	40014400 	.word	0x40014400
 8004c70:	40021000 	.word	0x40021000
 8004c74:	40014800 	.word	0x40014800

08004c78 <WS2812B_init>:

static void _WS2812B_bitsToBytes(uint8_t *destination, uint8_t *source,
		uint16_t sourceSize, uint16_t rightShift, uint8_t high, int8_t low);

void WS2812B_init(ws2812_Stripe_TypeDef *stripe, SPI_HandleTypeDef *spi,
		uint16_t ledCount) {
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b084      	sub	sp, #16
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	60f8      	str	r0, [r7, #12]
 8004c80:	60b9      	str	r1, [r7, #8]
 8004c82:	1dbb      	adds	r3, r7, #6
 8004c84:	801a      	strh	r2, [r3, #0]
	stripe->spi = spi;
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	68ba      	ldr	r2, [r7, #8]
 8004c8a:	601a      	str	r2, [r3, #0]
	stripe->ledCount = ledCount;
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	1dba      	adds	r2, r7, #6
 8004c90:	8812      	ldrh	r2, [r2, #0]
 8004c92:	811a      	strh	r2, [r3, #8]
	stripe->colorBuffer = malloc(stripe->ledCount * 3);
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	891b      	ldrh	r3, [r3, #8]
 8004c98:	001a      	movs	r2, r3
 8004c9a:	0013      	movs	r3, r2
 8004c9c:	005b      	lsls	r3, r3, #1
 8004c9e:	189b      	adds	r3, r3, r2
 8004ca0:	0018      	movs	r0, r3
 8004ca2:	f000 ff83 	bl	8005bac <malloc>
 8004ca6:	0003      	movs	r3, r0
 8004ca8:	001a      	movs	r2, r3
 8004caa:	68fb      	ldr	r3, [r7, #12]
 8004cac:	605a      	str	r2, [r3, #4]
	memset(stripe->colorBuffer, 0x0, stripe->ledCount * 3);
 8004cae:	68fb      	ldr	r3, [r7, #12]
 8004cb0:	6858      	ldr	r0, [r3, #4]
 8004cb2:	68fb      	ldr	r3, [r7, #12]
 8004cb4:	891b      	ldrh	r3, [r3, #8]
 8004cb6:	001a      	movs	r2, r3
 8004cb8:	0013      	movs	r3, r2
 8004cba:	005b      	lsls	r3, r3, #1
 8004cbc:	189b      	adds	r3, r3, r2
 8004cbe:	001a      	movs	r2, r3
 8004cc0:	2100      	movs	r1, #0
 8004cc2:	f001 f831 	bl	8005d28 <memset>
}
 8004cc6:	46c0      	nop			; (mov r8, r8)
 8004cc8:	46bd      	mov	sp, r7
 8004cca:	b004      	add	sp, #16
 8004ccc:	bd80      	pop	{r7, pc}

08004cce <WS2812B_setLedColorRGB>:

void WS2812B_setLedColorRGB(ws2812_Stripe_TypeDef *stripe, uint16_t id,
		uint32_t color) {
 8004cce:	b5b0      	push	{r4, r5, r7, lr}
 8004cd0:	b086      	sub	sp, #24
 8004cd2:	af00      	add	r7, sp, #0
 8004cd4:	60f8      	str	r0, [r7, #12]
 8004cd6:	607a      	str	r2, [r7, #4]
 8004cd8:	200a      	movs	r0, #10
 8004cda:	183b      	adds	r3, r7, r0
 8004cdc:	1c0a      	adds	r2, r1, #0
 8004cde:	801a      	strh	r2, [r3, #0]

	if (id >= stripe->ledCount || id < 0)
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	891b      	ldrh	r3, [r3, #8]
 8004ce4:	183a      	adds	r2, r7, r0
 8004ce6:	8812      	ldrh	r2, [r2, #0]
 8004ce8:	429a      	cmp	r2, r3
 8004cea:	d227      	bcs.n	8004d3c <WS2812B_setLedColorRGB+0x6e>
		return;

	uint8_t red = (color >> 16) & 0xff;
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	0c1a      	lsrs	r2, r3, #16
 8004cf0:	2117      	movs	r1, #23
 8004cf2:	187b      	adds	r3, r7, r1
 8004cf4:	701a      	strb	r2, [r3, #0]
	uint8_t green = (color >> 8) & 0xff;
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	0a1a      	lsrs	r2, r3, #8
 8004cfa:	2416      	movs	r4, #22
 8004cfc:	193b      	adds	r3, r7, r4
 8004cfe:	701a      	strb	r2, [r3, #0]
	uint8_t blue = color & 0xff;
 8004d00:	2515      	movs	r5, #21
 8004d02:	197b      	adds	r3, r7, r5
 8004d04:	687a      	ldr	r2, [r7, #4]
 8004d06:	701a      	strb	r2, [r3, #0]

	uint32_t convertedColor = blue << 16 | red << 8 | green;
 8004d08:	197b      	adds	r3, r7, r5
 8004d0a:	781b      	ldrb	r3, [r3, #0]
 8004d0c:	041a      	lsls	r2, r3, #16
 8004d0e:	187b      	adds	r3, r7, r1
 8004d10:	781b      	ldrb	r3, [r3, #0]
 8004d12:	021b      	lsls	r3, r3, #8
 8004d14:	431a      	orrs	r2, r3
 8004d16:	193b      	adds	r3, r7, r4
 8004d18:	781b      	ldrb	r3, [r3, #0]
 8004d1a:	4313      	orrs	r3, r2
 8004d1c:	613b      	str	r3, [r7, #16]

	memcpy(&stripe->colorBuffer[id * 3], &convertedColor, 3);
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	6859      	ldr	r1, [r3, #4]
 8004d22:	183b      	adds	r3, r7, r0
 8004d24:	881a      	ldrh	r2, [r3, #0]
 8004d26:	0013      	movs	r3, r2
 8004d28:	005b      	lsls	r3, r3, #1
 8004d2a:	189b      	adds	r3, r3, r2
 8004d2c:	18cb      	adds	r3, r1, r3
 8004d2e:	2210      	movs	r2, #16
 8004d30:	18b9      	adds	r1, r7, r2
 8004d32:	2203      	movs	r2, #3
 8004d34:	0018      	movs	r0, r3
 8004d36:	f001 f83d 	bl	8005db4 <memcpy>
 8004d3a:	e000      	b.n	8004d3e <WS2812B_setLedColorRGB+0x70>
		return;
 8004d3c:	46c0      	nop			; (mov r8, r8)

}
 8004d3e:	46bd      	mov	sp, r7
 8004d40:	b006      	add	sp, #24
 8004d42:	bdb0      	pop	{r4, r5, r7, pc}

08004d44 <WS2812B_setLedColorHSV>:

void WS2812B_setLedColorHSV(ws2812_Stripe_TypeDef *stripe, uint16_t id,
		uint16_t hueDegree, uint8_t saturation, uint8_t value) {
 8004d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d46:	b08f      	sub	sp, #60	; 0x3c
 8004d48:	af00      	add	r7, sp, #0
 8004d4a:	60f8      	str	r0, [r7, #12]
 8004d4c:	000c      	movs	r4, r1
 8004d4e:	0010      	movs	r0, r2
 8004d50:	0019      	movs	r1, r3
 8004d52:	230a      	movs	r3, #10
 8004d54:	18fb      	adds	r3, r7, r3
 8004d56:	1c22      	adds	r2, r4, #0
 8004d58:	801a      	strh	r2, [r3, #0]
 8004d5a:	2408      	movs	r4, #8
 8004d5c:	193b      	adds	r3, r7, r4
 8004d5e:	1c02      	adds	r2, r0, #0
 8004d60:	801a      	strh	r2, [r3, #0]
 8004d62:	1dfb      	adds	r3, r7, #7
 8004d64:	1c0a      	adds	r2, r1, #0
 8004d66:	701a      	strb	r2, [r3, #0]

	uint8_t red, green, blue;
	float redPrime, greenPrime, bluePrime;

	if (hueDegree >= 360)
 8004d68:	193b      	adds	r3, r7, r4
 8004d6a:	881a      	ldrh	r2, [r3, #0]
 8004d6c:	23b4      	movs	r3, #180	; 0xb4
 8004d6e:	005b      	lsls	r3, r3, #1
 8004d70:	429a      	cmp	r2, r3
 8004d72:	d303      	bcc.n	8004d7c <WS2812B_setLedColorHSV+0x38>
		hueDegree = 360;
 8004d74:	193b      	adds	r3, r7, r4
 8004d76:	22b4      	movs	r2, #180	; 0xb4
 8004d78:	0052      	lsls	r2, r2, #1
 8004d7a:	801a      	strh	r2, [r3, #0]

	float value_f = (float) value / 255;
 8004d7c:	2348      	movs	r3, #72	; 0x48
 8004d7e:	2208      	movs	r2, #8
 8004d80:	189b      	adds	r3, r3, r2
 8004d82:	19db      	adds	r3, r3, r7
 8004d84:	781b      	ldrb	r3, [r3, #0]
 8004d86:	0018      	movs	r0, r3
 8004d88:	f7fc fa12 	bl	80011b0 <__aeabi_ui2f>
 8004d8c:	1c03      	adds	r3, r0, #0
 8004d8e:	4980      	ldr	r1, [pc, #512]	; (8004f90 <WS2812B_setLedColorHSV+0x24c>)
 8004d90:	1c18      	adds	r0, r3, #0
 8004d92:	f7fb fd1f 	bl	80007d4 <__aeabi_fdiv>
 8004d96:	1c03      	adds	r3, r0, #0
 8004d98:	62bb      	str	r3, [r7, #40]	; 0x28
	float saturation_f = (float) saturation / 255;
 8004d9a:	1dfb      	adds	r3, r7, #7
 8004d9c:	781b      	ldrb	r3, [r3, #0]
 8004d9e:	0018      	movs	r0, r3
 8004da0:	f7fc fa06 	bl	80011b0 <__aeabi_ui2f>
 8004da4:	1c03      	adds	r3, r0, #0
 8004da6:	497a      	ldr	r1, [pc, #488]	; (8004f90 <WS2812B_setLedColorHSV+0x24c>)
 8004da8:	1c18      	adds	r0, r3, #0
 8004daa:	f7fb fd13 	bl	80007d4 <__aeabi_fdiv>
 8004dae:	1c03      	adds	r3, r0, #0
 8004db0:	627b      	str	r3, [r7, #36]	; 0x24

	//chroma- high level of color
	//x- ascending/descending level of color
	float chroma = value_f * saturation_f;
 8004db2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004db4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004db6:	f7fb fed7 	bl	8000b68 <__aeabi_fmul>
 8004dba:	1c03      	adds	r3, r0, #0
 8004dbc:	623b      	str	r3, [r7, #32]
	float x = chroma * (1 - fabs(fmodf(((float) hueDegree / 60), 2) - 1)); //changing
 8004dbe:	6a38      	ldr	r0, [r7, #32]
 8004dc0:	f7fd f882 	bl	8001ec8 <__aeabi_f2d>
 8004dc4:	0004      	movs	r4, r0
 8004dc6:	000d      	movs	r5, r1
 8004dc8:	2608      	movs	r6, #8
 8004dca:	19bb      	adds	r3, r7, r6
 8004dcc:	881b      	ldrh	r3, [r3, #0]
 8004dce:	0018      	movs	r0, r3
 8004dd0:	f7fc f9ee 	bl	80011b0 <__aeabi_ui2f>
 8004dd4:	1c03      	adds	r3, r0, #0
 8004dd6:	496f      	ldr	r1, [pc, #444]	; (8004f94 <WS2812B_setLedColorHSV+0x250>)
 8004dd8:	1c18      	adds	r0, r3, #0
 8004dda:	f7fb fcfb 	bl	80007d4 <__aeabi_fdiv>
 8004dde:	1c03      	adds	r3, r0, #0
 8004de0:	1c1a      	adds	r2, r3, #0
 8004de2:	2380      	movs	r3, #128	; 0x80
 8004de4:	05db      	lsls	r3, r3, #23
 8004de6:	1c19      	adds	r1, r3, #0
 8004de8:	1c10      	adds	r0, r2, #0
 8004dea:	f000 ffec 	bl	8005dc6 <fmodf>
 8004dee:	1c03      	adds	r3, r0, #0
 8004df0:	21fe      	movs	r1, #254	; 0xfe
 8004df2:	0589      	lsls	r1, r1, #22
 8004df4:	1c18      	adds	r0, r3, #0
 8004df6:	f7fc f805 	bl	8000e04 <__aeabi_fsub>
 8004dfa:	1c03      	adds	r3, r0, #0
 8004dfc:	005b      	lsls	r3, r3, #1
 8004dfe:	085b      	lsrs	r3, r3, #1
 8004e00:	1c18      	adds	r0, r3, #0
 8004e02:	f7fd f861 	bl	8001ec8 <__aeabi_f2d>
 8004e06:	0002      	movs	r2, r0
 8004e08:	000b      	movs	r3, r1
 8004e0a:	2000      	movs	r0, #0
 8004e0c:	4962      	ldr	r1, [pc, #392]	; (8004f98 <WS2812B_setLedColorHSV+0x254>)
 8004e0e:	f7fc fcd9 	bl	80017c4 <__aeabi_dsub>
 8004e12:	0002      	movs	r2, r0
 8004e14:	000b      	movs	r3, r1
 8004e16:	0020      	movs	r0, r4
 8004e18:	0029      	movs	r1, r5
 8004e1a:	f7fc fa11 	bl	8001240 <__aeabi_dmul>
 8004e1e:	0002      	movs	r2, r0
 8004e20:	000b      	movs	r3, r1
 8004e22:	0010      	movs	r0, r2
 8004e24:	0019      	movs	r1, r3
 8004e26:	f7fd f897 	bl	8001f58 <__aeabi_d2f>
 8004e2a:	1c03      	adds	r3, r0, #0
 8004e2c:	61fb      	str	r3, [r7, #28]
	float m = value_f - chroma;
 8004e2e:	6a39      	ldr	r1, [r7, #32]
 8004e30:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004e32:	f7fb ffe7 	bl	8000e04 <__aeabi_fsub>
 8004e36:	1c03      	adds	r3, r0, #0
 8004e38:	61bb      	str	r3, [r7, #24]

	if (0 <= hueDegree && hueDegree < 60) {
 8004e3a:	19bb      	adds	r3, r7, r6
 8004e3c:	881b      	ldrh	r3, [r3, #0]
 8004e3e:	2b3b      	cmp	r3, #59	; 0x3b
 8004e40:	d806      	bhi.n	8004e50 <WS2812B_setLedColorHSV+0x10c>
		redPrime = chroma; //red high
 8004e42:	6a3b      	ldr	r3, [r7, #32]
 8004e44:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = x; //green changing
 8004e46:	69fb      	ldr	r3, [r7, #28]
 8004e48:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = 0; //blue zero
 8004e4a:	2300      	movs	r3, #0
 8004e4c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004e4e:	e054      	b.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
	} else if (60 <= hueDegree && hueDegree < 120) {
 8004e50:	2208      	movs	r2, #8
 8004e52:	18bb      	adds	r3, r7, r2
 8004e54:	881b      	ldrh	r3, [r3, #0]
 8004e56:	2b3b      	cmp	r3, #59	; 0x3b
 8004e58:	d90a      	bls.n	8004e70 <WS2812B_setLedColorHSV+0x12c>
 8004e5a:	18bb      	adds	r3, r7, r2
 8004e5c:	881b      	ldrh	r3, [r3, #0]
 8004e5e:	2b77      	cmp	r3, #119	; 0x77
 8004e60:	d806      	bhi.n	8004e70 <WS2812B_setLedColorHSV+0x12c>
		redPrime = x;
 8004e62:	69fb      	ldr	r3, [r7, #28]
 8004e64:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = chroma;
 8004e66:	6a3b      	ldr	r3, [r7, #32]
 8004e68:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = 0;
 8004e6a:	2300      	movs	r3, #0
 8004e6c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004e6e:	e044      	b.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
	} else if (120 <= hueDegree && hueDegree < 180) {
 8004e70:	2208      	movs	r2, #8
 8004e72:	18bb      	adds	r3, r7, r2
 8004e74:	881b      	ldrh	r3, [r3, #0]
 8004e76:	2b77      	cmp	r3, #119	; 0x77
 8004e78:	d90a      	bls.n	8004e90 <WS2812B_setLedColorHSV+0x14c>
 8004e7a:	18bb      	adds	r3, r7, r2
 8004e7c:	881b      	ldrh	r3, [r3, #0]
 8004e7e:	2bb3      	cmp	r3, #179	; 0xb3
 8004e80:	d806      	bhi.n	8004e90 <WS2812B_setLedColorHSV+0x14c>
		redPrime = 0;
 8004e82:	2300      	movs	r3, #0
 8004e84:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = chroma;
 8004e86:	6a3b      	ldr	r3, [r7, #32]
 8004e88:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = x;
 8004e8a:	69fb      	ldr	r3, [r7, #28]
 8004e8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004e8e:	e034      	b.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
	} else if (180 <= hueDegree && hueDegree < 240) {
 8004e90:	2208      	movs	r2, #8
 8004e92:	18bb      	adds	r3, r7, r2
 8004e94:	881b      	ldrh	r3, [r3, #0]
 8004e96:	2bb3      	cmp	r3, #179	; 0xb3
 8004e98:	d90a      	bls.n	8004eb0 <WS2812B_setLedColorHSV+0x16c>
 8004e9a:	18bb      	adds	r3, r7, r2
 8004e9c:	881b      	ldrh	r3, [r3, #0]
 8004e9e:	2bef      	cmp	r3, #239	; 0xef
 8004ea0:	d806      	bhi.n	8004eb0 <WS2812B_setLedColorHSV+0x16c>
		redPrime = 0;
 8004ea2:	2300      	movs	r3, #0
 8004ea4:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = x;
 8004ea6:	69fb      	ldr	r3, [r7, #28]
 8004ea8:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = chroma;
 8004eaa:	6a3b      	ldr	r3, [r7, #32]
 8004eac:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004eae:	e024      	b.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
	} else if (240 <= hueDegree && hueDegree < 300) {
 8004eb0:	2208      	movs	r2, #8
 8004eb2:	18bb      	adds	r3, r7, r2
 8004eb4:	881b      	ldrh	r3, [r3, #0]
 8004eb6:	2bef      	cmp	r3, #239	; 0xef
 8004eb8:	d90c      	bls.n	8004ed4 <WS2812B_setLedColorHSV+0x190>
 8004eba:	18bb      	adds	r3, r7, r2
 8004ebc:	881a      	ldrh	r2, [r3, #0]
 8004ebe:	2396      	movs	r3, #150	; 0x96
 8004ec0:	005b      	lsls	r3, r3, #1
 8004ec2:	429a      	cmp	r2, r3
 8004ec4:	d206      	bcs.n	8004ed4 <WS2812B_setLedColorHSV+0x190>
		redPrime = x;
 8004ec6:	69fb      	ldr	r3, [r7, #28]
 8004ec8:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = 0;
 8004eca:	2300      	movs	r3, #0
 8004ecc:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = chroma;
 8004ece:	6a3b      	ldr	r3, [r7, #32]
 8004ed0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004ed2:	e012      	b.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
	} else if (300 <= hueDegree && hueDegree < 360) {
 8004ed4:	2108      	movs	r1, #8
 8004ed6:	187b      	adds	r3, r7, r1
 8004ed8:	881a      	ldrh	r2, [r3, #0]
 8004eda:	2396      	movs	r3, #150	; 0x96
 8004edc:	005b      	lsls	r3, r3, #1
 8004ede:	429a      	cmp	r2, r3
 8004ee0:	d30b      	bcc.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
 8004ee2:	187b      	adds	r3, r7, r1
 8004ee4:	881a      	ldrh	r2, [r3, #0]
 8004ee6:	23b4      	movs	r3, #180	; 0xb4
 8004ee8:	005b      	lsls	r3, r3, #1
 8004eea:	429a      	cmp	r2, r3
 8004eec:	d205      	bcs.n	8004efa <WS2812B_setLedColorHSV+0x1b6>
		redPrime = chroma;
 8004eee:	6a3b      	ldr	r3, [r7, #32]
 8004ef0:	637b      	str	r3, [r7, #52]	; 0x34
		greenPrime = 0;
 8004ef2:	2300      	movs	r3, #0
 8004ef4:	633b      	str	r3, [r7, #48]	; 0x30
		bluePrime = x;
 8004ef6:	69fb      	ldr	r3, [r7, #28]
 8004ef8:	62fb      	str	r3, [r7, #44]	; 0x2c
	}

	red = (redPrime + m) * 255;
 8004efa:	69b9      	ldr	r1, [r7, #24]
 8004efc:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8004efe:	f7fb fac9 	bl	8000494 <__aeabi_fadd>
 8004f02:	1c03      	adds	r3, r0, #0
 8004f04:	4922      	ldr	r1, [pc, #136]	; (8004f90 <WS2812B_setLedColorHSV+0x24c>)
 8004f06:	1c18      	adds	r0, r3, #0
 8004f08:	f7fb fe2e 	bl	8000b68 <__aeabi_fmul>
 8004f0c:	1c03      	adds	r3, r0, #0
 8004f0e:	2517      	movs	r5, #23
 8004f10:	197c      	adds	r4, r7, r5
 8004f12:	1c18      	adds	r0, r3, #0
 8004f14:	f7fb faa6 	bl	8000464 <__aeabi_f2uiz>
 8004f18:	0003      	movs	r3, r0
 8004f1a:	7023      	strb	r3, [r4, #0]
	green = (greenPrime + m) * 255;
 8004f1c:	69b9      	ldr	r1, [r7, #24]
 8004f1e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004f20:	f7fb fab8 	bl	8000494 <__aeabi_fadd>
 8004f24:	1c03      	adds	r3, r0, #0
 8004f26:	491a      	ldr	r1, [pc, #104]	; (8004f90 <WS2812B_setLedColorHSV+0x24c>)
 8004f28:	1c18      	adds	r0, r3, #0
 8004f2a:	f7fb fe1d 	bl	8000b68 <__aeabi_fmul>
 8004f2e:	1c03      	adds	r3, r0, #0
 8004f30:	2616      	movs	r6, #22
 8004f32:	19bc      	adds	r4, r7, r6
 8004f34:	1c18      	adds	r0, r3, #0
 8004f36:	f7fb fa95 	bl	8000464 <__aeabi_f2uiz>
 8004f3a:	0003      	movs	r3, r0
 8004f3c:	7023      	strb	r3, [r4, #0]
	blue = (bluePrime + m) * 255;
 8004f3e:	69b9      	ldr	r1, [r7, #24]
 8004f40:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004f42:	f7fb faa7 	bl	8000494 <__aeabi_fadd>
 8004f46:	1c03      	adds	r3, r0, #0
 8004f48:	4911      	ldr	r1, [pc, #68]	; (8004f90 <WS2812B_setLedColorHSV+0x24c>)
 8004f4a:	1c18      	adds	r0, r3, #0
 8004f4c:	f7fb fe0c 	bl	8000b68 <__aeabi_fmul>
 8004f50:	1c03      	adds	r3, r0, #0
 8004f52:	2215      	movs	r2, #21
 8004f54:	18bc      	adds	r4, r7, r2
 8004f56:	1c18      	adds	r0, r3, #0
 8004f58:	f7fb fa84 	bl	8000464 <__aeabi_f2uiz>
 8004f5c:	0003      	movs	r3, r0
 8004f5e:	7023      	strb	r3, [r4, #0]

	uint32_t color = red << 16 | green << 8 | blue;
 8004f60:	197b      	adds	r3, r7, r5
 8004f62:	781b      	ldrb	r3, [r3, #0]
 8004f64:	041a      	lsls	r2, r3, #16
 8004f66:	19bb      	adds	r3, r7, r6
 8004f68:	781b      	ldrb	r3, [r3, #0]
 8004f6a:	021b      	lsls	r3, r3, #8
 8004f6c:	431a      	orrs	r2, r3
 8004f6e:	2315      	movs	r3, #21
 8004f70:	18fb      	adds	r3, r7, r3
 8004f72:	781b      	ldrb	r3, [r3, #0]
 8004f74:	4313      	orrs	r3, r2
 8004f76:	613b      	str	r3, [r7, #16]

	WS2812B_setLedColorRGB(stripe, id, color);
 8004f78:	693a      	ldr	r2, [r7, #16]
 8004f7a:	230a      	movs	r3, #10
 8004f7c:	18fb      	adds	r3, r7, r3
 8004f7e:	8819      	ldrh	r1, [r3, #0]
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	0018      	movs	r0, r3
 8004f84:	f7ff fea3 	bl	8004cce <WS2812B_setLedColorRGB>

}
 8004f88:	46c0      	nop			; (mov r8, r8)
 8004f8a:	46bd      	mov	sp, r7
 8004f8c:	b00f      	add	sp, #60	; 0x3c
 8004f8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f90:	437f0000 	.word	0x437f0000
 8004f94:	42700000 	.word	0x42700000
 8004f98:	3ff00000 	.word	0x3ff00000

08004f9c <WS2812B_Refresh>:

void WS2812B_Refresh(ws2812_Stripe_TypeDef *stripe) {
 8004f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f9e:	b08f      	sub	sp, #60	; 0x3c
 8004fa0:	af02      	add	r7, sp, #8
 8004fa2:	61f8      	str	r0, [r7, #28]
 8004fa4:	4669      	mov	r1, sp
 8004fa6:	000e      	movs	r6, r1

	uint16_t colorBufferSize = stripe->ledCount * 3;
 8004fa8:	69f9      	ldr	r1, [r7, #28]
 8004faa:	8909      	ldrh	r1, [r1, #8]
 8004fac:	2016      	movs	r0, #22
 8004fae:	0002      	movs	r2, r0
 8004fb0:	2318      	movs	r3, #24
 8004fb2:	18c3      	adds	r3, r0, r3
 8004fb4:	19d8      	adds	r0, r3, r7
 8004fb6:	1c0b      	adds	r3, r1, #0
 8004fb8:	1c19      	adds	r1, r3, #0
 8004fba:	1849      	adds	r1, r1, r1
 8004fbc:	469c      	mov	ip, r3
 8004fbe:	4461      	add	r1, ip
 8004fc0:	8001      	strh	r1, [r0, #0]
	uint16_t sendBufferSize = (colorBufferSize * 8) + 40; // one byte for each bit in each LED + 40 for reset
 8004fc2:	0010      	movs	r0, r2
 8004fc4:	2318      	movs	r3, #24
 8004fc6:	18c3      	adds	r3, r0, r3
 8004fc8:	19d9      	adds	r1, r3, r7
 8004fca:	8809      	ldrh	r1, [r1, #0]
 8004fcc:	3105      	adds	r1, #5
 8004fce:	b288      	uxth	r0, r1
 8004fd0:	2114      	movs	r1, #20
 8004fd2:	000b      	movs	r3, r1
 8004fd4:	2218      	movs	r2, #24
 8004fd6:	188a      	adds	r2, r1, r2
 8004fd8:	19d1      	adds	r1, r2, r7
 8004fda:	00c0      	lsls	r0, r0, #3
 8004fdc:	8008      	strh	r0, [r1, #0]

	bitState sendBuffer[sendBufferSize];
 8004fde:	0019      	movs	r1, r3
 8004fe0:	2318      	movs	r3, #24
 8004fe2:	18cb      	adds	r3, r1, r3
 8004fe4:	19d9      	adds	r1, r3, r7
 8004fe6:	8809      	ldrh	r1, [r1, #0]
 8004fe8:	0008      	movs	r0, r1
 8004fea:	3801      	subs	r0, #1
 8004fec:	62b8      	str	r0, [r7, #40]	; 0x28
 8004fee:	6139      	str	r1, [r7, #16]
 8004ff0:	2000      	movs	r0, #0
 8004ff2:	6178      	str	r0, [r7, #20]
 8004ff4:	693b      	ldr	r3, [r7, #16]
 8004ff6:	0f58      	lsrs	r0, r3, #29
 8004ff8:	697b      	ldr	r3, [r7, #20]
 8004ffa:	00dd      	lsls	r5, r3, #3
 8004ffc:	4305      	orrs	r5, r0
 8004ffe:	693b      	ldr	r3, [r7, #16]
 8005000:	00dc      	lsls	r4, r3, #3
 8005002:	6039      	str	r1, [r7, #0]
 8005004:	2000      	movs	r0, #0
 8005006:	6078      	str	r0, [r7, #4]
 8005008:	683c      	ldr	r4, [r7, #0]
 800500a:	687d      	ldr	r5, [r7, #4]
 800500c:	0023      	movs	r3, r4
 800500e:	0f58      	lsrs	r0, r3, #29
 8005010:	002b      	movs	r3, r5
 8005012:	00db      	lsls	r3, r3, #3
 8005014:	60fb      	str	r3, [r7, #12]
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	4303      	orrs	r3, r0
 800501a:	60fb      	str	r3, [r7, #12]
 800501c:	0023      	movs	r3, r4
 800501e:	00db      	lsls	r3, r3, #3
 8005020:	60bb      	str	r3, [r7, #8]
 8005022:	000b      	movs	r3, r1
 8005024:	3307      	adds	r3, #7
 8005026:	08db      	lsrs	r3, r3, #3
 8005028:	00db      	lsls	r3, r3, #3
 800502a:	466a      	mov	r2, sp
 800502c:	1ad3      	subs	r3, r2, r3
 800502e:	469d      	mov	sp, r3
 8005030:	ab02      	add	r3, sp, #8
 8005032:	3300      	adds	r3, #0
 8005034:	627b      	str	r3, [r7, #36]	; 0x24

	_WS2812B_bitsToBytes(sendBuffer, stripe->colorBuffer, colorBufferSize, 40,
 8005036:	69fb      	ldr	r3, [r7, #28]
 8005038:	6859      	ldr	r1, [r3, #4]
 800503a:	2016      	movs	r0, #22
 800503c:	2318      	movs	r3, #24
 800503e:	18c3      	adds	r3, r0, r3
 8005040:	19db      	adds	r3, r3, r7
 8005042:	881a      	ldrh	r2, [r3, #0]
 8005044:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8005046:	2380      	movs	r3, #128	; 0x80
 8005048:	425b      	negs	r3, r3
 800504a:	9301      	str	r3, [sp, #4]
 800504c:	23f8      	movs	r3, #248	; 0xf8
 800504e:	9300      	str	r3, [sp, #0]
 8005050:	2328      	movs	r3, #40	; 0x28
 8005052:	f000 f81c 	bl	800508e <_WS2812B_bitsToBytes>

#if DMA_MODE == 0
	HAL_SPI_Transmit(stripe->spi, sendBuffer, sendBufferSize, 200); // Additional 3 for reset signal
#else

	if (HAL_SPI_Transmit_DMA(stripe->spi, sendBuffer, sendBufferSize) == HAL_OK)
 8005056:	69fb      	ldr	r3, [r7, #28]
 8005058:	6818      	ldr	r0, [r3, #0]
 800505a:	2114      	movs	r1, #20
 800505c:	2318      	movs	r3, #24
 800505e:	18cb      	adds	r3, r1, r3
 8005060:	19db      	adds	r3, r3, r7
 8005062:	881a      	ldrh	r2, [r3, #0]
 8005064:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005066:	0019      	movs	r1, r3
 8005068:	f7fe fb56 	bl	8003718 <HAL_SPI_Transmit_DMA>
 800506c:	1e03      	subs	r3, r0, #0
 800506e:	d109      	bne.n	8005084 <WS2812B_Refresh+0xe8>
		while (HAL_DMA_GetState(stripe->spi->hdmatx) != HAL_DMA_STATE_READY)
 8005070:	46c0      	nop			; (mov r8, r8)
 8005072:	69fb      	ldr	r3, [r7, #28]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005078:	0018      	movs	r0, r3
 800507a:	f7fd fb4d 	bl	8002718 <HAL_DMA_GetState>
 800507e:	0003      	movs	r3, r0
 8005080:	2b01      	cmp	r3, #1
 8005082:	d1f6      	bne.n	8005072 <WS2812B_Refresh+0xd6>
 8005084:	46b5      	mov	sp, r6
			;

#endif

}
 8005086:	46c0      	nop			; (mov r8, r8)
 8005088:	46bd      	mov	sp, r7
 800508a:	b00d      	add	sp, #52	; 0x34
 800508c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800508e <_WS2812B_bitsToBytes>:
 *
 * right shift is shift of destination data. set for 5 cause 5 empty bytes
 * on the beginning of destination and shifts the rest
 */
void _WS2812B_bitsToBytes(uint8_t *destination, uint8_t *source,
		uint16_t sourceSize, uint16_t rightShift, uint8_t high, int8_t low) {
 800508e:	b5b0      	push	{r4, r5, r7, lr}
 8005090:	b086      	sub	sp, #24
 8005092:	af00      	add	r7, sp, #0
 8005094:	60f8      	str	r0, [r7, #12]
 8005096:	60b9      	str	r1, [r7, #8]
 8005098:	0019      	movs	r1, r3
 800509a:	1dbb      	adds	r3, r7, #6
 800509c:	801a      	strh	r2, [r3, #0]
 800509e:	1d3b      	adds	r3, r7, #4
 80050a0:	1c0a      	adds	r2, r1, #0
 80050a2:	801a      	strh	r2, [r3, #0]

	uint16_t destinationSize = (sourceSize * 8) + rightShift;
 80050a4:	1dbb      	adds	r3, r7, #6
 80050a6:	881b      	ldrh	r3, [r3, #0]
 80050a8:	00db      	lsls	r3, r3, #3
 80050aa:	b299      	uxth	r1, r3
 80050ac:	2012      	movs	r0, #18
 80050ae:	183b      	adds	r3, r7, r0
 80050b0:	1d3a      	adds	r2, r7, #4
 80050b2:	8812      	ldrh	r2, [r2, #0]
 80050b4:	188a      	adds	r2, r1, r2
 80050b6:	801a      	strh	r2, [r3, #0]

	//clear destination
	memset(destination, 0x0, destinationSize);
 80050b8:	183b      	adds	r3, r7, r0
 80050ba:	881a      	ldrh	r2, [r3, #0]
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	2100      	movs	r1, #0
 80050c0:	0018      	movs	r0, r3
 80050c2:	f000 fe31 	bl	8005d28 <memset>

	for (uint16_t i = 0; i < sourceSize; i++) {
 80050c6:	2316      	movs	r3, #22
 80050c8:	18fb      	adds	r3, r7, r3
 80050ca:	2200      	movs	r2, #0
 80050cc:	801a      	strh	r2, [r3, #0]
 80050ce:	e04e      	b.n	800516e <_WS2812B_bitsToBytes+0xe0>

		for (uint16_t j = 0; j < 8; j++) {
 80050d0:	2314      	movs	r3, #20
 80050d2:	18fb      	adds	r3, r7, r3
 80050d4:	2200      	movs	r2, #0
 80050d6:	801a      	strh	r2, [r3, #0]
 80050d8:	e03e      	b.n	8005158 <_WS2812B_bitsToBytes+0xca>

			uint16_t destinationOffset = (i * 8) + j;
 80050da:	2016      	movs	r0, #22
 80050dc:	183b      	adds	r3, r7, r0
 80050de:	881b      	ldrh	r3, [r3, #0]
 80050e0:	00db      	lsls	r3, r3, #3
 80050e2:	b299      	uxth	r1, r3
 80050e4:	2410      	movs	r4, #16
 80050e6:	193b      	adds	r3, r7, r4
 80050e8:	2514      	movs	r5, #20
 80050ea:	197a      	adds	r2, r7, r5
 80050ec:	8812      	ldrh	r2, [r2, #0]
 80050ee:	188a      	adds	r2, r1, r2
 80050f0:	801a      	strh	r2, [r3, #0]

			if (source[i] & (1 << (7 - j)))
 80050f2:	183b      	adds	r3, r7, r0
 80050f4:	881b      	ldrh	r3, [r3, #0]
 80050f6:	68ba      	ldr	r2, [r7, #8]
 80050f8:	18d3      	adds	r3, r2, r3
 80050fa:	781b      	ldrb	r3, [r3, #0]
 80050fc:	0019      	movs	r1, r3
 80050fe:	197b      	adds	r3, r7, r5
 8005100:	881b      	ldrh	r3, [r3, #0]
 8005102:	2207      	movs	r2, #7
 8005104:	1ad3      	subs	r3, r2, r3
 8005106:	4119      	asrs	r1, r3
 8005108:	000b      	movs	r3, r1
 800510a:	2201      	movs	r2, #1
 800510c:	4013      	ands	r3, r2
 800510e:	d00e      	beq.n	800512e <_WS2812B_bitsToBytes+0xa0>
				destination[destinationOffset + rightShift] = high;
 8005110:	193b      	adds	r3, r7, r4
 8005112:	881a      	ldrh	r2, [r3, #0]
 8005114:	1d3b      	adds	r3, r7, #4
 8005116:	881b      	ldrh	r3, [r3, #0]
 8005118:	18d3      	adds	r3, r2, r3
 800511a:	001a      	movs	r2, r3
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	189a      	adds	r2, r3, r2
 8005120:	2320      	movs	r3, #32
 8005122:	2108      	movs	r1, #8
 8005124:	185b      	adds	r3, r3, r1
 8005126:	19db      	adds	r3, r3, r7
 8005128:	781b      	ldrb	r3, [r3, #0]
 800512a:	7013      	strb	r3, [r2, #0]
 800512c:	e00e      	b.n	800514c <_WS2812B_bitsToBytes+0xbe>
			else
				destination[destinationOffset + rightShift] = low;
 800512e:	2310      	movs	r3, #16
 8005130:	18fb      	adds	r3, r7, r3
 8005132:	881a      	ldrh	r2, [r3, #0]
 8005134:	1d3b      	adds	r3, r7, #4
 8005136:	881b      	ldrh	r3, [r3, #0]
 8005138:	18d3      	adds	r3, r2, r3
 800513a:	001a      	movs	r2, r3
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	189b      	adds	r3, r3, r2
 8005140:	2224      	movs	r2, #36	; 0x24
 8005142:	2108      	movs	r1, #8
 8005144:	1852      	adds	r2, r2, r1
 8005146:	19d2      	adds	r2, r2, r7
 8005148:	7812      	ldrb	r2, [r2, #0]
 800514a:	701a      	strb	r2, [r3, #0]
		for (uint16_t j = 0; j < 8; j++) {
 800514c:	2114      	movs	r1, #20
 800514e:	187b      	adds	r3, r7, r1
 8005150:	881a      	ldrh	r2, [r3, #0]
 8005152:	187b      	adds	r3, r7, r1
 8005154:	3201      	adds	r2, #1
 8005156:	801a      	strh	r2, [r3, #0]
 8005158:	2314      	movs	r3, #20
 800515a:	18fb      	adds	r3, r7, r3
 800515c:	881b      	ldrh	r3, [r3, #0]
 800515e:	2b07      	cmp	r3, #7
 8005160:	d9bb      	bls.n	80050da <_WS2812B_bitsToBytes+0x4c>
	for (uint16_t i = 0; i < sourceSize; i++) {
 8005162:	2116      	movs	r1, #22
 8005164:	187b      	adds	r3, r7, r1
 8005166:	881a      	ldrh	r2, [r3, #0]
 8005168:	187b      	adds	r3, r7, r1
 800516a:	3201      	adds	r2, #1
 800516c:	801a      	strh	r2, [r3, #0]
 800516e:	2316      	movs	r3, #22
 8005170:	18fa      	adds	r2, r7, r3
 8005172:	1dbb      	adds	r3, r7, #6
 8005174:	8812      	ldrh	r2, [r2, #0]
 8005176:	881b      	ldrh	r3, [r3, #0]
 8005178:	429a      	cmp	r2, r3
 800517a:	d3a9      	bcc.n	80050d0 <_WS2812B_bitsToBytes+0x42>

		}
	}

}
 800517c:	46c0      	nop			; (mov r8, r8)
 800517e:	46c0      	nop			; (mov r8, r8)
 8005180:	46bd      	mov	sp, r7
 8005182:	b006      	add	sp, #24
 8005184:	bdb0      	pop	{r4, r5, r7, pc}
	...

08005188 <wsfx_increment>:
/*
 * run this function in main loop, to run as often as possible
 * @param: number of arguments
 * @params: effects to increment(wsfxEffect_TypeDef*)
 */
void wsfx_increment(uint8_t effectsToRun, ...) {
 8005188:	b40f      	push	{r0, r1, r2, r3}
 800518a:	b580      	push	{r7, lr}
 800518c:	b084      	sub	sp, #16
 800518e:	af00      	add	r7, sp, #0

	if (wsfx_flagRun == WSFX_RUN) {
 8005190:	4b39      	ldr	r3, [pc, #228]	; (8005278 <wsfx_increment+0xf0>)
 8005192:	781b      	ldrb	r3, [r3, #0]
 8005194:	b2db      	uxtb	r3, r3
 8005196:	2b01      	cmp	r3, #1
 8005198:	d167      	bne.n	800526a <wsfx_increment+0xe2>

		wsfx_mainCounter++;
 800519a:	4b38      	ldr	r3, [pc, #224]	; (800527c <wsfx_increment+0xf4>)
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	1c5a      	adds	r2, r3, #1
 80051a0:	4b36      	ldr	r3, [pc, #216]	; (800527c <wsfx_increment+0xf4>)
 80051a2:	601a      	str	r2, [r3, #0]

		va_list ap;
		va_start(ap, effectsToRun);
 80051a4:	231c      	movs	r3, #28
 80051a6:	18fb      	adds	r3, r7, r3
 80051a8:	603b      	str	r3, [r7, #0]

		for (uint8_t i = 0; i < effectsToRun; i++) { //run this for each effect
 80051aa:	230f      	movs	r3, #15
 80051ac:	18fb      	adds	r3, r7, r3
 80051ae:	2200      	movs	r2, #0
 80051b0:	701a      	strb	r2, [r3, #0]
 80051b2:	e04f      	b.n	8005254 <wsfx_increment+0xcc>

			/*
			 * get first/next struct
			 */
			wsfxEffect_TypeDef *currentEffect = va_arg(ap, wsfxEffect_TypeDef*);
 80051b4:	683b      	ldr	r3, [r7, #0]
 80051b6:	1d1a      	adds	r2, r3, #4
 80051b8:	603a      	str	r2, [r7, #0]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	607b      	str	r3, [r7, #4]

			if (currentEffect->flow.state == WSFX_EFFECT_STATE_RUNNING //if effect is running
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	7d1b      	ldrb	r3, [r3, #20]
 80051c2:	2b01      	cmp	r3, #1
 80051c4:	d140      	bne.n	8005248 <wsfx_increment+0xc0>
			&& (wsfx_mainCounter % currentEffect->flow.prescaler == 0)) { //and main couter can divide by prescaler
 80051c6:	4b2d      	ldr	r3, [pc, #180]	; (800527c <wsfx_increment+0xf4>)
 80051c8:	681a      	ldr	r2, [r3, #0]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	8adb      	ldrh	r3, [r3, #22]
 80051ce:	0019      	movs	r1, r3
 80051d0:	0010      	movs	r0, r2
 80051d2:	f7fb f81d 	bl	8000210 <__aeabi_uidivmod>
 80051d6:	1e0b      	subs	r3, r1, #0
 80051d8:	d136      	bne.n	8005248 <wsfx_increment+0xc0>

				currentEffect->stepFunction(&currentEffect->flow); //run function
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	69db      	ldr	r3, [r3, #28]
 80051de:	687a      	ldr	r2, [r7, #4]
 80051e0:	0010      	movs	r0, r2
 80051e2:	4798      	blx	r3

				currentEffect->flow.counter++; //increment effect coutner
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	881b      	ldrh	r3, [r3, #0]
 80051e8:	b29b      	uxth	r3, r3
 80051ea:	3301      	adds	r3, #1
 80051ec:	b29a      	uxth	r2, r3
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	801a      	strh	r2, [r3, #0]

				if (currentEffect->flow.counter >= currentEffect->flow.steps) { //if step is too large
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	881b      	ldrh	r3, [r3, #0]
 80051f6:	b29a      	uxth	r2, r3
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	899b      	ldrh	r3, [r3, #12]
 80051fc:	429a      	cmp	r2, r3
 80051fe:	d323      	bcc.n	8005248 <wsfx_increment+0xc0>
					currentEffect->flow.counter = 0;	//reset counter
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	2200      	movs	r2, #0
 8005204:	801a      	strh	r2, [r3, #0]
					if (currentEffect->flow.repeat == WSFX_REPEAT_MODE_OFF) {//if repeat is off
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	7d5b      	ldrb	r3, [r3, #21]
 800520a:	2b00      	cmp	r3, #0
 800520c:	d11c      	bne.n	8005248 <wsfx_increment+0xc0>
						currentEffect->flow.state = WSFX_EFFECT_STATE_STOP; //stop effect
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	2200      	movs	r2, #0
 8005212:	751a      	strb	r2, [r3, #20]
						for (int i = currentEffect->flow.beginLED;
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	891b      	ldrh	r3, [r3, #8]
 8005218:	60bb      	str	r3, [r7, #8]
 800521a:	e00a      	b.n	8005232 <wsfx_increment+0xaa>
								i <= currentEffect->flow.endLED; i++) {
							WS2812B_setLedColorRGB(currentEffect->flow.stripe,
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	685b      	ldr	r3, [r3, #4]
 8005220:	68ba      	ldr	r2, [r7, #8]
 8005222:	b291      	uxth	r1, r2
 8005224:	2200      	movs	r2, #0
 8005226:	0018      	movs	r0, r3
 8005228:	f7ff fd51 	bl	8004cce <WS2812B_setLedColorRGB>
								i <= currentEffect->flow.endLED; i++) {
 800522c:	68bb      	ldr	r3, [r7, #8]
 800522e:	3301      	adds	r3, #1
 8005230:	60bb      	str	r3, [r7, #8]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	895b      	ldrh	r3, [r3, #10]
 8005236:	001a      	movs	r2, r3
 8005238:	68bb      	ldr	r3, [r7, #8]
 800523a:	4293      	cmp	r3, r2
 800523c:	ddee      	ble.n	800521c <wsfx_increment+0x94>
									i, 0x0);
						}
						WS2812B_Refresh(currentEffect->flow.stripe);
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	685b      	ldr	r3, [r3, #4]
 8005242:	0018      	movs	r0, r3
 8005244:	f7ff feaa 	bl	8004f9c <WS2812B_Refresh>
		for (uint8_t i = 0; i < effectsToRun; i++) { //run this for each effect
 8005248:	210f      	movs	r1, #15
 800524a:	187b      	adds	r3, r7, r1
 800524c:	781a      	ldrb	r2, [r3, #0]
 800524e:	187b      	adds	r3, r7, r1
 8005250:	3201      	adds	r2, #1
 8005252:	701a      	strb	r2, [r3, #0]
 8005254:	230f      	movs	r3, #15
 8005256:	18fa      	adds	r2, r7, r3
 8005258:	2318      	movs	r3, #24
 800525a:	18fb      	adds	r3, r7, r3
 800525c:	7812      	ldrb	r2, [r2, #0]
 800525e:	781b      	ldrb	r3, [r3, #0]
 8005260:	429a      	cmp	r2, r3
 8005262:	d3a7      	bcc.n	80051b4 <wsfx_increment+0x2c>

		}

		va_end(ap);

		wsfx_flagRun = WSFX_STOP;
 8005264:	4b04      	ldr	r3, [pc, #16]	; (8005278 <wsfx_increment+0xf0>)
 8005266:	2200      	movs	r2, #0
 8005268:	701a      	strb	r2, [r3, #0]

	}
}
 800526a:	46c0      	nop			; (mov r8, r8)
 800526c:	46bd      	mov	sp, r7
 800526e:	b004      	add	sp, #16
 8005270:	bc80      	pop	{r7}
 8005272:	bc08      	pop	{r3}
 8005274:	b004      	add	sp, #16
 8005276:	4718      	bx	r3
 8005278:	20000328 	.word	0x20000328
 800527c:	2000032c 	.word	0x2000032c

08005280 <wsfx_init>:
 * @param: step function: one of wsfx_effect_*() function
 *
 */
void wsfx_init(wsfxEffect_TypeDef *effect, ws2812_Stripe_TypeDef *stripe,
		uint16_t beginLED, uint16_t endLED,
		void (*stepFunction)(wsfxEffectFlow_TypeDef *flow)) {
 8005280:	b580      	push	{r7, lr}
 8005282:	b084      	sub	sp, #16
 8005284:	af00      	add	r7, sp, #0
 8005286:	60f8      	str	r0, [r7, #12]
 8005288:	60b9      	str	r1, [r7, #8]
 800528a:	0019      	movs	r1, r3
 800528c:	1dbb      	adds	r3, r7, #6
 800528e:	801a      	strh	r2, [r3, #0]
 8005290:	1d3b      	adds	r3, r7, #4
 8005292:	1c0a      	adds	r2, r1, #0
 8005294:	801a      	strh	r2, [r3, #0]

	effect->flow.state = WSFX_EFFECT_STATE_STOP;
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	2200      	movs	r2, #0
 800529a:	751a      	strb	r2, [r3, #20]
	effect->flow.counter = 0;
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	2200      	movs	r2, #0
 80052a0:	801a      	strh	r2, [r3, #0]
	effect->flow.steps = 0;
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	2200      	movs	r2, #0
 80052a6:	819a      	strh	r2, [r3, #12]

	//default values
	effect->flow.repeat = WSFX_REPEAT_MODE_OFF;
 80052a8:	68fb      	ldr	r3, [r7, #12]
 80052aa:	2200      	movs	r2, #0
 80052ac:	755a      	strb	r2, [r3, #21]
	effect->flow.direction = WSFX_DIRECTION_FORE;
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	2200      	movs	r2, #0
 80052b2:	709a      	strb	r2, [r3, #2]
	effect->flow.prescaler = 20;
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	2214      	movs	r2, #20
 80052b8:	82da      	strh	r2, [r3, #22]
	effect->flow.saturation = 255;
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	22ff      	movs	r2, #255	; 0xff
 80052be:	74da      	strb	r2, [r3, #19]
	effect->flow.hue = 0;
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	2200      	movs	r2, #0
 80052c4:	81da      	strh	r2, [r3, #14]
	effect->flow.hue2 = 180;
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	22b4      	movs	r2, #180	; 0xb4
 80052ca:	821a      	strh	r2, [r3, #16]
	effect->flow.value = 20;
 80052cc:	68fb      	ldr	r3, [r7, #12]
 80052ce:	2214      	movs	r2, #20
 80052d0:	749a      	strb	r2, [r3, #18]

	effect->flow.stripe = stripe;
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	68ba      	ldr	r2, [r7, #8]
 80052d6:	605a      	str	r2, [r3, #4]
	effect->flow.beginLED = beginLED;
 80052d8:	68fb      	ldr	r3, [r7, #12]
 80052da:	1dba      	adds	r2, r7, #6
 80052dc:	8812      	ldrh	r2, [r2, #0]
 80052de:	811a      	strh	r2, [r3, #8]
	effect->flow.endLED = endLED;
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	1d3a      	adds	r2, r7, #4
 80052e4:	8812      	ldrh	r2, [r2, #0]
 80052e6:	815a      	strh	r2, [r3, #10]

	effect->stepFunction = stepFunction;
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	69ba      	ldr	r2, [r7, #24]
 80052ec:	61da      	str	r2, [r3, #28]

}
 80052ee:	46c0      	nop			; (mov r8, r8)
 80052f0:	46bd      	mov	sp, r7
 80052f2:	b004      	add	sp, #16
 80052f4:	bd80      	pop	{r7, pc}

080052f6 <wsfx_setColor>:
/*
 * set main color for effect
 * @param: effect struct
 * @param: hue 0-359
 */
void wsfx_setColor(wsfxEffect_TypeDef *effect, uint16_t hue) {
 80052f6:	b580      	push	{r7, lr}
 80052f8:	b082      	sub	sp, #8
 80052fa:	af00      	add	r7, sp, #0
 80052fc:	6078      	str	r0, [r7, #4]
 80052fe:	000a      	movs	r2, r1
 8005300:	1cbb      	adds	r3, r7, #2
 8005302:	801a      	strh	r2, [r3, #0]
	effect->flow.hue = hue;
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	1cba      	adds	r2, r7, #2
 8005308:	8812      	ldrh	r2, [r2, #0]
 800530a:	81da      	strh	r2, [r3, #14]
}
 800530c:	46c0      	nop			; (mov r8, r8)
 800530e:	46bd      	mov	sp, r7
 8005310:	b002      	add	sp, #8
 8005312:	bd80      	pop	{r7, pc}

08005314 <wsfx_setValue>:
/*
 * set main value(brightness) for effect
 * @param: effect
 * @param: value(0-255)
 */
void wsfx_setValue(wsfxEffect_TypeDef *effect, uint8_t value) {
 8005314:	b580      	push	{r7, lr}
 8005316:	b082      	sub	sp, #8
 8005318:	af00      	add	r7, sp, #0
 800531a:	6078      	str	r0, [r7, #4]
 800531c:	000a      	movs	r2, r1
 800531e:	1cfb      	adds	r3, r7, #3
 8005320:	701a      	strb	r2, [r3, #0]
	effect->flow.value = value;
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	1cfa      	adds	r2, r7, #3
 8005326:	7812      	ldrb	r2, [r2, #0]
 8005328:	749a      	strb	r2, [r3, #18]
}
 800532a:	46c0      	nop			; (mov r8, r8)
 800532c:	46bd      	mov	sp, r7
 800532e:	b002      	add	sp, #8
 8005330:	bd80      	pop	{r7, pc}

08005332 <wsfx_setRepeat>:

void wsfx_setRepeat(wsfxEffect_TypeDef *effect, wsfxRepeatMode repeat) {
 8005332:	b580      	push	{r7, lr}
 8005334:	b082      	sub	sp, #8
 8005336:	af00      	add	r7, sp, #0
 8005338:	6078      	str	r0, [r7, #4]
 800533a:	000a      	movs	r2, r1
 800533c:	1cfb      	adds	r3, r7, #3
 800533e:	701a      	strb	r2, [r3, #0]
	effect->flow.repeat = repeat;
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	1cfa      	adds	r2, r7, #3
 8005344:	7812      	ldrb	r2, [r2, #0]
 8005346:	755a      	strb	r2, [r3, #21]
}
 8005348:	46c0      	nop			; (mov r8, r8)
 800534a:	46bd      	mov	sp, r7
 800534c:	b002      	add	sp, #8
 800534e:	bd80      	pop	{r7, pc}

08005350 <wsfx_setPrescaler>:

void wsfx_setDirection(wsfxEffect_TypeDef *effect, wsfxDirection direction) {
	effect->flow.direction = direction;
}

void wsfx_setPrescaler(wsfxEffect_TypeDef *effect, uint16_t prescaler) {
 8005350:	b580      	push	{r7, lr}
 8005352:	b082      	sub	sp, #8
 8005354:	af00      	add	r7, sp, #0
 8005356:	6078      	str	r0, [r7, #4]
 8005358:	000a      	movs	r2, r1
 800535a:	1cbb      	adds	r3, r7, #2
 800535c:	801a      	strh	r2, [r3, #0]
	effect->flow.prescaler = prescaler;
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	1cba      	adds	r2, r7, #2
 8005362:	8812      	ldrh	r2, [r2, #0]
 8005364:	82da      	strh	r2, [r3, #22]
}
 8005366:	46c0      	nop			; (mov r8, r8)
 8005368:	46bd      	mov	sp, r7
 800536a:	b002      	add	sp, #8
 800536c:	bd80      	pop	{r7, pc}

0800536e <wsfx_setSaturation>:

void wsfx_setSaturation(wsfxEffect_TypeDef *effect, uint8_t saturation) {
 800536e:	b580      	push	{r7, lr}
 8005370:	b082      	sub	sp, #8
 8005372:	af00      	add	r7, sp, #0
 8005374:	6078      	str	r0, [r7, #4]
 8005376:	000a      	movs	r2, r1
 8005378:	1cfb      	adds	r3, r7, #3
 800537a:	701a      	strb	r2, [r3, #0]
	effect->flow.saturation = saturation;
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	1cfa      	adds	r2, r7, #3
 8005380:	7812      	ldrb	r2, [r2, #0]
 8005382:	74da      	strb	r2, [r3, #19]
}
 8005384:	46c0      	nop			; (mov r8, r8)
 8005386:	46bd      	mov	sp, r7
 8005388:	b002      	add	sp, #8
 800538a:	bd80      	pop	{r7, pc}

0800538c <wsfx_setColorSecond>:

void wsfx_setColorSecond(wsfxEffect_TypeDef *effect, uint16_t hue) {
 800538c:	b580      	push	{r7, lr}
 800538e:	b082      	sub	sp, #8
 8005390:	af00      	add	r7, sp, #0
 8005392:	6078      	str	r0, [r7, #4]
 8005394:	000a      	movs	r2, r1
 8005396:	1cbb      	adds	r3, r7, #2
 8005398:	801a      	strh	r2, [r3, #0]
	effect->flow.hue2 = hue;
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	1cba      	adds	r2, r7, #2
 800539e:	8812      	ldrh	r2, [r2, #0]
 80053a0:	821a      	strh	r2, [r3, #16]
}
 80053a2:	46c0      	nop			; (mov r8, r8)
 80053a4:	46bd      	mov	sp, r7
 80053a6:	b002      	add	sp, #8
 80053a8:	bd80      	pop	{r7, pc}

080053aa <wsfx_start>:

/*
 * start effect
 */
void wsfx_start(wsfxEffect_TypeDef *effect) {
 80053aa:	b580      	push	{r7, lr}
 80053ac:	b082      	sub	sp, #8
 80053ae:	af00      	add	r7, sp, #0
 80053b0:	6078      	str	r0, [r7, #4]
	effect->flow.state = WSFX_EFFECT_STATE_RUNNING;
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	2201      	movs	r2, #1
 80053b6:	751a      	strb	r2, [r3, #20]
}
 80053b8:	46c0      	nop			; (mov r8, r8)
 80053ba:	46bd      	mov	sp, r7
 80053bc:	b002      	add	sp, #8
 80053be:	bd80      	pop	{r7, pc}

080053c0 <wsfx_stop>:

/*
 * stop effect
 */
void wsfx_stop(wsfxEffect_TypeDef *effect) {
 80053c0:	b580      	push	{r7, lr}
 80053c2:	b082      	sub	sp, #8
 80053c4:	af00      	add	r7, sp, #0
 80053c6:	6078      	str	r0, [r7, #4]
	effect->flow.state = WSFX_EFFECT_STATE_STOP;
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	2200      	movs	r2, #0
 80053cc:	751a      	strb	r2, [r3, #20]
	effect->flow.counter = 0;
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	2200      	movs	r2, #0
 80053d2:	801a      	strh	r2, [r3, #0]

	_groupTurnOff(effect->flow.stripe, effect->flow.beginLED,
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	6858      	ldr	r0, [r3, #4]
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	891b      	ldrh	r3, [r3, #8]
 80053dc:	0019      	movs	r1, r3
			effect->flow.endLED);
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	895b      	ldrh	r3, [r3, #10]
	_groupTurnOff(effect->flow.stripe, effect->flow.beginLED,
 80053e2:	001a      	movs	r2, r3
 80053e4:	f000 f83b 	bl	800545e <_groupTurnOff>
	WS2812B_Refresh(effect->flow.stripe);
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	685b      	ldr	r3, [r3, #4]
 80053ec:	0018      	movs	r0, r3
 80053ee:	f7ff fdd5 	bl	8004f9c <WS2812B_Refresh>

}
 80053f2:	46c0      	nop			; (mov r8, r8)
 80053f4:	46bd      	mov	sp, r7
 80053f6:	b002      	add	sp, #8
 80053f8:	bd80      	pop	{r7, pc}
	...

080053fc <wsfx_interruptCallback>:

/*
 * run this function in interrupt callback
 */
void wsfx_interruptCallback(void) {
 80053fc:	b580      	push	{r7, lr}
 80053fe:	af00      	add	r7, sp, #0
	wsfx_flagRun = WSFX_RUN;
 8005400:	4b02      	ldr	r3, [pc, #8]	; (800540c <wsfx_interruptCallback+0x10>)
 8005402:	2201      	movs	r2, #1
 8005404:	701a      	strb	r2, [r3, #0]
}
 8005406:	46c0      	nop			; (mov r8, r8)
 8005408:	46bd      	mov	sp, r7
 800540a:	bd80      	pop	{r7, pc}
 800540c:	20000328 	.word	0x20000328

08005410 <_groupAction>:

void _groupAction(ws2812_Stripe_TypeDef *stripe, int first, int last,
		uint16_t hue, uint8_t saturation, uint8_t value) {
 8005410:	b590      	push	{r4, r7, lr}
 8005412:	b089      	sub	sp, #36	; 0x24
 8005414:	af02      	add	r7, sp, #8
 8005416:	60f8      	str	r0, [r7, #12]
 8005418:	60b9      	str	r1, [r7, #8]
 800541a:	607a      	str	r2, [r7, #4]
 800541c:	001a      	movs	r2, r3
 800541e:	1cbb      	adds	r3, r7, #2
 8005420:	801a      	strh	r2, [r3, #0]

	for (int i = first; i <= last; i++) {
 8005422:	68bb      	ldr	r3, [r7, #8]
 8005424:	617b      	str	r3, [r7, #20]
 8005426:	e011      	b.n	800544c <_groupAction+0x3c>
		WS2812B_setLedColorHSV(stripe, i, hue, saturation, value);
 8005428:	697b      	ldr	r3, [r7, #20]
 800542a:	b299      	uxth	r1, r3
 800542c:	2328      	movs	r3, #40	; 0x28
 800542e:	18fb      	adds	r3, r7, r3
 8005430:	781c      	ldrb	r4, [r3, #0]
 8005432:	1cbb      	adds	r3, r7, #2
 8005434:	881a      	ldrh	r2, [r3, #0]
 8005436:	68f8      	ldr	r0, [r7, #12]
 8005438:	232c      	movs	r3, #44	; 0x2c
 800543a:	18fb      	adds	r3, r7, r3
 800543c:	781b      	ldrb	r3, [r3, #0]
 800543e:	9300      	str	r3, [sp, #0]
 8005440:	0023      	movs	r3, r4
 8005442:	f7ff fc7f 	bl	8004d44 <WS2812B_setLedColorHSV>
	for (int i = first; i <= last; i++) {
 8005446:	697b      	ldr	r3, [r7, #20]
 8005448:	3301      	adds	r3, #1
 800544a:	617b      	str	r3, [r7, #20]
 800544c:	697a      	ldr	r2, [r7, #20]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	429a      	cmp	r2, r3
 8005452:	dde9      	ble.n	8005428 <_groupAction+0x18>
	}

}
 8005454:	46c0      	nop			; (mov r8, r8)
 8005456:	46c0      	nop			; (mov r8, r8)
 8005458:	46bd      	mov	sp, r7
 800545a:	b007      	add	sp, #28
 800545c:	bd90      	pop	{r4, r7, pc}

0800545e <_groupTurnOff>:

void _groupTurnOff(ws2812_Stripe_TypeDef *stripe, int first, int last) {
 800545e:	b580      	push	{r7, lr}
 8005460:	b086      	sub	sp, #24
 8005462:	af00      	add	r7, sp, #0
 8005464:	60f8      	str	r0, [r7, #12]
 8005466:	60b9      	str	r1, [r7, #8]
 8005468:	607a      	str	r2, [r7, #4]

	for (int i = first; i <= last; i++) {
 800546a:	68bb      	ldr	r3, [r7, #8]
 800546c:	617b      	str	r3, [r7, #20]
 800546e:	e009      	b.n	8005484 <_groupTurnOff+0x26>
		WS2812B_setLedColorRGB(stripe, i, 0x0);
 8005470:	697b      	ldr	r3, [r7, #20]
 8005472:	b299      	uxth	r1, r3
 8005474:	68fb      	ldr	r3, [r7, #12]
 8005476:	2200      	movs	r2, #0
 8005478:	0018      	movs	r0, r3
 800547a:	f7ff fc28 	bl	8004cce <WS2812B_setLedColorRGB>
	for (int i = first; i <= last; i++) {
 800547e:	697b      	ldr	r3, [r7, #20]
 8005480:	3301      	adds	r3, #1
 8005482:	617b      	str	r3, [r7, #20]
 8005484:	697a      	ldr	r2, [r7, #20]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	429a      	cmp	r2, r3
 800548a:	ddf1      	ble.n	8005470 <_groupTurnOff+0x12>
	}

}
 800548c:	46c0      	nop			; (mov r8, r8)
 800548e:	46c0      	nop			; (mov r8, r8)
 8005490:	46bd      	mov	sp, r7
 8005492:	b006      	add	sp, #24
 8005494:	bd80      	pop	{r7, pc}

08005496 <wsfx_step_movingLight>:

void wsfx_step_movingLight(wsfxEffectFlow_TypeDef *flow) {
 8005496:	b590      	push	{r4, r7, lr}
 8005498:	b089      	sub	sp, #36	; 0x24
 800549a:	af02      	add	r7, sp, #8
 800549c:	6078      	str	r0, [r7, #4]

	int leds = flow->endLED - flow->beginLED + 1;
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	895b      	ldrh	r3, [r3, #10]
 80054a2:	001a      	movs	r2, r3
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	891b      	ldrh	r3, [r3, #8]
 80054a8:	1ad3      	subs	r3, r2, r3
 80054aa:	3301      	adds	r3, #1
 80054ac:	60fb      	str	r3, [r7, #12]

	flow->steps = (leds * 2);
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	b29b      	uxth	r3, r3
 80054b2:	18db      	adds	r3, r3, r3
 80054b4:	b29a      	uxth	r2, r3
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	819a      	strh	r2, [r3, #12]

	int currentLED;

	uint8_t glowDirection = 0;
 80054ba:	2113      	movs	r1, #19
 80054bc:	187b      	adds	r3, r7, r1
 80054be:	2200      	movs	r2, #0
 80054c0:	701a      	strb	r2, [r3, #0]

	if (flow->counter < leds) {
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	881b      	ldrh	r3, [r3, #0]
 80054c6:	b29b      	uxth	r3, r3
 80054c8:	001a      	movs	r2, r3
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	4293      	cmp	r3, r2
 80054ce:	dd0b      	ble.n	80054e8 <wsfx_step_movingLight+0x52>

		currentLED = flow->counter + flow->beginLED;
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	881b      	ldrh	r3, [r3, #0]
 80054d4:	b29b      	uxth	r3, r3
 80054d6:	001a      	movs	r2, r3
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	891b      	ldrh	r3, [r3, #8]
 80054dc:	18d3      	adds	r3, r2, r3
 80054de:	617b      	str	r3, [r7, #20]
		glowDirection = 0;
 80054e0:	187b      	adds	r3, r7, r1
 80054e2:	2200      	movs	r2, #0
 80054e4:	701a      	strb	r2, [r3, #0]
 80054e6:	e00f      	b.n	8005508 <wsfx_step_movingLight+0x72>

	} else {

		currentLED = flow->steps - flow->counter - 1 + flow->beginLED;
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	899b      	ldrh	r3, [r3, #12]
 80054ec:	001a      	movs	r2, r3
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	881b      	ldrh	r3, [r3, #0]
 80054f2:	b29b      	uxth	r3, r3
 80054f4:	1ad3      	subs	r3, r2, r3
 80054f6:	3b01      	subs	r3, #1
 80054f8:	687a      	ldr	r2, [r7, #4]
 80054fa:	8912      	ldrh	r2, [r2, #8]
 80054fc:	189b      	adds	r3, r3, r2
 80054fe:	617b      	str	r3, [r7, #20]
		glowDirection = 1;
 8005500:	2313      	movs	r3, #19
 8005502:	18fb      	adds	r3, r7, r3
 8005504:	2201      	movs	r2, #1
 8005506:	701a      	strb	r2, [r3, #0]

	}

	if (flow->direction == WSFX_DIRECTION_BACK)
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	789b      	ldrb	r3, [r3, #2]
 800550c:	2b01      	cmp	r3, #1
 800550e:	d104      	bne.n	800551a <wsfx_step_movingLight+0x84>
		currentLED = leds - 1 - currentLED;
 8005510:	68fb      	ldr	r3, [r7, #12]
 8005512:	1e5a      	subs	r2, r3, #1
 8005514:	697b      	ldr	r3, [r7, #20]
 8005516:	1ad3      	subs	r3, r2, r3
 8005518:	617b      	str	r3, [r7, #20]

	_groupTurnOff(flow->stripe, flow->beginLED, flow->endLED);
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	6858      	ldr	r0, [r3, #4]
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	891b      	ldrh	r3, [r3, #8]
 8005522:	0019      	movs	r1, r3
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	895b      	ldrh	r3, [r3, #10]
 8005528:	001a      	movs	r2, r3
 800552a:	f7ff ff98 	bl	800545e <_groupTurnOff>

	WS2812B_setLedColorHSV(flow->stripe, currentLED, flow->hue,
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	6858      	ldr	r0, [r3, #4]
 8005532:	697b      	ldr	r3, [r7, #20]
 8005534:	b299      	uxth	r1, r3
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	89da      	ldrh	r2, [r3, #14]
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	7cdc      	ldrb	r4, [r3, #19]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	7c9b      	ldrb	r3, [r3, #18]
 8005542:	9300      	str	r3, [sp, #0]
 8005544:	0023      	movs	r3, r4
 8005546:	f7ff fbfd 	bl	8004d44 <WS2812B_setLedColorHSV>
			flow->saturation, flow->value);

	//glow
	if (glowDirection == 0) {
 800554a:	2313      	movs	r3, #19
 800554c:	18fb      	adds	r3, r7, r3
 800554e:	781b      	ldrb	r3, [r3, #0]
 8005550:	2b00      	cmp	r3, #0
 8005552:	d130      	bne.n	80055b6 <wsfx_step_movingLight+0x120>
		if (currentLED > flow->beginLED)
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	891b      	ldrh	r3, [r3, #8]
 8005558:	001a      	movs	r2, r3
 800555a:	697b      	ldr	r3, [r7, #20]
 800555c:	4293      	cmp	r3, r2
 800555e:	dd11      	ble.n	8005584 <wsfx_step_movingLight+0xee>
			WS2812B_setLedColorHSV(flow->stripe, currentLED - 1, flow->hue,
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	6858      	ldr	r0, [r3, #4]
 8005564:	697b      	ldr	r3, [r7, #20]
 8005566:	b29b      	uxth	r3, r3
 8005568:	3b01      	subs	r3, #1
 800556a:	b299      	uxth	r1, r3
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	89da      	ldrh	r2, [r3, #14]
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	7cdc      	ldrb	r4, [r3, #19]
					flow->saturation, flow->value / 2);
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	7c9b      	ldrb	r3, [r3, #18]
			WS2812B_setLedColorHSV(flow->stripe, currentLED - 1, flow->hue,
 8005578:	085b      	lsrs	r3, r3, #1
 800557a:	b2db      	uxtb	r3, r3
 800557c:	9300      	str	r3, [sp, #0]
 800557e:	0023      	movs	r3, r4
 8005580:	f7ff fbe0 	bl	8004d44 <WS2812B_setLedColorHSV>
		if (currentLED > flow->beginLED + 1)
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	891b      	ldrh	r3, [r3, #8]
 8005588:	3301      	adds	r3, #1
 800558a:	697a      	ldr	r2, [r7, #20]
 800558c:	429a      	cmp	r2, r3
 800558e:	dd42      	ble.n	8005616 <wsfx_step_movingLight+0x180>
			WS2812B_setLedColorHSV(flow->stripe, currentLED - 2, flow->hue,
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	6858      	ldr	r0, [r3, #4]
 8005594:	697b      	ldr	r3, [r7, #20]
 8005596:	b29b      	uxth	r3, r3
 8005598:	3b02      	subs	r3, #2
 800559a:	b299      	uxth	r1, r3
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	89da      	ldrh	r2, [r3, #14]
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	7cdc      	ldrb	r4, [r3, #19]
					flow->saturation, flow->value / 4);
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	7c9b      	ldrb	r3, [r3, #18]
			WS2812B_setLedColorHSV(flow->stripe, currentLED - 2, flow->hue,
 80055a8:	089b      	lsrs	r3, r3, #2
 80055aa:	b2db      	uxtb	r3, r3
 80055ac:	9300      	str	r3, [sp, #0]
 80055ae:	0023      	movs	r3, r4
 80055b0:	f7ff fbc8 	bl	8004d44 <WS2812B_setLedColorHSV>
 80055b4:	e02f      	b.n	8005616 <wsfx_step_movingLight+0x180>
	} else {
		if (currentLED < flow->endLED)
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	895b      	ldrh	r3, [r3, #10]
 80055ba:	001a      	movs	r2, r3
 80055bc:	697b      	ldr	r3, [r7, #20]
 80055be:	4293      	cmp	r3, r2
 80055c0:	da11      	bge.n	80055e6 <wsfx_step_movingLight+0x150>
			WS2812B_setLedColorHSV(flow->stripe, currentLED + 1, flow->hue,
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	6858      	ldr	r0, [r3, #4]
 80055c6:	697b      	ldr	r3, [r7, #20]
 80055c8:	b29b      	uxth	r3, r3
 80055ca:	3301      	adds	r3, #1
 80055cc:	b299      	uxth	r1, r3
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	89da      	ldrh	r2, [r3, #14]
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	7cdc      	ldrb	r4, [r3, #19]
					flow->saturation, flow->value / 2);
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	7c9b      	ldrb	r3, [r3, #18]
			WS2812B_setLedColorHSV(flow->stripe, currentLED + 1, flow->hue,
 80055da:	085b      	lsrs	r3, r3, #1
 80055dc:	b2db      	uxtb	r3, r3
 80055de:	9300      	str	r3, [sp, #0]
 80055e0:	0023      	movs	r3, r4
 80055e2:	f7ff fbaf 	bl	8004d44 <WS2812B_setLedColorHSV>
		if (currentLED +2 < flow->endLED + 1)
 80055e6:	697b      	ldr	r3, [r7, #20]
 80055e8:	3301      	adds	r3, #1
 80055ea:	687a      	ldr	r2, [r7, #4]
 80055ec:	8952      	ldrh	r2, [r2, #10]
 80055ee:	4293      	cmp	r3, r2
 80055f0:	da11      	bge.n	8005616 <wsfx_step_movingLight+0x180>
			WS2812B_setLedColorHSV(flow->stripe, currentLED + 2, flow->hue,
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	6858      	ldr	r0, [r3, #4]
 80055f6:	697b      	ldr	r3, [r7, #20]
 80055f8:	b29b      	uxth	r3, r3
 80055fa:	3302      	adds	r3, #2
 80055fc:	b299      	uxth	r1, r3
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	89da      	ldrh	r2, [r3, #14]
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	7cdc      	ldrb	r4, [r3, #19]
					flow->saturation, flow->value / 4);
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	7c9b      	ldrb	r3, [r3, #18]
			WS2812B_setLedColorHSV(flow->stripe, currentLED + 2, flow->hue,
 800560a:	089b      	lsrs	r3, r3, #2
 800560c:	b2db      	uxtb	r3, r3
 800560e:	9300      	str	r3, [sp, #0]
 8005610:	0023      	movs	r3, r4
 8005612:	f7ff fb97 	bl	8004d44 <WS2812B_setLedColorHSV>
	}

	WS2812B_Refresh(flow->stripe);
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	685b      	ldr	r3, [r3, #4]
 800561a:	0018      	movs	r0, r3
 800561c:	f7ff fcbe 	bl	8004f9c <WS2812B_Refresh>

}
 8005620:	46c0      	nop			; (mov r8, r8)
 8005622:	46bd      	mov	sp, r7
 8005624:	b007      	add	sp, #28
 8005626:	bd90      	pop	{r4, r7, pc}

08005628 <wsfx_step_hueChange>:

void wsfx_step_hueChange(wsfxEffectFlow_TypeDef *flow) {
 8005628:	b5b0      	push	{r4, r5, r7, lr}
 800562a:	b084      	sub	sp, #16
 800562c:	af02      	add	r7, sp, #8
 800562e:	6078      	str	r0, [r7, #4]

	flow->steps = 360;
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	22b4      	movs	r2, #180	; 0xb4
 8005634:	0052      	lsls	r2, r2, #1
 8005636:	819a      	strh	r2, [r3, #12]

	_groupAction(flow->stripe, flow->beginLED, flow->endLED, flow->counter,
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	6858      	ldr	r0, [r3, #4]
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	891b      	ldrh	r3, [r3, #8]
 8005640:	001c      	movs	r4, r3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	895b      	ldrh	r3, [r3, #10]
 8005646:	001d      	movs	r5, r3
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	881b      	ldrh	r3, [r3, #0]
 800564c:	b299      	uxth	r1, r3
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	7cdb      	ldrb	r3, [r3, #19]
 8005652:	687a      	ldr	r2, [r7, #4]
 8005654:	7c92      	ldrb	r2, [r2, #18]
 8005656:	9201      	str	r2, [sp, #4]
 8005658:	9300      	str	r3, [sp, #0]
 800565a:	000b      	movs	r3, r1
 800565c:	002a      	movs	r2, r5
 800565e:	0021      	movs	r1, r4
 8005660:	f7ff fed6 	bl	8005410 <_groupAction>
			flow->saturation, flow->value);

	WS2812B_Refresh(flow->stripe);
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	685b      	ldr	r3, [r3, #4]
 8005668:	0018      	movs	r0, r3
 800566a:	f7ff fc97 	bl	8004f9c <WS2812B_Refresh>

}
 800566e:	46c0      	nop			; (mov r8, r8)
 8005670:	46bd      	mov	sp, r7
 8005672:	b002      	add	sp, #8
 8005674:	bdb0      	pop	{r4, r5, r7, pc}

08005676 <wsfx_step_pulse>:

void wsfx_step_pulse(wsfxEffectFlow_TypeDef *flow) {
 8005676:	b5b0      	push	{r4, r5, r7, lr}
 8005678:	b086      	sub	sp, #24
 800567a:	af02      	add	r7, sp, #8
 800567c:	6078      	str	r0, [r7, #4]

	flow->steps = 20;
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	2214      	movs	r2, #20
 8005682:	819a      	strh	r2, [r3, #12]

	uint8_t actualValue = 0;
 8005684:	200f      	movs	r0, #15
 8005686:	183b      	adds	r3, r7, r0
 8005688:	2200      	movs	r2, #0
 800568a:	701a      	strb	r2, [r3, #0]

	if (flow->counter < 5) {
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	881b      	ldrh	r3, [r3, #0]
 8005690:	b29b      	uxth	r3, r3
 8005692:	2b04      	cmp	r3, #4
 8005694:	d814      	bhi.n	80056c0 <wsfx_step_pulse+0x4a>
		uint8_t divider = 6 - flow->counter;
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	881b      	ldrh	r3, [r3, #0]
 800569a:	b29b      	uxth	r3, r3
 800569c:	b2da      	uxtb	r2, r3
 800569e:	250e      	movs	r5, #14
 80056a0:	197b      	adds	r3, r7, r5
 80056a2:	2106      	movs	r1, #6
 80056a4:	1a8a      	subs	r2, r1, r2
 80056a6:	701a      	strb	r2, [r3, #0]
		actualValue = flow->value / divider;
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	7c9a      	ldrb	r2, [r3, #18]
 80056ac:	183c      	adds	r4, r7, r0
 80056ae:	197b      	adds	r3, r7, r5
 80056b0:	781b      	ldrb	r3, [r3, #0]
 80056b2:	0019      	movs	r1, r3
 80056b4:	0010      	movs	r0, r2
 80056b6:	f7fa fd25 	bl	8000104 <__udivsi3>
 80056ba:	0003      	movs	r3, r0
 80056bc:	7023      	strb	r3, [r4, #0]
 80056be:	e01a      	b.n	80056f6 <wsfx_step_pulse+0x80>
	}

	else if (flow->counter == 5) {
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	881b      	ldrh	r3, [r3, #0]
 80056c4:	b29b      	uxth	r3, r3
 80056c6:	2b05      	cmp	r3, #5
 80056c8:	d105      	bne.n	80056d6 <wsfx_step_pulse+0x60>
		actualValue = flow->value;
 80056ca:	230f      	movs	r3, #15
 80056cc:	18fb      	adds	r3, r7, r3
 80056ce:	687a      	ldr	r2, [r7, #4]
 80056d0:	7c92      	ldrb	r2, [r2, #18]
 80056d2:	701a      	strb	r2, [r3, #0]
 80056d4:	e00f      	b.n	80056f6 <wsfx_step_pulse+0x80>
	} else {
		actualValue = flow->value / (flow->counter *2);
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	7c9b      	ldrb	r3, [r3, #18]
 80056da:	001a      	movs	r2, r3
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	881b      	ldrh	r3, [r3, #0]
 80056e0:	b29b      	uxth	r3, r3
 80056e2:	005b      	lsls	r3, r3, #1
 80056e4:	0019      	movs	r1, r3
 80056e6:	0010      	movs	r0, r2
 80056e8:	f7fa fd96 	bl	8000218 <__divsi3>
 80056ec:	0003      	movs	r3, r0
 80056ee:	001a      	movs	r2, r3
 80056f0:	230f      	movs	r3, #15
 80056f2:	18fb      	adds	r3, r7, r3
 80056f4:	701a      	strb	r2, [r3, #0]
	}

	_groupAction(flow->stripe, flow->beginLED, flow->endLED, flow->hue,
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	6858      	ldr	r0, [r3, #4]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	891b      	ldrh	r3, [r3, #8]
 80056fe:	001c      	movs	r4, r3
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	895b      	ldrh	r3, [r3, #10]
 8005704:	001d      	movs	r5, r3
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	89d9      	ldrh	r1, [r3, #14]
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	7cdb      	ldrb	r3, [r3, #19]
 800570e:	220f      	movs	r2, #15
 8005710:	18ba      	adds	r2, r7, r2
 8005712:	7812      	ldrb	r2, [r2, #0]
 8005714:	9201      	str	r2, [sp, #4]
 8005716:	9300      	str	r3, [sp, #0]
 8005718:	000b      	movs	r3, r1
 800571a:	002a      	movs	r2, r5
 800571c:	0021      	movs	r1, r4
 800571e:	f7ff fe77 	bl	8005410 <_groupAction>
			flow->saturation, actualValue);

	WS2812B_Refresh(flow->stripe);
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	685b      	ldr	r3, [r3, #4]
 8005726:	0018      	movs	r0, r3
 8005728:	f7ff fc38 	bl	8004f9c <WS2812B_Refresh>

}
 800572c:	46c0      	nop			; (mov r8, r8)
 800572e:	46bd      	mov	sp, r7
 8005730:	b004      	add	sp, #16
 8005732:	bdb0      	pop	{r4, r5, r7, pc}

08005734 <wsfx_step_blinker>:

void wsfx_step_blinker(wsfxEffectFlow_TypeDef *flow) {
 8005734:	b5b0      	push	{r4, r5, r7, lr}
 8005736:	b086      	sub	sp, #24
 8005738:	af02      	add	r7, sp, #8
 800573a:	6078      	str	r0, [r7, #4]

	flow->steps = 16;
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	2210      	movs	r2, #16
 8005740:	819a      	strh	r2, [r3, #12]

	int leds = flow->endLED - flow->beginLED + 1;
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	895b      	ldrh	r3, [r3, #10]
 8005746:	001a      	movs	r2, r3
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	891b      	ldrh	r3, [r3, #8]
 800574c:	1ad3      	subs	r3, r2, r3
 800574e:	3301      	adds	r3, #1
 8005750:	60fb      	str	r3, [r7, #12]

	int midLED = leds / 2;
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	2b00      	cmp	r3, #0
 8005756:	da00      	bge.n	800575a <wsfx_step_blinker+0x26>
 8005758:	3301      	adds	r3, #1
 800575a:	105b      	asrs	r3, r3, #1
 800575c:	60bb      	str	r3, [r7, #8]

	if (flow->counter & 1) { //for odd turn off LEDs
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	881b      	ldrh	r3, [r3, #0]
 8005762:	b29b      	uxth	r3, r3
 8005764:	001a      	movs	r2, r3
 8005766:	2301      	movs	r3, #1
 8005768:	4013      	ands	r3, r2
 800576a:	d00a      	beq.n	8005782 <wsfx_step_blinker+0x4e>

		_groupTurnOff(flow->stripe, flow->beginLED, flow->endLED);
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	6858      	ldr	r0, [r3, #4]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	891b      	ldrh	r3, [r3, #8]
 8005774:	0019      	movs	r1, r3
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	895b      	ldrh	r3, [r3, #10]
 800577a:	001a      	movs	r2, r3
 800577c:	f7ff fe6f 	bl	800545e <_groupTurnOff>
 8005780:	e036      	b.n	80057f0 <wsfx_step_blinker+0xbc>

	} else {

		if (flow->counter < flow->steps / 2) { // light first color
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	881b      	ldrh	r3, [r3, #0]
 8005786:	b29a      	uxth	r2, r3
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	899b      	ldrh	r3, [r3, #12]
 800578c:	085b      	lsrs	r3, r3, #1
 800578e:	b29b      	uxth	r3, r3
 8005790:	429a      	cmp	r2, r3
 8005792:	d217      	bcs.n	80057c4 <wsfx_step_blinker+0x90>

			_groupAction(flow->stripe, flow->beginLED, flow->beginLED + midLED,
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	6858      	ldr	r0, [r3, #4]
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	891b      	ldrh	r3, [r3, #8]
 800579c:	001d      	movs	r5, r3
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	891b      	ldrh	r3, [r3, #8]
 80057a2:	001a      	movs	r2, r3
 80057a4:	68bb      	ldr	r3, [r7, #8]
 80057a6:	18d1      	adds	r1, r2, r3
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	89dc      	ldrh	r4, [r3, #14]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	7cdb      	ldrb	r3, [r3, #19]
 80057b0:	687a      	ldr	r2, [r7, #4]
 80057b2:	7c92      	ldrb	r2, [r2, #18]
 80057b4:	9201      	str	r2, [sp, #4]
 80057b6:	9300      	str	r3, [sp, #0]
 80057b8:	0023      	movs	r3, r4
 80057ba:	000a      	movs	r2, r1
 80057bc:	0029      	movs	r1, r5
 80057be:	f7ff fe27 	bl	8005410 <_groupAction>
 80057c2:	e015      	b.n	80057f0 <wsfx_step_blinker+0xbc>
					flow->hue, flow->saturation, flow->value);

		} else { //light second color

			_groupAction(flow->stripe, flow->beginLED + midLED, flow->endLED,
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	6858      	ldr	r0, [r3, #4]
 80057c8:	687b      	ldr	r3, [r7, #4]
 80057ca:	891b      	ldrh	r3, [r3, #8]
 80057cc:	001a      	movs	r2, r3
 80057ce:	68bb      	ldr	r3, [r7, #8]
 80057d0:	18d1      	adds	r1, r2, r3
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	895b      	ldrh	r3, [r3, #10]
 80057d6:	001d      	movs	r5, r3
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	8a1c      	ldrh	r4, [r3, #16]
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	7cdb      	ldrb	r3, [r3, #19]
 80057e0:	687a      	ldr	r2, [r7, #4]
 80057e2:	7c92      	ldrb	r2, [r2, #18]
 80057e4:	9201      	str	r2, [sp, #4]
 80057e6:	9300      	str	r3, [sp, #0]
 80057e8:	0023      	movs	r3, r4
 80057ea:	002a      	movs	r2, r5
 80057ec:	f7ff fe10 	bl	8005410 <_groupAction>
					flow->hue2, flow->saturation, flow->value);

		}
	}

	WS2812B_Refresh(flow->stripe);
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	685b      	ldr	r3, [r3, #4]
 80057f4:	0018      	movs	r0, r3
 80057f6:	f7ff fbd1 	bl	8004f9c <WS2812B_Refresh>

}
 80057fa:	46c0      	nop			; (mov r8, r8)
 80057fc:	46bd      	mov	sp, r7
 80057fe:	b004      	add	sp, #16
 8005800:	bdb0      	pop	{r4, r5, r7, pc}

08005802 <wsfx_step_starting>:

	WS2812B_Refresh(flow->stripe);

}

void wsfx_step_starting(wsfxEffectFlow_TypeDef *flow) {
 8005802:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005804:	46ce      	mov	lr, r9
 8005806:	4647      	mov	r7, r8
 8005808:	b580      	push	{r7, lr}
 800580a:	b089      	sub	sp, #36	; 0x24
 800580c:	af02      	add	r7, sp, #8
 800580e:	6078      	str	r0, [r7, #4]

	int leds = flow->endLED - flow->beginLED + 1;
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	895b      	ldrh	r3, [r3, #10]
 8005814:	001a      	movs	r2, r3
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	891b      	ldrh	r3, [r3, #8]
 800581a:	1ad3      	subs	r3, r2, r3
 800581c:	3301      	adds	r3, #1
 800581e:	617b      	str	r3, [r7, #20]

	flow->steps = (leds) * 2 + 20;
 8005820:	697b      	ldr	r3, [r7, #20]
 8005822:	330a      	adds	r3, #10
 8005824:	b29b      	uxth	r3, r3
 8005826:	18db      	adds	r3, r3, r3
 8005828:	b29a      	uxth	r2, r3
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	819a      	strh	r2, [r3, #12]

	int currentLED1, currentLED2;

	if (flow->counter < (flow->steps - 20) / 2) { //first stage
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	881b      	ldrh	r3, [r3, #0]
 8005832:	b29b      	uxth	r3, r3
 8005834:	001a      	movs	r2, r3
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	899b      	ldrh	r3, [r3, #12]
 800583a:	3b14      	subs	r3, #20
 800583c:	2b00      	cmp	r3, #0
 800583e:	da00      	bge.n	8005842 <wsfx_step_starting+0x40>
 8005840:	3301      	adds	r3, #1
 8005842:	105b      	asrs	r3, r3, #1
 8005844:	429a      	cmp	r2, r3
 8005846:	da3a      	bge.n	80058be <wsfx_step_starting+0xbc>

		_groupTurnOff(flow->stripe, flow->beginLED, flow->endLED);
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	6858      	ldr	r0, [r3, #4]
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	891b      	ldrh	r3, [r3, #8]
 8005850:	0019      	movs	r1, r3
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	895b      	ldrh	r3, [r3, #10]
 8005856:	001a      	movs	r2, r3
 8005858:	f7ff fe01 	bl	800545e <_groupTurnOff>
		currentLED1 = flow->beginLED + flow->counter;
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	891b      	ldrh	r3, [r3, #8]
 8005860:	001a      	movs	r2, r3
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	881b      	ldrh	r3, [r3, #0]
 8005866:	b29b      	uxth	r3, r3
 8005868:	18d3      	adds	r3, r2, r3
 800586a:	60fb      	str	r3, [r7, #12]
		currentLED2 = flow->endLED - flow->counter;
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	895b      	ldrh	r3, [r3, #10]
 8005870:	001a      	movs	r2, r3
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	881b      	ldrh	r3, [r3, #0]
 8005876:	b29b      	uxth	r3, r3
 8005878:	1ad3      	subs	r3, r2, r3
 800587a:	60bb      	str	r3, [r7, #8]

		WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	6858      	ldr	r0, [r3, #4]
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	b299      	uxth	r1, r3
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	89da      	ldrh	r2, [r3, #14]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	7cdc      	ldrb	r4, [r3, #19]
				flow->saturation, flow->value / 4);
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	7c9b      	ldrb	r3, [r3, #18]
		WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005890:	089b      	lsrs	r3, r3, #2
 8005892:	b2db      	uxtb	r3, r3
 8005894:	9300      	str	r3, [sp, #0]
 8005896:	0023      	movs	r3, r4
 8005898:	f7ff fa54 	bl	8004d44 <WS2812B_setLedColorHSV>
		WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	6858      	ldr	r0, [r3, #4]
 80058a0:	68bb      	ldr	r3, [r7, #8]
 80058a2:	b299      	uxth	r1, r3
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	89da      	ldrh	r2, [r3, #14]
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	7cdc      	ldrb	r4, [r3, #19]
				flow->saturation, flow->value / 4);
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	7c9b      	ldrb	r3, [r3, #18]
		WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 80058b0:	089b      	lsrs	r3, r3, #2
 80058b2:	b2db      	uxtb	r3, r3
 80058b4:	9300      	str	r3, [sp, #0]
 80058b6:	0023      	movs	r3, r4
 80058b8:	f7ff fa44 	bl	8004d44 <WS2812B_setLedColorHSV>
 80058bc:	e0b3      	b.n	8005a26 <wsfx_step_starting+0x224>

	} else if (flow->counter < flow->steps - 20 - leds / 2) { //second stage
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	881b      	ldrh	r3, [r3, #0]
 80058c2:	b29b      	uxth	r3, r3
 80058c4:	0019      	movs	r1, r3
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	899b      	ldrh	r3, [r3, #12]
 80058ca:	3b14      	subs	r3, #20
 80058cc:	001a      	movs	r2, r3
 80058ce:	697b      	ldr	r3, [r7, #20]
 80058d0:	2b00      	cmp	r3, #0
 80058d2:	da00      	bge.n	80058d6 <wsfx_step_starting+0xd4>
 80058d4:	3301      	adds	r3, #1
 80058d6:	105b      	asrs	r3, r3, #1
 80058d8:	425b      	negs	r3, r3
 80058da:	18d3      	adds	r3, r2, r3
 80058dc:	4299      	cmp	r1, r3
 80058de:	da38      	bge.n	8005952 <wsfx_step_starting+0x150>

		currentLED1 = flow->beginLED + (flow->counter - flow->endLED);
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	891b      	ldrh	r3, [r3, #8]
 80058e4:	001a      	movs	r2, r3
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	881b      	ldrh	r3, [r3, #0]
 80058ea:	b29b      	uxth	r3, r3
 80058ec:	0019      	movs	r1, r3
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	895b      	ldrh	r3, [r3, #10]
 80058f2:	1acb      	subs	r3, r1, r3
 80058f4:	18d3      	adds	r3, r2, r3
 80058f6:	60fb      	str	r3, [r7, #12]
		currentLED2 = flow->endLED - (flow->counter - flow->endLED);
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	895b      	ldrh	r3, [r3, #10]
 80058fc:	001a      	movs	r2, r3
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	881b      	ldrh	r3, [r3, #0]
 8005902:	b29b      	uxth	r3, r3
 8005904:	0019      	movs	r1, r3
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	895b      	ldrh	r3, [r3, #10]
 800590a:	1acb      	subs	r3, r1, r3
 800590c:	1ad3      	subs	r3, r2, r3
 800590e:	60bb      	str	r3, [r7, #8]

		WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	6858      	ldr	r0, [r3, #4]
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	b299      	uxth	r1, r3
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	89da      	ldrh	r2, [r3, #14]
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	7cdc      	ldrb	r4, [r3, #19]
				flow->saturation, flow->value / 4);
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	7c9b      	ldrb	r3, [r3, #18]
		WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005924:	089b      	lsrs	r3, r3, #2
 8005926:	b2db      	uxtb	r3, r3
 8005928:	9300      	str	r3, [sp, #0]
 800592a:	0023      	movs	r3, r4
 800592c:	f7ff fa0a 	bl	8004d44 <WS2812B_setLedColorHSV>
		WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	6858      	ldr	r0, [r3, #4]
 8005934:	68bb      	ldr	r3, [r7, #8]
 8005936:	b299      	uxth	r1, r3
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	89da      	ldrh	r2, [r3, #14]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	7cdc      	ldrb	r4, [r3, #19]
				flow->saturation, flow->value / 4);
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	7c9b      	ldrb	r3, [r3, #18]
		WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 8005944:	089b      	lsrs	r3, r3, #2
 8005946:	b2db      	uxtb	r3, r3
 8005948:	9300      	str	r3, [sp, #0]
 800594a:	0023      	movs	r3, r4
 800594c:	f7ff f9fa 	bl	8004d44 <WS2812B_setLedColorHSV>
 8005950:	e069      	b.n	8005a26 <wsfx_step_starting+0x224>

	} else if (flow->counter <= flow->steps - 20) { //third stage
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	899b      	ldrh	r3, [r3, #12]
 8005956:	3b13      	subs	r3, #19
 8005958:	687a      	ldr	r2, [r7, #4]
 800595a:	8812      	ldrh	r2, [r2, #0]
 800595c:	b292      	uxth	r2, r2
 800595e:	4293      	cmp	r3, r2
 8005960:	dd36      	ble.n	80059d0 <wsfx_step_starting+0x1ce>

		currentLED1 = flow->beginLED + (flow->counter - flow->endLED - 1);
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	891b      	ldrh	r3, [r3, #8]
 8005966:	001a      	movs	r2, r3
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	881b      	ldrh	r3, [r3, #0]
 800596c:	b29b      	uxth	r3, r3
 800596e:	0019      	movs	r1, r3
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	895b      	ldrh	r3, [r3, #10]
 8005974:	1acb      	subs	r3, r1, r3
 8005976:	3b01      	subs	r3, #1
 8005978:	18d3      	adds	r3, r2, r3
 800597a:	60fb      	str	r3, [r7, #12]
		currentLED2 = flow->endLED - (flow->counter - flow->endLED - 1);
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	895b      	ldrh	r3, [r3, #10]
 8005980:	001a      	movs	r2, r3
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	881b      	ldrh	r3, [r3, #0]
 8005986:	b29b      	uxth	r3, r3
 8005988:	0019      	movs	r1, r3
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	895b      	ldrh	r3, [r3, #10]
 800598e:	1acb      	subs	r3, r1, r3
 8005990:	3b01      	subs	r3, #1
 8005992:	1ad3      	subs	r3, r2, r3
 8005994:	60bb      	str	r3, [r7, #8]

		WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	6858      	ldr	r0, [r3, #4]
 800599a:	68fb      	ldr	r3, [r7, #12]
 800599c:	b299      	uxth	r1, r3
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	89da      	ldrh	r2, [r3, #14]
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	7cdc      	ldrb	r4, [r3, #19]
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	7c9b      	ldrb	r3, [r3, #18]
 80059aa:	9300      	str	r3, [sp, #0]
 80059ac:	0023      	movs	r3, r4
 80059ae:	f7ff f9c9 	bl	8004d44 <WS2812B_setLedColorHSV>
				flow->saturation, flow->value);
		WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	6858      	ldr	r0, [r3, #4]
 80059b6:	68bb      	ldr	r3, [r7, #8]
 80059b8:	b299      	uxth	r1, r3
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	89da      	ldrh	r2, [r3, #14]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	7cdc      	ldrb	r4, [r3, #19]
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	7c9b      	ldrb	r3, [r3, #18]
 80059c6:	9300      	str	r3, [sp, #0]
 80059c8:	0023      	movs	r3, r4
 80059ca:	f7ff f9bb 	bl	8004d44 <WS2812B_setLedColorHSV>
 80059ce:	e02a      	b.n	8005a26 <wsfx_step_starting+0x224>
				flow->saturation, flow->value);

	} else { //last stage

		uint8_t divider = flow->counter - (flow->steps - 20);
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	881b      	ldrh	r3, [r3, #0]
 80059d4:	b29b      	uxth	r3, r3
 80059d6:	b2da      	uxtb	r2, r3
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	899b      	ldrh	r3, [r3, #12]
 80059dc:	b2db      	uxtb	r3, r3
 80059de:	1ad3      	subs	r3, r2, r3
 80059e0:	b2da      	uxtb	r2, r3
 80059e2:	2113      	movs	r1, #19
 80059e4:	187b      	adds	r3, r7, r1
 80059e6:	3214      	adds	r2, #20
 80059e8:	701a      	strb	r2, [r3, #0]

		_groupAction(flow->stripe, flow->beginLED, flow->endLED, flow->hue,
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	685d      	ldr	r5, [r3, #4]
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	891b      	ldrh	r3, [r3, #8]
 80059f2:	4698      	mov	r8, r3
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	895b      	ldrh	r3, [r3, #10]
 80059f8:	4699      	mov	r9, r3
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	89de      	ldrh	r6, [r3, #14]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	7cdc      	ldrb	r4, [r3, #19]
				flow->saturation, flow->value / divider);
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	7c9a      	ldrb	r2, [r3, #18]
		_groupAction(flow->stripe, flow->beginLED, flow->endLED, flow->hue,
 8005a06:	187b      	adds	r3, r7, r1
 8005a08:	781b      	ldrb	r3, [r3, #0]
 8005a0a:	0019      	movs	r1, r3
 8005a0c:	0010      	movs	r0, r2
 8005a0e:	f7fa fb79 	bl	8000104 <__udivsi3>
 8005a12:	0003      	movs	r3, r0
 8005a14:	b2db      	uxtb	r3, r3
 8005a16:	9301      	str	r3, [sp, #4]
 8005a18:	9400      	str	r4, [sp, #0]
 8005a1a:	0033      	movs	r3, r6
 8005a1c:	464a      	mov	r2, r9
 8005a1e:	4641      	mov	r1, r8
 8005a20:	0028      	movs	r0, r5
 8005a22:	f7ff fcf5 	bl	8005410 <_groupAction>

	}

	WS2812B_Refresh(flow->stripe);
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	685b      	ldr	r3, [r3, #4]
 8005a2a:	0018      	movs	r0, r3
 8005a2c:	f7ff fab6 	bl	8004f9c <WS2812B_Refresh>

}
 8005a30:	46c0      	nop			; (mov r8, r8)
 8005a32:	46bd      	mov	sp, r7
 8005a34:	b007      	add	sp, #28
 8005a36:	bcc0      	pop	{r6, r7}
 8005a38:	46b9      	mov	r9, r7
 8005a3a:	46b0      	mov	r8, r6
 8005a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005a3e <wsfx_step_constantColor>:

void wsfx_step_constantColor(wsfxEffectFlow_TypeDef *flow) {
 8005a3e:	b5b0      	push	{r4, r5, r7, lr}
 8005a40:	b084      	sub	sp, #16
 8005a42:	af02      	add	r7, sp, #8
 8005a44:	6078      	str	r0, [r7, #4]

	flow->steps = 20;
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	2214      	movs	r2, #20
 8005a4a:	819a      	strh	r2, [r3, #12]

	_groupAction(flow->stripe, flow->beginLED, flow->endLED, flow->hue,
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	6858      	ldr	r0, [r3, #4]
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	891b      	ldrh	r3, [r3, #8]
 8005a54:	001c      	movs	r4, r3
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	895b      	ldrh	r3, [r3, #10]
 8005a5a:	001d      	movs	r5, r3
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	89d9      	ldrh	r1, [r3, #14]
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	7cdb      	ldrb	r3, [r3, #19]
 8005a64:	687a      	ldr	r2, [r7, #4]
 8005a66:	7c92      	ldrb	r2, [r2, #18]
 8005a68:	9201      	str	r2, [sp, #4]
 8005a6a:	9300      	str	r3, [sp, #0]
 8005a6c:	000b      	movs	r3, r1
 8005a6e:	002a      	movs	r2, r5
 8005a70:	0021      	movs	r1, r4
 8005a72:	f7ff fccd 	bl	8005410 <_groupAction>
			flow->saturation, flow->value);

	WS2812B_Refresh(flow->stripe);
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	685b      	ldr	r3, [r3, #4]
 8005a7a:	0018      	movs	r0, r3
 8005a7c:	f7ff fa8e 	bl	8004f9c <WS2812B_Refresh>

}
 8005a80:	46c0      	nop			; (mov r8, r8)
 8005a82:	46bd      	mov	sp, r7
 8005a84:	b002      	add	sp, #8
 8005a86:	bdb0      	pop	{r4, r5, r7, pc}

08005a88 <wsfx_step_warpHalf>:

	WS2812B_Refresh(flow->stripe);

}

void wsfx_step_warpHalf(wsfxEffectFlow_TypeDef *flow) {
 8005a88:	b590      	push	{r4, r7, lr}
 8005a8a:	b089      	sub	sp, #36	; 0x24
 8005a8c:	af02      	add	r7, sp, #8
 8005a8e:	6078      	str	r0, [r7, #4]

	int leds = flow->endLED - flow->beginLED + 1;
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	895b      	ldrh	r3, [r3, #10]
 8005a94:	001a      	movs	r2, r3
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	891b      	ldrh	r3, [r3, #8]
 8005a9a:	1ad3      	subs	r3, r2, r3
 8005a9c:	3301      	adds	r3, #1
 8005a9e:	617b      	str	r3, [r7, #20]

	flow->steps = (leds) / 2 /2;
 8005aa0:	697b      	ldr	r3, [r7, #20]
 8005aa2:	2b00      	cmp	r3, #0
 8005aa4:	da00      	bge.n	8005aa8 <wsfx_step_warpHalf+0x20>
 8005aa6:	3303      	adds	r3, #3
 8005aa8:	109b      	asrs	r3, r3, #2
 8005aaa:	b29a      	uxth	r2, r3
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	819a      	strh	r2, [r3, #12]

	int currentLED1, currentLED2;

	_groupTurnOff(flow->stripe, flow->beginLED, flow->beginLED + flow->steps);
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	6858      	ldr	r0, [r3, #4]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	891b      	ldrh	r3, [r3, #8]
 8005ab8:	0019      	movs	r1, r3
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	891b      	ldrh	r3, [r3, #8]
 8005abe:	001a      	movs	r2, r3
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	899b      	ldrh	r3, [r3, #12]
 8005ac4:	18d3      	adds	r3, r2, r3
 8005ac6:	001a      	movs	r2, r3
 8005ac8:	f7ff fcc9 	bl	800545e <_groupTurnOff>
	_groupTurnOff(flow->stripe, flow->endLED - flow->steps, flow->endLED);
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	6858      	ldr	r0, [r3, #4]
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	895b      	ldrh	r3, [r3, #10]
 8005ad4:	001a      	movs	r2, r3
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	899b      	ldrh	r3, [r3, #12]
 8005ada:	1ad1      	subs	r1, r2, r3
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	895b      	ldrh	r3, [r3, #10]
 8005ae0:	001a      	movs	r2, r3
 8005ae2:	f7ff fcbc 	bl	800545e <_groupTurnOff>


	currentLED1 = flow->beginLED + flow->counter;
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	891b      	ldrh	r3, [r3, #8]
 8005aea:	001a      	movs	r2, r3
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	881b      	ldrh	r3, [r3, #0]
 8005af0:	b29b      	uxth	r3, r3
 8005af2:	18d3      	adds	r3, r2, r3
 8005af4:	613b      	str	r3, [r7, #16]
	currentLED2 = flow->endLED - flow->counter;
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	895b      	ldrh	r3, [r3, #10]
 8005afa:	001a      	movs	r2, r3
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	881b      	ldrh	r3, [r3, #0]
 8005b00:	b29b      	uxth	r3, r3
 8005b02:	1ad3      	subs	r3, r2, r3
 8005b04:	60fb      	str	r3, [r7, #12]

	WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	6858      	ldr	r0, [r3, #4]
 8005b0a:	693b      	ldr	r3, [r7, #16]
 8005b0c:	b299      	uxth	r1, r3
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	89da      	ldrh	r2, [r3, #14]
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	7cdc      	ldrb	r4, [r3, #19]
			flow->saturation, flow->value / 4);
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	7c9b      	ldrb	r3, [r3, #18]
	WS2812B_setLedColorHSV(flow->stripe, currentLED1, flow->hue,
 8005b1a:	089b      	lsrs	r3, r3, #2
 8005b1c:	b2db      	uxtb	r3, r3
 8005b1e:	9300      	str	r3, [sp, #0]
 8005b20:	0023      	movs	r3, r4
 8005b22:	f7ff f90f 	bl	8004d44 <WS2812B_setLedColorHSV>
	WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	6858      	ldr	r0, [r3, #4]
 8005b2a:	68fb      	ldr	r3, [r7, #12]
 8005b2c:	b299      	uxth	r1, r3
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	89da      	ldrh	r2, [r3, #14]
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	7cdc      	ldrb	r4, [r3, #19]
			flow->saturation, flow->value / 4);
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	7c9b      	ldrb	r3, [r3, #18]
	WS2812B_setLedColorHSV(flow->stripe, currentLED2, flow->hue,
 8005b3a:	089b      	lsrs	r3, r3, #2
 8005b3c:	b2db      	uxtb	r3, r3
 8005b3e:	9300      	str	r3, [sp, #0]
 8005b40:	0023      	movs	r3, r4
 8005b42:	f7ff f8ff 	bl	8004d44 <WS2812B_setLedColorHSV>

	WS2812B_Refresh(flow->stripe);
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	685b      	ldr	r3, [r3, #4]
 8005b4a:	0018      	movs	r0, r3
 8005b4c:	f7ff fa26 	bl	8004f9c <WS2812B_Refresh>

}
 8005b50:	46c0      	nop			; (mov r8, r8)
 8005b52:	46bd      	mov	sp, r7
 8005b54:	b007      	add	sp, #28
 8005b56:	bd90      	pop	{r4, r7, pc}

08005b58 <Reset_Handler>:
 8005b58:	480d      	ldr	r0, [pc, #52]	; (8005b90 <LoopForever+0x2>)
 8005b5a:	4685      	mov	sp, r0
 8005b5c:	f7fe fffc 	bl	8004b58 <SystemInit>
 8005b60:	480c      	ldr	r0, [pc, #48]	; (8005b94 <LoopForever+0x6>)
 8005b62:	490d      	ldr	r1, [pc, #52]	; (8005b98 <LoopForever+0xa>)
 8005b64:	4a0d      	ldr	r2, [pc, #52]	; (8005b9c <LoopForever+0xe>)
 8005b66:	2300      	movs	r3, #0
 8005b68:	e002      	b.n	8005b70 <LoopCopyDataInit>

08005b6a <CopyDataInit>:
 8005b6a:	58d4      	ldr	r4, [r2, r3]
 8005b6c:	50c4      	str	r4, [r0, r3]
 8005b6e:	3304      	adds	r3, #4

08005b70 <LoopCopyDataInit>:
 8005b70:	18c4      	adds	r4, r0, r3
 8005b72:	428c      	cmp	r4, r1
 8005b74:	d3f9      	bcc.n	8005b6a <CopyDataInit>
 8005b76:	4a0a      	ldr	r2, [pc, #40]	; (8005ba0 <LoopForever+0x12>)
 8005b78:	4c0a      	ldr	r4, [pc, #40]	; (8005ba4 <LoopForever+0x16>)
 8005b7a:	2300      	movs	r3, #0
 8005b7c:	e001      	b.n	8005b82 <LoopFillZerobss>

08005b7e <FillZerobss>:
 8005b7e:	6013      	str	r3, [r2, #0]
 8005b80:	3204      	adds	r2, #4

08005b82 <LoopFillZerobss>:
 8005b82:	42a2      	cmp	r2, r4
 8005b84:	d3fb      	bcc.n	8005b7e <FillZerobss>
 8005b86:	f000 f8ef 	bl	8005d68 <__libc_init_array>
 8005b8a:	f7fe fcd7 	bl	800453c <main>

08005b8e <LoopForever>:
 8005b8e:	e7fe      	b.n	8005b8e <LoopForever>
 8005b90:	20009000 	.word	0x20009000
 8005b94:	20000000 	.word	0x20000000
 8005b98:	2000005c 	.word	0x2000005c
 8005b9c:	08006008 	.word	0x08006008
 8005ba0:	2000005c 	.word	0x2000005c
 8005ba4:	20000478 	.word	0x20000478

08005ba8 <ADC1_COMP_IRQHandler>:
 8005ba8:	e7fe      	b.n	8005ba8 <ADC1_COMP_IRQHandler>
	...

08005bac <malloc>:
 8005bac:	b510      	push	{r4, lr}
 8005bae:	4b03      	ldr	r3, [pc, #12]	; (8005bbc <malloc+0x10>)
 8005bb0:	0001      	movs	r1, r0
 8005bb2:	6818      	ldr	r0, [r3, #0]
 8005bb4:	f000 f826 	bl	8005c04 <_malloc_r>
 8005bb8:	bd10      	pop	{r4, pc}
 8005bba:	46c0      	nop			; (mov r8, r8)
 8005bbc:	20000058 	.word	0x20000058

08005bc0 <sbrk_aligned>:
 8005bc0:	b570      	push	{r4, r5, r6, lr}
 8005bc2:	4e0f      	ldr	r6, [pc, #60]	; (8005c00 <sbrk_aligned+0x40>)
 8005bc4:	000d      	movs	r5, r1
 8005bc6:	6831      	ldr	r1, [r6, #0]
 8005bc8:	0004      	movs	r4, r0
 8005bca:	2900      	cmp	r1, #0
 8005bcc:	d102      	bne.n	8005bd4 <sbrk_aligned+0x14>
 8005bce:	f000 f8b3 	bl	8005d38 <_sbrk_r>
 8005bd2:	6030      	str	r0, [r6, #0]
 8005bd4:	0029      	movs	r1, r5
 8005bd6:	0020      	movs	r0, r4
 8005bd8:	f000 f8ae 	bl	8005d38 <_sbrk_r>
 8005bdc:	1c43      	adds	r3, r0, #1
 8005bde:	d00a      	beq.n	8005bf6 <sbrk_aligned+0x36>
 8005be0:	2303      	movs	r3, #3
 8005be2:	1cc5      	adds	r5, r0, #3
 8005be4:	439d      	bics	r5, r3
 8005be6:	42a8      	cmp	r0, r5
 8005be8:	d007      	beq.n	8005bfa <sbrk_aligned+0x3a>
 8005bea:	1a29      	subs	r1, r5, r0
 8005bec:	0020      	movs	r0, r4
 8005bee:	f000 f8a3 	bl	8005d38 <_sbrk_r>
 8005bf2:	3001      	adds	r0, #1
 8005bf4:	d101      	bne.n	8005bfa <sbrk_aligned+0x3a>
 8005bf6:	2501      	movs	r5, #1
 8005bf8:	426d      	negs	r5, r5
 8005bfa:	0028      	movs	r0, r5
 8005bfc:	bd70      	pop	{r4, r5, r6, pc}
 8005bfe:	46c0      	nop			; (mov r8, r8)
 8005c00:	20000334 	.word	0x20000334

08005c04 <_malloc_r>:
 8005c04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005c06:	2203      	movs	r2, #3
 8005c08:	1ccb      	adds	r3, r1, #3
 8005c0a:	4393      	bics	r3, r2
 8005c0c:	3308      	adds	r3, #8
 8005c0e:	0006      	movs	r6, r0
 8005c10:	001f      	movs	r7, r3
 8005c12:	2b0c      	cmp	r3, #12
 8005c14:	d238      	bcs.n	8005c88 <_malloc_r+0x84>
 8005c16:	270c      	movs	r7, #12
 8005c18:	42b9      	cmp	r1, r7
 8005c1a:	d837      	bhi.n	8005c8c <_malloc_r+0x88>
 8005c1c:	0030      	movs	r0, r6
 8005c1e:	f000 f873 	bl	8005d08 <__malloc_lock>
 8005c22:	4b38      	ldr	r3, [pc, #224]	; (8005d04 <_malloc_r+0x100>)
 8005c24:	9300      	str	r3, [sp, #0]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	001c      	movs	r4, r3
 8005c2a:	2c00      	cmp	r4, #0
 8005c2c:	d133      	bne.n	8005c96 <_malloc_r+0x92>
 8005c2e:	0039      	movs	r1, r7
 8005c30:	0030      	movs	r0, r6
 8005c32:	f7ff ffc5 	bl	8005bc0 <sbrk_aligned>
 8005c36:	0004      	movs	r4, r0
 8005c38:	1c43      	adds	r3, r0, #1
 8005c3a:	d15e      	bne.n	8005cfa <_malloc_r+0xf6>
 8005c3c:	9b00      	ldr	r3, [sp, #0]
 8005c3e:	681c      	ldr	r4, [r3, #0]
 8005c40:	0025      	movs	r5, r4
 8005c42:	2d00      	cmp	r5, #0
 8005c44:	d14e      	bne.n	8005ce4 <_malloc_r+0xe0>
 8005c46:	2c00      	cmp	r4, #0
 8005c48:	d051      	beq.n	8005cee <_malloc_r+0xea>
 8005c4a:	6823      	ldr	r3, [r4, #0]
 8005c4c:	0029      	movs	r1, r5
 8005c4e:	18e3      	adds	r3, r4, r3
 8005c50:	0030      	movs	r0, r6
 8005c52:	9301      	str	r3, [sp, #4]
 8005c54:	f000 f870 	bl	8005d38 <_sbrk_r>
 8005c58:	9b01      	ldr	r3, [sp, #4]
 8005c5a:	4283      	cmp	r3, r0
 8005c5c:	d147      	bne.n	8005cee <_malloc_r+0xea>
 8005c5e:	6823      	ldr	r3, [r4, #0]
 8005c60:	0030      	movs	r0, r6
 8005c62:	1aff      	subs	r7, r7, r3
 8005c64:	0039      	movs	r1, r7
 8005c66:	f7ff ffab 	bl	8005bc0 <sbrk_aligned>
 8005c6a:	3001      	adds	r0, #1
 8005c6c:	d03f      	beq.n	8005cee <_malloc_r+0xea>
 8005c6e:	6823      	ldr	r3, [r4, #0]
 8005c70:	19db      	adds	r3, r3, r7
 8005c72:	6023      	str	r3, [r4, #0]
 8005c74:	9b00      	ldr	r3, [sp, #0]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d040      	beq.n	8005cfe <_malloc_r+0xfa>
 8005c7c:	685a      	ldr	r2, [r3, #4]
 8005c7e:	42a2      	cmp	r2, r4
 8005c80:	d133      	bne.n	8005cea <_malloc_r+0xe6>
 8005c82:	2200      	movs	r2, #0
 8005c84:	605a      	str	r2, [r3, #4]
 8005c86:	e014      	b.n	8005cb2 <_malloc_r+0xae>
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	dac5      	bge.n	8005c18 <_malloc_r+0x14>
 8005c8c:	230c      	movs	r3, #12
 8005c8e:	2500      	movs	r5, #0
 8005c90:	6033      	str	r3, [r6, #0]
 8005c92:	0028      	movs	r0, r5
 8005c94:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005c96:	6821      	ldr	r1, [r4, #0]
 8005c98:	1bc9      	subs	r1, r1, r7
 8005c9a:	d420      	bmi.n	8005cde <_malloc_r+0xda>
 8005c9c:	290b      	cmp	r1, #11
 8005c9e:	d918      	bls.n	8005cd2 <_malloc_r+0xce>
 8005ca0:	19e2      	adds	r2, r4, r7
 8005ca2:	6027      	str	r7, [r4, #0]
 8005ca4:	42a3      	cmp	r3, r4
 8005ca6:	d112      	bne.n	8005cce <_malloc_r+0xca>
 8005ca8:	9b00      	ldr	r3, [sp, #0]
 8005caa:	601a      	str	r2, [r3, #0]
 8005cac:	6863      	ldr	r3, [r4, #4]
 8005cae:	6011      	str	r1, [r2, #0]
 8005cb0:	6053      	str	r3, [r2, #4]
 8005cb2:	0030      	movs	r0, r6
 8005cb4:	0025      	movs	r5, r4
 8005cb6:	f000 f82f 	bl	8005d18 <__malloc_unlock>
 8005cba:	2207      	movs	r2, #7
 8005cbc:	350b      	adds	r5, #11
 8005cbe:	1d23      	adds	r3, r4, #4
 8005cc0:	4395      	bics	r5, r2
 8005cc2:	1aea      	subs	r2, r5, r3
 8005cc4:	429d      	cmp	r5, r3
 8005cc6:	d0e4      	beq.n	8005c92 <_malloc_r+0x8e>
 8005cc8:	1b5b      	subs	r3, r3, r5
 8005cca:	50a3      	str	r3, [r4, r2]
 8005ccc:	e7e1      	b.n	8005c92 <_malloc_r+0x8e>
 8005cce:	605a      	str	r2, [r3, #4]
 8005cd0:	e7ec      	b.n	8005cac <_malloc_r+0xa8>
 8005cd2:	6862      	ldr	r2, [r4, #4]
 8005cd4:	42a3      	cmp	r3, r4
 8005cd6:	d1d5      	bne.n	8005c84 <_malloc_r+0x80>
 8005cd8:	9b00      	ldr	r3, [sp, #0]
 8005cda:	601a      	str	r2, [r3, #0]
 8005cdc:	e7e9      	b.n	8005cb2 <_malloc_r+0xae>
 8005cde:	0023      	movs	r3, r4
 8005ce0:	6864      	ldr	r4, [r4, #4]
 8005ce2:	e7a2      	b.n	8005c2a <_malloc_r+0x26>
 8005ce4:	002c      	movs	r4, r5
 8005ce6:	686d      	ldr	r5, [r5, #4]
 8005ce8:	e7ab      	b.n	8005c42 <_malloc_r+0x3e>
 8005cea:	0013      	movs	r3, r2
 8005cec:	e7c4      	b.n	8005c78 <_malloc_r+0x74>
 8005cee:	230c      	movs	r3, #12
 8005cf0:	0030      	movs	r0, r6
 8005cf2:	6033      	str	r3, [r6, #0]
 8005cf4:	f000 f810 	bl	8005d18 <__malloc_unlock>
 8005cf8:	e7cb      	b.n	8005c92 <_malloc_r+0x8e>
 8005cfa:	6027      	str	r7, [r4, #0]
 8005cfc:	e7d9      	b.n	8005cb2 <_malloc_r+0xae>
 8005cfe:	605b      	str	r3, [r3, #4]
 8005d00:	deff      	udf	#255	; 0xff
 8005d02:	46c0      	nop			; (mov r8, r8)
 8005d04:	20000330 	.word	0x20000330

08005d08 <__malloc_lock>:
 8005d08:	b510      	push	{r4, lr}
 8005d0a:	4802      	ldr	r0, [pc, #8]	; (8005d14 <__malloc_lock+0xc>)
 8005d0c:	f000 f850 	bl	8005db0 <__retarget_lock_acquire_recursive>
 8005d10:	bd10      	pop	{r4, pc}
 8005d12:	46c0      	nop			; (mov r8, r8)
 8005d14:	20000474 	.word	0x20000474

08005d18 <__malloc_unlock>:
 8005d18:	b510      	push	{r4, lr}
 8005d1a:	4802      	ldr	r0, [pc, #8]	; (8005d24 <__malloc_unlock+0xc>)
 8005d1c:	f000 f849 	bl	8005db2 <__retarget_lock_release_recursive>
 8005d20:	bd10      	pop	{r4, pc}
 8005d22:	46c0      	nop			; (mov r8, r8)
 8005d24:	20000474 	.word	0x20000474

08005d28 <memset>:
 8005d28:	0003      	movs	r3, r0
 8005d2a:	1882      	adds	r2, r0, r2
 8005d2c:	4293      	cmp	r3, r2
 8005d2e:	d100      	bne.n	8005d32 <memset+0xa>
 8005d30:	4770      	bx	lr
 8005d32:	7019      	strb	r1, [r3, #0]
 8005d34:	3301      	adds	r3, #1
 8005d36:	e7f9      	b.n	8005d2c <memset+0x4>

08005d38 <_sbrk_r>:
 8005d38:	2300      	movs	r3, #0
 8005d3a:	b570      	push	{r4, r5, r6, lr}
 8005d3c:	4d06      	ldr	r5, [pc, #24]	; (8005d58 <_sbrk_r+0x20>)
 8005d3e:	0004      	movs	r4, r0
 8005d40:	0008      	movs	r0, r1
 8005d42:	602b      	str	r3, [r5, #0]
 8005d44:	f7fe fed2 	bl	8004aec <_sbrk>
 8005d48:	1c43      	adds	r3, r0, #1
 8005d4a:	d103      	bne.n	8005d54 <_sbrk_r+0x1c>
 8005d4c:	682b      	ldr	r3, [r5, #0]
 8005d4e:	2b00      	cmp	r3, #0
 8005d50:	d000      	beq.n	8005d54 <_sbrk_r+0x1c>
 8005d52:	6023      	str	r3, [r4, #0]
 8005d54:	bd70      	pop	{r4, r5, r6, pc}
 8005d56:	46c0      	nop			; (mov r8, r8)
 8005d58:	20000470 	.word	0x20000470

08005d5c <__errno>:
 8005d5c:	4b01      	ldr	r3, [pc, #4]	; (8005d64 <__errno+0x8>)
 8005d5e:	6818      	ldr	r0, [r3, #0]
 8005d60:	4770      	bx	lr
 8005d62:	46c0      	nop			; (mov r8, r8)
 8005d64:	20000058 	.word	0x20000058

08005d68 <__libc_init_array>:
 8005d68:	b570      	push	{r4, r5, r6, lr}
 8005d6a:	2600      	movs	r6, #0
 8005d6c:	4c0c      	ldr	r4, [pc, #48]	; (8005da0 <__libc_init_array+0x38>)
 8005d6e:	4d0d      	ldr	r5, [pc, #52]	; (8005da4 <__libc_init_array+0x3c>)
 8005d70:	1b64      	subs	r4, r4, r5
 8005d72:	10a4      	asrs	r4, r4, #2
 8005d74:	42a6      	cmp	r6, r4
 8005d76:	d109      	bne.n	8005d8c <__libc_init_array+0x24>
 8005d78:	2600      	movs	r6, #0
 8005d7a:	f000 f8c3 	bl	8005f04 <_init>
 8005d7e:	4c0a      	ldr	r4, [pc, #40]	; (8005da8 <__libc_init_array+0x40>)
 8005d80:	4d0a      	ldr	r5, [pc, #40]	; (8005dac <__libc_init_array+0x44>)
 8005d82:	1b64      	subs	r4, r4, r5
 8005d84:	10a4      	asrs	r4, r4, #2
 8005d86:	42a6      	cmp	r6, r4
 8005d88:	d105      	bne.n	8005d96 <__libc_init_array+0x2e>
 8005d8a:	bd70      	pop	{r4, r5, r6, pc}
 8005d8c:	00b3      	lsls	r3, r6, #2
 8005d8e:	58eb      	ldr	r3, [r5, r3]
 8005d90:	4798      	blx	r3
 8005d92:	3601      	adds	r6, #1
 8005d94:	e7ee      	b.n	8005d74 <__libc_init_array+0xc>
 8005d96:	00b3      	lsls	r3, r6, #2
 8005d98:	58eb      	ldr	r3, [r5, r3]
 8005d9a:	4798      	blx	r3
 8005d9c:	3601      	adds	r6, #1
 8005d9e:	e7f2      	b.n	8005d86 <__libc_init_array+0x1e>
 8005da0:	08006000 	.word	0x08006000
 8005da4:	08006000 	.word	0x08006000
 8005da8:	08006004 	.word	0x08006004
 8005dac:	08006000 	.word	0x08006000

08005db0 <__retarget_lock_acquire_recursive>:
 8005db0:	4770      	bx	lr

08005db2 <__retarget_lock_release_recursive>:
 8005db2:	4770      	bx	lr

08005db4 <memcpy>:
 8005db4:	2300      	movs	r3, #0
 8005db6:	b510      	push	{r4, lr}
 8005db8:	429a      	cmp	r2, r3
 8005dba:	d100      	bne.n	8005dbe <memcpy+0xa>
 8005dbc:	bd10      	pop	{r4, pc}
 8005dbe:	5ccc      	ldrb	r4, [r1, r3]
 8005dc0:	54c4      	strb	r4, [r0, r3]
 8005dc2:	3301      	adds	r3, #1
 8005dc4:	e7f8      	b.n	8005db8 <memcpy+0x4>

08005dc6 <fmodf>:
 8005dc6:	b570      	push	{r4, r5, r6, lr}
 8005dc8:	1c06      	adds	r6, r0, #0
 8005dca:	1c0d      	adds	r5, r1, #0
 8005dcc:	f000 f818 	bl	8005e00 <__ieee754_fmodf>
 8005dd0:	1c29      	adds	r1, r5, #0
 8005dd2:	1c04      	adds	r4, r0, #0
 8005dd4:	1c30      	adds	r0, r6, #0
 8005dd6:	f7fb f9b5 	bl	8001144 <__aeabi_fcmpun>
 8005dda:	2800      	cmp	r0, #0
 8005ddc:	d10e      	bne.n	8005dfc <fmodf+0x36>
 8005dde:	2100      	movs	r1, #0
 8005de0:	1c28      	adds	r0, r5, #0
 8005de2:	f7fa fb11 	bl	8000408 <__aeabi_fcmpeq>
 8005de6:	2800      	cmp	r0, #0
 8005de8:	d008      	beq.n	8005dfc <fmodf+0x36>
 8005dea:	f7ff ffb7 	bl	8005d5c <__errno>
 8005dee:	2321      	movs	r3, #33	; 0x21
 8005df0:	2100      	movs	r1, #0
 8005df2:	6003      	str	r3, [r0, #0]
 8005df4:	1c08      	adds	r0, r1, #0
 8005df6:	f7fa fced 	bl	80007d4 <__aeabi_fdiv>
 8005dfa:	1c04      	adds	r4, r0, #0
 8005dfc:	1c20      	adds	r0, r4, #0
 8005dfe:	bd70      	pop	{r4, r5, r6, pc}

08005e00 <__ieee754_fmodf>:
 8005e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e02:	004b      	lsls	r3, r1, #1
 8005e04:	085f      	lsrs	r7, r3, #1
 8005e06:	2b00      	cmp	r3, #0
 8005e08:	d008      	beq.n	8005e1c <__ieee754_fmodf+0x1c>
 8005e0a:	22ff      	movs	r2, #255	; 0xff
 8005e0c:	0043      	lsls	r3, r0, #1
 8005e0e:	0006      	movs	r6, r0
 8005e10:	085b      	lsrs	r3, r3, #1
 8005e12:	05d2      	lsls	r2, r2, #23
 8005e14:	4293      	cmp	r3, r2
 8005e16:	da01      	bge.n	8005e1c <__ieee754_fmodf+0x1c>
 8005e18:	4297      	cmp	r7, r2
 8005e1a:	dd05      	ble.n	8005e28 <__ieee754_fmodf+0x28>
 8005e1c:	f7fa fea4 	bl	8000b68 <__aeabi_fmul>
 8005e20:	1c01      	adds	r1, r0, #0
 8005e22:	f7fa fcd7 	bl	80007d4 <__aeabi_fdiv>
 8005e26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005e28:	42bb      	cmp	r3, r7
 8005e2a:	dbfc      	blt.n	8005e26 <__ieee754_fmodf+0x26>
 8005e2c:	0fc4      	lsrs	r4, r0, #31
 8005e2e:	07e4      	lsls	r4, r4, #31
 8005e30:	42bb      	cmp	r3, r7
 8005e32:	d103      	bne.n	8005e3c <__ieee754_fmodf+0x3c>
 8005e34:	4b31      	ldr	r3, [pc, #196]	; (8005efc <__ieee754_fmodf+0xfc>)
 8005e36:	0f64      	lsrs	r4, r4, #29
 8005e38:	58e0      	ldr	r0, [r4, r3]
 8005e3a:	e7f4      	b.n	8005e26 <__ieee754_fmodf+0x26>
 8005e3c:	4210      	tst	r0, r2
 8005e3e:	d137      	bne.n	8005eb0 <__ieee754_fmodf+0xb0>
 8005e40:	207e      	movs	r0, #126	; 0x7e
 8005e42:	021a      	lsls	r2, r3, #8
 8005e44:	4240      	negs	r0, r0
 8005e46:	2a00      	cmp	r2, #0
 8005e48:	dc2f      	bgt.n	8005eaa <__ieee754_fmodf+0xaa>
 8005e4a:	22ff      	movs	r2, #255	; 0xff
 8005e4c:	05d2      	lsls	r2, r2, #23
 8005e4e:	420a      	tst	r2, r1
 8005e50:	d134      	bne.n	8005ebc <__ieee754_fmodf+0xbc>
 8005e52:	227e      	movs	r2, #126	; 0x7e
 8005e54:	023d      	lsls	r5, r7, #8
 8005e56:	4252      	negs	r2, r2
 8005e58:	2d00      	cmp	r5, #0
 8005e5a:	da2c      	bge.n	8005eb6 <__ieee754_fmodf+0xb6>
 8005e5c:	0005      	movs	r5, r0
 8005e5e:	357e      	adds	r5, #126	; 0x7e
 8005e60:	db2f      	blt.n	8005ec2 <__ieee754_fmodf+0xc2>
 8005e62:	2380      	movs	r3, #128	; 0x80
 8005e64:	0276      	lsls	r6, r6, #9
 8005e66:	0a76      	lsrs	r6, r6, #9
 8005e68:	041b      	lsls	r3, r3, #16
 8005e6a:	4333      	orrs	r3, r6
 8005e6c:	0015      	movs	r5, r2
 8005e6e:	357e      	adds	r5, #126	; 0x7e
 8005e70:	db2c      	blt.n	8005ecc <__ieee754_fmodf+0xcc>
 8005e72:	024d      	lsls	r5, r1, #9
 8005e74:	2180      	movs	r1, #128	; 0x80
 8005e76:	0a6d      	lsrs	r5, r5, #9
 8005e78:	0409      	lsls	r1, r1, #16
 8005e7a:	4329      	orrs	r1, r5
 8005e7c:	1a80      	subs	r0, r0, r2
 8005e7e:	1a5d      	subs	r5, r3, r1
 8005e80:	2800      	cmp	r0, #0
 8005e82:	d129      	bne.n	8005ed8 <__ieee754_fmodf+0xd8>
 8005e84:	2d00      	cmp	r5, #0
 8005e86:	db00      	blt.n	8005e8a <__ieee754_fmodf+0x8a>
 8005e88:	002b      	movs	r3, r5
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d0d2      	beq.n	8005e34 <__ieee754_fmodf+0x34>
 8005e8e:	2180      	movs	r1, #128	; 0x80
 8005e90:	0409      	lsls	r1, r1, #16
 8005e92:	428b      	cmp	r3, r1
 8005e94:	db27      	blt.n	8005ee6 <__ieee754_fmodf+0xe6>
 8005e96:	0011      	movs	r1, r2
 8005e98:	317e      	adds	r1, #126	; 0x7e
 8005e9a:	db27      	blt.n	8005eec <__ieee754_fmodf+0xec>
 8005e9c:	4918      	ldr	r1, [pc, #96]	; (8005f00 <__ieee754_fmodf+0x100>)
 8005e9e:	327f      	adds	r2, #127	; 0x7f
 8005ea0:	1858      	adds	r0, r3, r1
 8005ea2:	05d2      	lsls	r2, r2, #23
 8005ea4:	4320      	orrs	r0, r4
 8005ea6:	4310      	orrs	r0, r2
 8005ea8:	e7bd      	b.n	8005e26 <__ieee754_fmodf+0x26>
 8005eaa:	3801      	subs	r0, #1
 8005eac:	0052      	lsls	r2, r2, #1
 8005eae:	e7ca      	b.n	8005e46 <__ieee754_fmodf+0x46>
 8005eb0:	15d8      	asrs	r0, r3, #23
 8005eb2:	387f      	subs	r0, #127	; 0x7f
 8005eb4:	e7c9      	b.n	8005e4a <__ieee754_fmodf+0x4a>
 8005eb6:	3a01      	subs	r2, #1
 8005eb8:	006d      	lsls	r5, r5, #1
 8005eba:	e7cd      	b.n	8005e58 <__ieee754_fmodf+0x58>
 8005ebc:	15fa      	asrs	r2, r7, #23
 8005ebe:	3a7f      	subs	r2, #127	; 0x7f
 8005ec0:	e7cc      	b.n	8005e5c <__ieee754_fmodf+0x5c>
 8005ec2:	257e      	movs	r5, #126	; 0x7e
 8005ec4:	426d      	negs	r5, r5
 8005ec6:	1a2d      	subs	r5, r5, r0
 8005ec8:	40ab      	lsls	r3, r5
 8005eca:	e7cf      	b.n	8005e6c <__ieee754_fmodf+0x6c>
 8005ecc:	217e      	movs	r1, #126	; 0x7e
 8005ece:	4249      	negs	r1, r1
 8005ed0:	1a89      	subs	r1, r1, r2
 8005ed2:	408f      	lsls	r7, r1
 8005ed4:	0039      	movs	r1, r7
 8005ed6:	e7d1      	b.n	8005e7c <__ieee754_fmodf+0x7c>
 8005ed8:	005b      	lsls	r3, r3, #1
 8005eda:	2d00      	cmp	r5, #0
 8005edc:	db01      	blt.n	8005ee2 <__ieee754_fmodf+0xe2>
 8005ede:	d0a9      	beq.n	8005e34 <__ieee754_fmodf+0x34>
 8005ee0:	006b      	lsls	r3, r5, #1
 8005ee2:	3801      	subs	r0, #1
 8005ee4:	e7cb      	b.n	8005e7e <__ieee754_fmodf+0x7e>
 8005ee6:	005b      	lsls	r3, r3, #1
 8005ee8:	3a01      	subs	r2, #1
 8005eea:	e7d2      	b.n	8005e92 <__ieee754_fmodf+0x92>
 8005eec:	217e      	movs	r1, #126	; 0x7e
 8005eee:	4249      	negs	r1, r1
 8005ef0:	1a8a      	subs	r2, r1, r2
 8005ef2:	4113      	asrs	r3, r2
 8005ef4:	4323      	orrs	r3, r4
 8005ef6:	0018      	movs	r0, r3
 8005ef8:	e795      	b.n	8005e26 <__ieee754_fmodf+0x26>
 8005efa:	46c0      	nop			; (mov r8, r8)
 8005efc:	08005ff8 	.word	0x08005ff8
 8005f00:	ff800000 	.word	0xff800000

08005f04 <_init>:
 8005f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f06:	46c0      	nop			; (mov r8, r8)
 8005f08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f0a:	bc08      	pop	{r3}
 8005f0c:	469e      	mov	lr, r3
 8005f0e:	4770      	bx	lr

08005f10 <_fini>:
 8005f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f12:	46c0      	nop			; (mov r8, r8)
 8005f14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f16:	bc08      	pop	{r3}
 8005f18:	469e      	mov	lr, r3
 8005f1a:	4770      	bx	lr
